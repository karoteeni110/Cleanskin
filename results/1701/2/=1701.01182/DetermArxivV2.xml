<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>Parabolic Catalan numbers count efficient inputs\
for Gessel-Viennot flagged Schur function determinant</title>
    <abstract> </abstract>
  </head>
  <body>
<outline text="Introduction" _note="No particular background is needed to read this largely self-contained&#10;paper. Several prior results that are needed in Sections 2 and 8 and for&#10;Corollaries \[cor777.2.5\] and \[cor777.3\] were obtained in the&#10;predecessor paper .&#10;&#10;Fix throughout the paper. Also fix a partition that has nonnegative&#10;parts; this is a list of weakly decreasing nonnegative integers. Flagged&#10;Schur functions are polynomials in that were introduced by Lascoux and&#10;Sch[ü]{}tzenberger in 1982 as they studied Schubert polynomials. Given&#10;an -tuple such that , the flagged Schur function indexed by and is&#10;defined to be the sum of the content weight monomial over the&#10;semistandard tableaux on the shape of whose values are row-wise bounded&#10;by the respective entries of . Sometimes for is also required to ensure&#10;nonvanishing. However, in this paper the notation will more generally&#10;denote this sum when is only required to satisfy for .&#10;&#10;Ira Gessel and X.G. Viennot were able to express a flagged Schur&#10;function with a determinant by modelling its tableaux with&#10;nonintersecting -tuples of lattice paths: Their initial set-up fixed a&#10;sequence of lattice points to serve as sources for the respective paths,&#10;to which were assigned sinks from a set of fixed lattice points in any&#10;of the possible ways. These “terminal” lattice points were specified in&#10;terms of the entries of and . Initially was not required. Most of the&#10;resulting -tuples of lattice paths contained intersections, and the&#10;desired tableaux corresponded only to the nonintersecting -tuples of&#10;lattice paths for which the sinks were assigned from the set of&#10;terminals in their “native” order. The terms in the signed sum expansion&#10;of the proposed determinant gave the weights that they assigned to the&#10;-tuples of paths. Then they introduced a sign reversing involution that&#10;paired up the intersecting -tuples of paths so that the weights for&#10;these cancelled each other out from the expansion, leaving only the&#10;signed sum of the weights for the nonintersecting -tuples of paths. For&#10;this method to give the tableau weight sum , they needed to require that&#10;the set of terminals specified by the pair satisfied their&#10;“nonpermutable” property: This required that any -tuple of lattice paths&#10;that had a sequence of sinks coming from a nontrivially permuted&#10;assignment of the terminals had to contain an intersection. As Stanley&#10;parenthetically noted in his presentation of their work in Theorem 2.7.1&#10;of , for any it can be seen that requiring will guarantee that is&#10;nonpermutable. Directly in terms of the entries of and , our main result&#10;gives a condition for a pair to be nonpermutable that is necessary as&#10;well as being sufficient. Although the references , , and each provide&#10;determinants for skew flagged Schur functions, we limit our&#10;considerations to the general sums on nonskew shapes.&#10;&#10;Demazure characters were introduced by Demazure in 1974 when he studied&#10;singularities of Schubert varieties. Coincidences between the Demazure&#10;characters for (key polynomials) and flagged Schur functions were&#10;studied by Reiner and Shimozono and then by Postnikov and Stanley . When&#10;the parts of are not distinct, there are multiple row bound -tuples that&#10;will produce the same polynomial via the sum of tableau weights&#10;construction on the shape of . The predecessor paper to this paper&#10;sharpened, deepened, and extended the results of and . Much machinery&#10;was introduced and several special kinds of -tuples were defined. The&#10;foremost kinds were the “-312-avoiding permutations” and the “gapless&#10;-tuples”. The crucial information for an -tuple was distilled into its&#10;“critical list”, as its “-core” was being computed.&#10;&#10;It turns out that the machinery and notions that were introduced in for&#10;the purposes of that paper are surprisingly well-suited to solving the&#10;problem of characterizing the nonpermutable pairs that was implicitly&#10;raised by Stanley’s Theorem 2.7.1 parenthetical remark. In addition to&#10;re-using the notion of gapless -tuple and the closely related notion of&#10;“gapless core -tuple”, here we also need to extend the -ceiling flag map&#10;of so that we can introduce a new condition that requires . Our main&#10;result, Theorem \[theorem777.1\], presents our characterization of the&#10;nonpermutable pairs . Its two halves are proved with Proposition&#10;\[prop434.7\] and \[prop581.6\]. Corollary \[cor777.2\] gives the&#10;determinant expression for when satisfies the characterization with&#10;respect to . Corollary \[cor777.2.5\] indicates how results of can be&#10;used to extend the realm of Corollary \[cor777.2\]. Corollary&#10;\[cor777.3\] describes how Corollary \[cor777.2\] can be used to give a&#10;determinant expression for certain Demazure characters; this improves&#10;upon Corollary 14.6 of .&#10;&#10;In the last section, as in , we define two row bound -tuples to be&#10;equivalent if the sets of tableaux on the shape that satisfy these&#10;bounds are the same. Proposition \[prop826.6\] describes the equivalence&#10;classes of this relation within the set of row bound -tuples that meet&#10;the criteria required to use the determinant expression. Within an&#10;equivalence class, one can seek the -tuple for which the total number of&#10;monomials appearing in the corresponding determinant is as small as&#10;possible. Proposition \[prop826.9\] identifies these “maximum&#10;efficiency” -tuples as being the gapless -tuples that appeared in&#10;Corollary \[cor777.2.5\]. Corollary \[cor826.12\] then notes that the&#10;number of gapless -tuples was shown in to be the number of -312-avoiding&#10;permutations; there this number was taken to be the definition of the&#10;“parabolic Catalan number” indexed by and .&#10;&#10;When one sets all , no special row bounds are imposed upon the tableaux&#10;and the resulting polynomial is the ordinary Schur function . The&#10;Gessel-Viennot method made the Jacobi-Trudi determinant expression of&#10;Theorem 7.16.1 of for more efficient by reducing the number of variables&#10;that appeared in most of its entries. When the parts of are not&#10;distinct, Proposition \[prop826.9\] says that Corollary \[cor777.2.5\]&#10;provides a determinant for that is even more efficient in this regard.&#10;&#10;One of the central themes of the predecessor paper is continued into&#10;this paper. Given a set , an “-tuple” is an -tuple with entries from&#10;that is equipped with “dividers” between some of its entries. In these&#10;two papers the study of any one of the interrelated phenomena concerning&#10;sets of tableaux on the shape begins with the determination of the set&#10;of the lengths of the columns in that are less than . Much of the&#10;machinery needed to study these phenomena is formulated in terms of&#10;-tuples without reference to any other aspects of : Five preliminary&#10;sections of take place in the world of -tuples, before shapes and&#10;tableaux are introduced. Continuing a notation convention of , after has&#10;been introduced we replace ‘’ in prefixes and subscripts with ‘’. This&#10;reduces clutter while explicitly retaining the dependence upon , which&#10;setting would lose.">
</outline>
<outline text="Definitions for -tuples" _note="Let and be nonnegative integers. Define and . Except for , lower case&#10;Greek letters indicate -tuples of non-negative integers; their entries&#10;are denoted with the same letter. An -TUPLE consists of ENTRIES indexed&#10;by INDICES , which together form PAIRS . Let denote the poset of -tuples&#10;ordered by entrywise comparison. Fix an -tuple . A SUBSEQUENCE of is a&#10;sequence of the form for some . A STAIRCASE OF WITHIN A SUBINTERVAL for&#10;some is a maximal subsequence of whose entries increase by 1. A PLATEAU&#10;in is a maximal constant nonempty subsequence of . An -tuple is a FLAG&#10;if . An UPPER TUPLE is an -tuple such that for .&#10;&#10;Fix . Denote the elements of by for some . Set and . We use the for to&#10;specify the locations of “dividers” within -tuples: Let be an -tuple. On&#10;the graph of in the first quadrant draw vertical lines at for and some&#10;small . These lines indicate the right ends of the CARRELS OF for . An&#10;-TUPLE is an -tuple that has been equipped with these dividers. Fix an&#10;-tuple ; we portray it by . Let denote the subposet of consisting of&#10;upper -tuples. Let denote the subposet of consisting of upper flags. Fix&#10;. The carrel has indices. An -INCREASING TUPLE is an -tuple such that&#10;for . Let denote the subset of consisting of -increasing upper tuples.&#10;&#10;We distill the crucial information from an upper -tuple into a skeletal&#10;substructure called its “critical list”, and at the same time define two&#10;functions from to . Fix . To launch a running example, take , and . We&#10;will be constructing the images and of under -CORE and -PLATFORM maps&#10;and . Fix . Working within the carrel from the right we recursively find&#10;for : At the RIGHTMOST CRITICAL PAIR OF IN THE CARREL is . Set .&#10;Recursively attempt to increase by 1: If it exists, the NEXT CRITICAL&#10;PAIR TO THE LEFT is , where is maximal such that . For , write and set&#10;and . Otherwise, let be the last value of attained. For , write and&#10;again set and . The SET OF CRITICAL PAIRS OF FOR THE CARREL is .&#10;Equivalently, here is maximal such that there exists indices such that&#10;and for . The -CRITICAL LIST FOR is the sequence of its sets of critical&#10;pairs. In our example and and . It can be seen that the -core of and the&#10;-platform of have the same critical list as . It can also be seen that&#10;and that for . If is a critical pair, we call a CRITICAL INDEX and a&#10;CRITICAL ENTRY. We say that an -critical list is a FLAG -CRITICAL LIST&#10;if whenever we have , where . The example critical list is a flag&#10;critical list. If , then its -critical list is a flag -critical list.&#10;&#10;A GAPLESS CORE -TUPLE is an upper -tuple whose critical list is a flag&#10;critical list. Let denote the set of gapless core -tuples. The example&#10;above is a gapless core -tuple. A GAPLESS -TUPLE is an -increasing upper&#10;tuple whose critical list is a flag critical list. Let denote the set of&#10;gapless -tuples. The example above is a gapless -tuple. Originally a&#10;gapless -tuple was defined in Section 3 of to be an -increasing upper&#10;tuple such that whenever there exists with , then and the first entries&#10;of the carrel are . Originally a gapless core -tuple was defined in&#10;Section 3 of to be an upper -tuple whose -core is a gapless -tuple.&#10;Those original definitions were shown there to be equivalent to these&#10;definitions in Proposition 4.2. An upper -tuple is BOUNDED BY ITS&#10;PLATFORM if . Let denote the set of such upper -tuples. The example&#10;above is not bounded by its platform. Clearly and . From the definition&#10;of , it is clear that and . Since by definition, we have .&#10;&#10;We illustrate some recent definitions. First consider an -increasing&#10;upper tuple : Each carrel subsequence of is a concatenation of the&#10;staircases within the carrel in which the largest entries are the&#10;critical entries for the carrel. Now consider the definition of a&#10;gapless -tuple, which begins by considering a : This definition is&#10;equivalent to requiring for all that if , then the leftmost staircase&#10;within the carrel must contain an entry .&#10;&#10;An -CEILING FLAG is an upper flag that is a concatenation of plateaus&#10;whose rightmost pairs are the -critical pairs of . Let denote the set of&#10;-ceiling flags. It can be seen that the restriction of the -platform map&#10;from to is the -ceiling map defined near the end of Section 5 of . So by&#10;that Proposition 5.4(ii) this restriction of is a bijection from to with&#10;inverse , and for the upper flag is the unique -ceiling flag that has&#10;the same flag -critical list as .">
</outline>
<outline text="Definitions of shapes, tableaux, polynomials" _note="A PARTITION is an -tuple such that . The SHAPE of , also denoted ,&#10;consists of left justified rows with boxes. We denote its column lengths&#10;by . Since the columns were more important than the rows in , the boxes&#10;of are transpose-indexed by pairs such that and . Define to be the set&#10;of distinct column lengths of that are less than . Using the language of&#10;Section 2 with , note that for one has for . For the coordinates of the&#10;boxes in the CLIFF form the set . We will replace ‘’ by ‘’ in subscripts&#10;and in prefixes when using concepts from Section 2 via .&#10;&#10;A (SEMISTANDARD) TABLEAU OF SHAPE is a filling of with values from that&#10;strictly increase from north to south and weakly increase from west to&#10;east. Let denote the set of tableaux of shape . Fix . For , we denote&#10;the one column “subtableau” on the boxes in the column by . Here for the&#10;tableau value in the row is denoted . To define the CONTENT OF , for&#10;take to be the number of values in equal to . Let be indeterminants. The&#10;MONOMIAL of is , where is the content .&#10;&#10;Let be a -tuple. We define the ROW BOUND SET OF TABLEAUX to be . As in&#10;Section 12 of , it can be seen that is nonempty if and only if . Fix .&#10;As noted in Section 12 of , it can be seen that has a unique maximal&#10;element. In we introduced the ROW BOUND SUM , sum over . To connect to&#10;the literature, for we also give the names FLAG BOUND SET and FLAG SCHUR&#10;POLYNOMIAL to and the flagged Schur function respectively. As in , for&#10;it is also useful to give the names GAPLESS CORE BOUND SET and GAPLESS&#10;CORE SCHUR POLYNOMIAL to and respectively.&#10;&#10;Proposition 12.1 of stated that the collection of sets and of are the&#10;same. Thus the gapless core Schur polynomials are already available as&#10;flag Schur polynomials. However, the additional indexing -tuples from&#10;are useful. The following theme from will be continued: Here we will&#10;prove that the row bound sums for are not “good” for the consideration&#10;at hand.">
</outline>
<outline text="Lattice paths and Gessel-Viennot determinant" _note="We introduce -tuples of weighted lattice paths to model the tableaux in&#10;the row bound tableau set . To obtain a close visual correspondence we&#10;first flip the - plane containing the paths vertically so that its first&#10;quadrant is to the lower right (southeast) of the origin on the page.&#10;Re-use our indexing of boxes in shapes with transposed matrix&#10;coordinates to coordinatize the points in this first quadrant of : Let&#10;and . The lattice point is units to the east of and units to the south&#10;of . For , the directed line segment from to is an EASTERLY STEP OF&#10;DEPTH . A (LATTICE) PATH WITH SOURCE AND SINK is a connected set&#10;incident to and that is the union of easterly steps and SOUTHERLY STEPS.&#10;The notation indicates that an eastbound path arrives at , turns right&#10;and proceeds south to , turns left and proceeds east to , and then turns&#10;right and proceeds south. An -PATH is an -tuple of paths such that the&#10;component path has source for .&#10;&#10;Let . The points are TERMINALS and is a TERMINAL PAIR. This&#10;“strictification” of ensures that the longitudes of the terminals are&#10;distinct. Initially our -paths will use the terminals in this order as&#10;sinks for their respective components. Given such an -path , as in the&#10;proof of Theorem 7.16.1 of we attempt to create a corresponding tableau&#10;. For each we record the weakly increasing depths of the successive&#10;easterly steps in the path from left to right in the boxes of the row of&#10;the shape : Here the easterly step in from to is recorded as the value&#10;in the box for . The last value in the row cannot exceed . It can be&#10;seen that these values strictly increase down each column of if and only&#10;if there are no intersections among the for . Let denote the set of such&#10;DISJOINT -paths. There is at least one such disjoint -path if and only&#10;if is upper: To confirm this, with the correspondence above re-use the&#10;observations made near the beginning of Section 12 of that addressed the&#10;questions of when the set is empty and nonempty. When is upper, it can&#10;be seen that the recording process is bijective to the set . Since it&#10;will be seen that the cliffs of play a crucial role, we now determine&#10;and regard as being a -tuple. Summarizing:&#10;&#10;\[fact315.5\]We have if and only if . For , the recording process is a&#10;bijection from the set of disjoint -paths to the row bound tableau set .&#10;&#10;Fix . To obtain the determinant expression for we will need to consider&#10;more general -paths and introduce weights. Let be an -path with any&#10;sinks. Assigning a weight monomial to in the following fashion emulates&#10;our assignment of the weight to a tableau when , and it also extends the&#10;weight rule to all -paths. For assign the weight to each easterly step&#10;of depth in the path , and then multiply these weights over its easterly&#10;steps. Multiply the weights of the component paths to produce a monomial&#10;we denote . When the sinks of are the terminals from in their usual&#10;order, it can be seen that the multivariate generating function is our&#10;row bound sum . Let , and set . If we sum the weights that are assigned&#10;to just one path as it varies over all paths from to , we produce the&#10;COMPLETE HOMOGENEOUS SYMMETRIC FUNCTION in the variables : Here for ,&#10;and otherwise , sum over .&#10;&#10;We next consider -paths that use the same terminals, but in a permuted&#10;order, for their list of sinks. Let be a permutation of . Let denote the&#10;list of terminals . Let denote the set of disjoint -paths with&#10;respective sinks . The terminal pair is NONPERMUTABLE if when .&#10;&#10;Here is our non-skew version of Theorem 2.7.1 of ; as in Theorem 7.16.1&#10;of we have replaced the disjoint -paths with the corresponding tableaux:&#10;&#10;\[prop315.6\]Let . If the terminal pair is nonpermutable, then the row&#10;bound sum is given by the determinant .&#10;&#10;To produce this expression with Theorem 2.7.1 of , use the remark above&#10;that expressed as the generating function and note that . Theorem 2.7.1&#10;was proved with a signed involution pairing cancellation argument, as in&#10;.">
</outline>
<outline text="Main results" _note="Our main result combines the forthcoming Propositions \[prop434.7\] and&#10;\[prop581.6\]:&#10;&#10;\[theorem777.1\]Let be a partition and let be an upper -tuple. The&#10;terminal pair is nonpermutable if and only if is a gapless core -tuple&#10;that is bounded by its platform.&#10;&#10;So under these circumstances we can employ the Gessel-Viennot method, as&#10;noted in Proposition \[prop315.6\]:&#10;&#10;\[cor777.2\]Let . If then .&#10;&#10;Although this determinant is not guaranteed to “work” when , given our&#10;quotes in Section 8 of facts from the polynomial for such a can be&#10;computed with the determinant using instead of itself. An example of the&#10;failure of the determinant for such a is given before Lemma&#10;\[lemma434.5\].&#10;&#10;\[cor777.2.5\]Let . Set . If then .&#10;&#10;At the end of Section 14 of we promised to give a determinant expression&#10;for certain Demazure characters (key polynomials) here. General Demazure&#10;characters for can be recursively defined with divided differences as&#10;noted in Section 1 of or defined as a sum of over a certain set of&#10;semistandard tableaux as in Section 14 of . Given that , the next&#10;statement is implied by Corollary \[cor777.2\] and Theorem 14.2(ii) of .&#10;For this result that theorem gives . Consult Section 3 of for the&#10;definitions of the -permutations and the map .&#10;&#10;\[cor777.3\]Let be a partition and let be a -permutation. If is&#10;-312-avoiding, then is a gapless -tuple and .&#10;&#10;A “less efficient” (in the sense of our Section 8) version of this&#10;expression appeared in the proof of Corollary 14.6 of when Postnikov and&#10;Stanley applied their skew flagged Schur function determinant identity&#10;Equation 13.1 to their .">
</outline>
<outline text="Necessary condition for nonpermutability" _note="Let . We prepare for two proofs by constructing an -path for each . To&#10;see that each , we also describe its corresponding (clearly&#10;semistandard) tableau . Launching a running example, take and and . Set&#10;. Here . Let . For example, take . For set for . The corresponding paths&#10;are . Six of these eight paths are shown with dots in Figure 6.1. Let .&#10;Let be such that . For set . For set . The corresponding paths are . For&#10;set for . The corresponding paths are . The dots indicate the depths on&#10;the ending longitudes of the paths.&#10;&#10;For a determinant example pertinent to the following lemma, take , and .&#10;Note that , and so this lemma will imply that is not nonpermutable. Here&#10;, but the determinant of Proposition \[prop315.6\] evaluates to .&#10;&#10;\[lemma434.5\]If , then fails to be nonpermutable.&#10;&#10;Set and . In the example we have . Since is a -tuple and for , the&#10;failure of&#10;&#10;Figure 6.1. Rewiring four component paths produces a nonpermutability&#10;violation.&#10;&#10;boundedness for cannot occur in this last carrel. Let be such that there&#10;exists such that , and then let be maximal such that . So is not a&#10;critical index, since . Let be the leftmost critical index in such that&#10;. Here we have , and . Here implies . Since we have , which implies .&#10;Now refer to the -path constructed above for this . We rewire the last&#10;part of its to produce a new path as follows: Rather than finishing with&#10;, the new path finishes with . Four rewirings are shown with solid&#10;paths. Here reaches , goes one unit to the south, then turns left onto&#10;the latitude and goes units to the east, and then turns right to go&#10;straight south until it ends at . This new southerly edge is not in use&#10;by (or a later path): If , then the longitude at is not used by any&#10;component of since here implies that this longitude is strictly to the&#10;east of the longitude on which finishes. If , note that because is a&#10;critical index. So here the southernmost point reached by on its new&#10;briefly used longitude at is strictly to the north of the northernmost&#10;point on this longitude used by , which descended to the depth on the&#10;longitude to the west. Either way, for , next successively rewire the&#10;finishes of to respectively produce finishes for the paths as follows:&#10;Rather than travelling , the new path travels . Here is finishing by&#10;turning right one step early, using one (or more) new southerly step(s),&#10;and then using the final (possibly empty) “southerly stilt” that had&#10;been using to finish. It can be seen that the “further” new southerly&#10;steps that could be used by are not used by . No intersections among&#10;these paths occur since the right turns that are each being executed one&#10;easterly step early are being coordinated along a staircase where .&#10;Given the choices of and , for we have . So for . Hence does not&#10;intersect for . When set . It can be seen that none of the rewired paths&#10;intersect any of these original paths. We have constructed a disjoint&#10;-path whose respective sinks form a nontrivial permutation of the&#10;original ordered terminals. Therefore .&#10;&#10;For an example pertinent to the following lemma, take , and . Note that&#10;, and so this lemma will imply that is not nonpermutable. Here , but the&#10;determinant of Proposition \[prop315.6\] evaluates to .&#10;&#10;\[lemma434.6\]If , then fails to be nonpermutable.&#10;&#10;If apply Lemma \[lemma434.5\]; otherwise . Set and . Having failing to&#10;be a gapless core -tuple is equivalent to having failing to be a gapless&#10;-tuple. The only critical entry in the last carrel is . So there cannot&#10;be a failure of -gapless based upon having . Let be such that fails to&#10;be -gapless based upon having , where is the leftmost critical index in&#10;the carrel . Set . In each of the two cases below we refer to the -path&#10;for this constructed above. Note that . Since in each case we have ,&#10;which implies . These facts will allow us to rewire the path to produce&#10;the path in nearly the same fashion as in the previous proof. The only&#10;difference is that the new path now has to make additional easterly&#10;steps just before reaching its finishing longitude of . If , then the&#10;reasoning used in the ‘’ case in the preceding proof to see that the&#10;southerly edge on the longitude from depth to depth is not in use by can&#10;be re-used here. Here is the only critical index for the carrel . If ,&#10;the reasoning used in the ‘’ case in the preceding proof to see that the&#10;early “jog” to the right is acceptable can be re-used here. Here is the&#10;smallest critical index greater than . Either way, for , next&#10;successively rewire to respectively produce paths as in the previous&#10;proof. Then rewire the path to produce the path in nearly the same&#10;fashion as in the previous proof. The only difference is that the new&#10;path now makes fewer easterly steps just before reaching its finishing&#10;longitude of . The observation in the previous proof concerning the&#10;coordination of the right turns among the shifted modified paths needs a&#10;tiny modification to account for this. In each case the fact that is the&#10;smallest critical index larger than implies for . Since , we have for .&#10;The rest of this proof is the same as the end of the previous proof.&#10;&#10;Combine the contrapositives of these two lemmas:&#10;&#10;\[prop434.7\]Let . If is nonpermutable, then .">
</outline>
<outline text="Sufficient condition for nonpermutability" _note="To prove the converse of Proposition \[prop434.7\], we will need:&#10;&#10;\[lemma581.5\]Let . Set . Let be a permutation of . Let . For each , the&#10;component of must end with .&#10;&#10;To avoid forming the inverse of and using double subscripts, we sidestep&#10;by refering to the original indices for the terminals. Let be a critical&#10;index for . Let be the largest critical index that is less than ; if is&#10;the leftmost critical index then take . Here for . For such , let denote&#10;the component of that sinks at . The claim is true for since . Let&#10;decrement from to and assume the claim is true for . So each ends with .&#10;Set . Note that . If there is nothing to show. Otherwise and imply that&#10;. By the induction we see that is unavailable to for . So this path must&#10;pass through . Then it must finish with .&#10;&#10;Stanley remarked in Theorem 2.7.1 of that is nonpermutable when is a&#10;flag. Since , the following proposition extends that remark. His remark&#10;can be justified with either of the arguments that we describe within&#10;Case (i) of this proof, but referring to rather than to .&#10;&#10;\[prop581.6\]Let . If , then is nonpermutable.&#10;&#10;Let be a permutation of such that . For the sake of contradiction&#10;suppose . Find a descent in and let be such that . Set . Take . Set . By&#10;the lemma, without loss of generality we may revamp by replacing (with&#10;respect to their original indexing) the sequence of depths of its&#10;terminals with the sequence of shallower depths . This truncates its&#10;original paths by deleting their final stilts. We consider the&#10;components and of . Here arises at and sinks at . Later arises at and&#10;sinks at . Comparing the starting and finishing longitudes for to those&#10;for , we have and . So every longitude that is visited by is later&#10;visited by the longer . Set ; the earlier path finishes on the longitude&#10;at . Let’s say that the later path first reaches the longitude at on the&#10;latitude at , for some .\&#10;(i) First suppose that , which is the finishing depth of on the&#10;longitude at . It is topologically evident that the path must intersect&#10;the path ; this contradicts . (For an explicit discrete proof, consider&#10;the minimum and maximum depths used on each of the longitudes visited by&#10;both and . Inequalities and equalities among these depths can be used to&#10;find a longitude on which and intersect.)\&#10;(ii) Otherwise we have . See Figure 7.1. Since cannot exceed the&#10;finishing depth for , we have . Hence . But is -increasing. This forces&#10;for some . Set . Since is -gapless we have and , . Starting at the sink&#10;of and moving exactly to the&#10;&#10;[1.3125in]{}[1.3125in]{}&#10;&#10;Figure 7.1. Paths and successively sink at terminals\&#10; and .&#10;&#10;southwest, we note that the points forming a staircase are terminals&#10;that are serving as sinks for some paths other than . Since and are&#10;paths, we have and . The source of is exactly to the southwest of the&#10;source of by diagonal steps. Since the source of is weakly to the west&#10;of the longitude at , if the source of is on one of the latitudes&#10;appearing in the staircase it must be weakly to the west of the point of&#10;the staircase on that latitude. This implies that the source of is not&#10;on the same side of this staircase as . This is also clear if the source&#10;of is on a shallower latitude. Since the path originates on the&#10;longitude at and reaches with , it must intersect this staircase. This&#10;contradicts . Hence is impossible when .">
</outline>
<outline text="Equivalence and efficiency" _note="We group the valid -tuple inputs for computing row bound sums using the&#10;Gessel-Viennot method into equivalence classes, and identify the most&#10;efficient -tuple within each class.&#10;&#10;When has distinct parts, the row ending values for the unique maximal&#10;element of are the entries of . Hence the sets for are distinct in this&#10;case. For general , as in Section 12 of , for define when . Proposition&#10;12.3(i) of stated that the sets could be precisely labelled by requiring&#10;, and that these -increasing upper tuples are the minimal elements of&#10;the equivalence classes in for . Proposition 12.2 said that the results&#10;in Sections 4 and 5 of for could be used for by taking . Lemma 5.1(i)&#10;there said that are equivalent exactly when or when they have the same&#10;critical list. Since the are not valid -tuple Gessel-Viennot inputs, the&#10;next statement considers only and . Its two parts follow from Lemma&#10;5.1(i), Proposition 4.2, and Proposition 5.2(ii)(iii) of .&#10;&#10;\[fact826.3\]When is restricted to and to , in each case the equivalence&#10;classes are the subsets consisting of -tuples that share a flag critical&#10;list. More specifically:&#10;&#10;\(i) In these subsets are the nonempty intervals in of the form , where\&#10; and is a “-canopy tuple”.&#10;&#10;\(ii) In these subsets are the nonempty intervals in of the form , where&#10;is a “-floor flag” and .&#10;&#10;To describe the equivalence classes of valid -tuple inputs as intervals,&#10;we “borrow” the minimum element of Part (i) above and the maximum&#10;element of Part (ii) above:&#10;&#10;\[prop826.6\]The equivalence classes for the restriction of to are the&#10;subsets of consisting of -tuples that share a flag critical list. These&#10;subsets are the nonempty intervals in of the form , where and . The&#10;equivalence class for a particular has and .&#10;&#10;Since it was noted that in Section 2, there is no need here to consider&#10;how the equivalence classes for restrict to .&#10;&#10;Two upper -tuples are equivalent exactly when they share a critical&#10;list. And by Proposition 4.2(iii) of every gapless core -tuple has a&#10;flag critical list. Let , and denote its equivalence class in this set&#10;by . By Proposition 5.2(ii)(i) of and Fact \[fact826.3\](i), the minimum&#10;element of its equivalence class in is the gapless -tuple . In Section 2&#10;it was noted that . So , and it must be the minimum element of . Set ;&#10;in Section 2 it was noted that has the same flag critical list as is&#10;shared by and . Let . Since it has the same critical list as , by the&#10;definition of we have . By the definition of we have . Hence is the&#10;maximum element of and . Suppose . By Lemma 5.1(i) and Proposition&#10;5.2(i) of , the critical list of is the flag critical list shared by and&#10;. So . And implies . Hence .&#10;&#10;So to compute for a given we may apply the Gessel-Viennot method to any&#10;, where and are respectively the unique gapless -tuple and the unique&#10;-ceiling flag that have the same flag critical list as . If one does not&#10;care about efficiency and wishes to use an upper flag, then at least the&#10;-ceiling flag will be available. In his Theorem 2.7.1 , Stanley noted&#10;that flags were valid inputs for the Gessel-Viennot method. Via&#10;Proposition \[prop826.6\], our Theorem \[theorem777.1\] implies that the&#10;Gessel-Viennot method cannot be used to compute a row bound sum for any&#10;upper -tuple that is not equivalent to an upper flag. So Corollary&#10;\[cor777.2\] does not provide determinant expressions for any new row&#10;bound sum polynomials.&#10;&#10;We say attains MAXIMUM EFFICIENCY if has fewer total monomials among its&#10;entries than does the Gessel-Viennot determinant for any other that&#10;produces . Fix one and set . By Proposition 5.2(ii) of this is the&#10;minimum element of that is equivalent to . Knowing leads to:&#10;&#10;\[prop826.9\] Let . The gapless -tuple attains maximum efficiency.&#10;&#10;To complete the proof, note that . So Proposition \[prop315.6\] can be&#10;applied. Corollary 14.4(i) of rules out an “accidental” polynomial&#10;equality between and any for which is not equivalent to . The entry of&#10;has monomials. The sentences before the statement complete this proof.&#10;&#10;So the are the -tuples in that attain maximum efficiency. If is replaced&#10;by , for each the number of terms in the entry of the determinant will&#10;be reduced by a factor of ; this is a ratio of falling factorials. We&#10;have not been able to obtain this conversion with naive row and column&#10;operations. In the example given before Lemma \[lemma434.5\], the&#10;“attempted” incorrect determinant expression for that uses cannot be&#10;converted with row and column operations to the correct determinant&#10;expression for that uses . So any row and column conversion that is&#10;proposed here must refer to the assumption . If , one can also factor&#10;out and work with . Going further, when there are only nonempty rows in&#10;the shape , the determinant is equal to its upper left minor because the&#10;last terminals coincide with the respective sources: There are no paths&#10;from the first sources to these terminals, and the only path from one of&#10;the last sources to one of these last terminals is the null path at each&#10;source.&#10;&#10;What does the equivalence class for look like in the path model? Fix and&#10;. Since , the graph of above the portion of the -axis can be decomposed&#10;into “staircases” whose rightmost indices are the critical indices. When&#10;is applied to to produce , these staircases are converted to “plateaus”&#10;at the heights of the critical entries for in this carrel. Let . The&#10;graph of over this carrel lies between these graph portions for and . To&#10;view the portions of these three gapless core -tuples as subsequences of&#10;the corresponding overall sequences of terminals, rotate this picture by&#10;. The partition is constant on each of its carrels. Lemma \[lemma581.5\]&#10;said that the the lattice paths that arrive at these terminals for&#10;within a non-intersecting -tuple of paths must pass through “staircases”&#10;of terminals specified by this portion of , and that the ending segments&#10;of these paths must then drop down in “stilts” to arrive at their&#10;terminals. As the lengths of each of these stilts is varied from to for&#10;, the weight of the -tuple of paths is unaffected since no horizontal&#10;steps are present.&#10;&#10;In we defined the parabolic Catalan number to be the number of&#10;“-312-avoiding permutations”. There in Theorem 18.1(ii) we noted that&#10;this is also the number of gapless -tuples. Given this, the following&#10;result is a consequence of the two propositions in this section. It was&#10;previewed as Part (xi) of Theorem 18.1 of that paper:&#10;&#10;\[cor826.12\]The number of valid upper -tuple inputs to the&#10;Gessel-Viennot determinant expression for flagged Schur polynomials on&#10;the shape that attain maximum efficiency is .&#10;&#10;For a sequence of examples, let . Suppose is a partition whose shape’s&#10;set of column lengths that are less than is . Then the number of maximum&#10;efficiency inputs here is given by the member of the sequences A220097&#10;of the OEIS that is indexed by .&#10;&#10;[99]{}&#10;&#10;Gessel, I., Viennot, X. G., Determinants, paths, and plane partitions,&#10;preprint (1989), available online at&#10;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.331, 2017.&#10;&#10;Postnikov, A., Stanley, R., Chains in the Bruhat order, J. Algebr. Comb.&#10;**29**, 133-174 (2009).&#10;&#10;Proctor, R., Willis, M., Parabolic Catalan numbers count flagged Schur&#10;functions; Convexity of tableau sets for Demazure characters, preprint&#10;(2016), arXiv:1612.06323.&#10;&#10;Reiner, V., Shimozono, M., Key polynomials and a flagged&#10;[L]{}ittlewood-[R]{}ichardson rule, J. Combin. Theory Ser. A **70**,&#10;107-143 (1995).&#10;&#10;Sloane, N.J.A., et. al., The On-Line Encyclopedia of Integer Sequences,&#10;published electronically at http://oeis.org, 2017.&#10;&#10;Stanley, R., Enumerative Combinatorics Volume 1, Cambridge University&#10;Press (1997).&#10;&#10;Stanley, R., Enumerative Combinatorics Volume 2, Cambridge University&#10;Press (1999).">
</outline>
  </body>
</opml>