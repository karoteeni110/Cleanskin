<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>Second-order numerical methods for multi-term fractional differential
equations: Smooth and non-smooth solutions [^1]

[^1]: This work was supported by the MURI/ARO on “Fractional PDEs for
    Conservation Laws and Beyond: Theory, Numerics and Applications
    (W911NF-15-1-0562)”, and also by NSF (DMS 1216437). The second
    author of this work was also partially supported by a start-up fund
    from WPI.</title>
    <abstract>Starting with the asymptotic expansion of the error equation of the
shifted Grünwald–Letnikov formula, we derive a new modified weighted
shifted Grünwald–Letnikov (WSGL) formula by introducing appropriate
correction terms. We then apply one special case of the modified WSGL
formula to solve multi-term fractional ordinary and partial differential
equations, and we prove the linear stability and second-order
convergence for both smooth and non-smooth solutions. We show
theoretically and numerically that numerical solutions up to certain
accuracy can be obtained with only a few correction terms. Moreover, the
correction terms can be tuned according to the fractional derivative
orders without explicitly knowing the analytical solutions. Numerical
simulations verify the theoretical results and demonstrate that the new
formula leads to better performance compared to other known numerical
approximations with similar resolution. </abstract>
  </head>
  <body>
<outline text="Introduction" _note="The aim of this work is to provide an effective numerical method to&#10;solve multi-term fractional differential equations (FDEs), where more&#10;than one fractional differential operator is involved, with high-order&#10;accuracy for both smooth and non-smooth solutions.&#10;&#10;Multi-term FDEs are motivated by their flexibility to describe complex&#10;multi-rate physical processes, see e.g. . Moreover, it is not&#10;straightforward to extend the known numerical methods for single-term&#10;FDEs to solve multi-term FDEs. Specifically, we find that: (i) Some&#10;numerical methods for single-term FDEs can be extended to multi-term&#10;FDEs, but their numerical stability and convergence analysis are not&#10;easy to prove; (ii) Very low accurate numerical solutions may be&#10;obtained by extending the majority of the known numerical methods for&#10;single-term FDEs to multi-term FDEs due to their often unreasonable&#10;requirement on the high regularity of the solutions.&#10;&#10;Existing numerical methods for FDEs can be broadly divided into two&#10;classes.&#10;&#10;[FDES WITH SMOOTH SOLUTIONS]{}: The majority of numerical methods have&#10;been developed for single-term FDEs with smooth solutions, in which the&#10;fractional derivative operators in these equations are discretized by&#10;the (shifted) Grünwald–Letnikov (GL) formula , the L1 method and its&#10;modification , the weighted shifted Grünwald–Letnikov (WSGL) formulas ,&#10;the (weighted) fractional central difference methods , the fractional&#10;linear multi-step methods , the spectral approximations , and so on .&#10;Some of these methods have been extended to solve multi-term FDEs with&#10;smooth solutions, such as the L1 method in time with spatial&#10;discretization by the finite difference method (see e.g. ) and finite&#10;element method (see e.g. ), the predictor-corrector method in time with&#10;finite difference methods in space , [and some others , just to name a&#10;few.]{}&#10;&#10;[FDES WITH NON-SMOOTH SOLUTIONS]{}: Generally speaking, the analytical&#10;solutions to FDEs are not smooth in real applications. For example, even&#10;for smooth inputs, the solutions to FDEs usually have a weak singularity&#10;at the boundary, see e.g. . Therefore, the aforementioned numerical&#10;methods will produce numerical solutions of low accuracy when applied to&#10;solve these FDEs. In order to derive numerical schemes of uniformly&#10;high-order convergence for FDEs with non-smooth solutions, several&#10;approaches have been proposed:&#10;&#10;-   Use nonuniform/refined grids in the discretization of the fractional&#10;    operators, see e.g. ). With a geometrically graded mesh, one can&#10;    adaptively resolve a weak singularity at the endpoint.&#10;&#10;-   Separate the solution of the considered FDE into two parts of and ,&#10;    satisfying (see e.g. ). Then, a numerical scheme is designed such&#10;    that high accuracy is obtained for both and .&#10;&#10;-   Use a non-polynomial (or singular) basis function to capture the&#10;    singularity of the solutions to FDEs (see e.g. ), such that a&#10;    high-order scheme is effective.&#10;&#10;We also note that many numerical methods for FDEs may impose some&#10;unreasonable restrictions on the solutions. For example, the L1 method&#10;(see e.g. ) and the interpolation method (e.g. ) require that the&#10;solution of the considered FDE is sufficiently smooth such that the&#10;expected accuracy can be realized, but as we already stated solutions of&#10;FDEs are usually not smooth, see e.g. . The second-order WSGL formula&#10;(see, e.g. ) requires that the solution and its first (and/or second)&#10;derivative have vanishing values at the boundary; see also the&#10;corresponding works in . Consequently, the convergence rate of these&#10;methods can be low even if the solutions are sufficiently smooth. In&#10;particular, we show numerically that the second-order WSGL formula in&#10;does not exhibit global second-order accuracy for smooth solutions; see&#10;numerical results in Table \[tb1-1\]. The theoretical explanation can be&#10;found in Section 2.&#10;&#10;To remove these restrictions, we will adopt the approach (b2) to solve&#10;multi-term FODEs and multi-term time-fractional anomalous diffusion&#10;equations with smooth and non-smooth solutions. We note that the&#10;analytical solutions of FODEs and time-fractional differential equations&#10;usually have the form where is a uniformly continuous function over the&#10;interval , and and is a positive integer, see e.g. . Moreover, , , are&#10;explicitly known, see e.g. . The WSGL formula in is indeed of&#10;second-order convergence for when ( is the fractional order) while it&#10;converges slowly for . This observation motivated us to apply the the&#10;idea of in (b2) to obtain desired high accuracy schemes. Specifically,&#10;we introduce some corrections terms into the WSGL formula so that the&#10;resulting modified WSGL formula is exact or highly accurate for while&#10;the second-order convergence for is maintained.&#10;&#10;In order to obtain the desired numerical schemes, we first obtain the&#10;asymptotic expansions of the error equation of the shifted GL formula.&#10;With these asymptotic expansions, we derive a family of second-order&#10;WSGL formulas, including the second-order WSGL formula from . We then&#10;illustrate that this family of second-order formulas does not exhibit&#10;global second-order accuracy unless some restrictive conditions of&#10;vanishing boundary values of the first-order and/or second-order&#10;derivative operators are imposed. Subsequently, following Lubich’s&#10;approach, we recover the global second-order accuracy of the WSGL&#10;formula by adding proper correction terms to remove those restrictions.&#10;&#10;According to , the correction terms are found using the so-called&#10;starting weights and values to make the resulting formula exact for low&#10;regularity terms in (see ). We need to solve a linear system to obtain&#10;the starting weights, whose coefficient matrix is an ill-conditioned&#10;exponential Vandermonde matrix. It has been pointed out in that the&#10;accuracy in solving the corresponding weights “may have serious adverse&#10;effects for the entire scheme” when is large. However, it is shown in&#10;that the accuracy of Lubich’s correction approach depends on the&#10;residual of the linear system for obtaining the starting weights, which&#10;was discussed in detail in . According to , the correction terms are&#10;found using the so-called starting weights to make the resulting formula&#10;exact for low regularity terms , in when and is the desired convergence&#10;order. Thus finding the correction terms requires to solve an&#10;ill-conditioned exponential Vandermonde matrix. It is remarked in that&#10;the accuracy in solving the corresponding weights “may have serious&#10;adverse effects for the entire scheme&quot; when is large and are very small.&#10;In , it is shown that that the starting weights can be also found to&#10;make the resulting formula accurate enough instead of being exact for&#10;low regularity terms. However, the exponential Vandermonde matrix is so&#10;ill-conditioned when is large and ’s are small. This leads to a&#10;conclusion in that the accuracy of Lubich’s correction approach depends&#10;on the residual of the linear system for starting weights, despite of&#10;its high-order convergence in theory.&#10;&#10;Fortunately, the number of correction terms can be small and still&#10;obtain reasonable accuracy. In this paper, we show that several&#10;correction terms (less than ten) significantly improve accuracy,&#10;regardless of the regularity of the analytical solution. Since we are&#10;using a few corrections terms, the condition number of the exponential&#10;Vandermonde matrices is not too large and thus the linear system to&#10;derive the starting weights can be solved accurately with double&#10;precision. Moreover, even if the regularity indices (see ) are unknown&#10;and the “correction terms” do not match the singularity of the&#10;analytical solutions to considered FDEs, we can still obtain&#10;satisfactory accuracy, see Example \[eg3-2\] and numerical results in&#10;Section \[sec:numerical\]. In particular, we present in Lemma&#10;\[lem:quad-2\] a detailed error estimate of the WSGL formula with&#10;correction terms, which explains why a few correction terms may lead to&#10;satisfactory accuracy.&#10;&#10;We organize the paper as follows. In Section \[eq:time-discretization\],&#10;we obtain the asymptotic error equation of the shifted GL formula that&#10;leads to the second-order WSGL formula under mild conditions. We then&#10;show that the WSGL formula with correction terms can lead to better&#10;accuracy. In Section \[sec:multi-term-fode\], we apply one special case&#10;of the second-order WSGL formula with correction terms to multi-term&#10;FODEs and present the stability and convergence theory. We further&#10;extend the second-order WSGL formula with correction terms in Section&#10;\[sec:3\] to the time discretization of the multi-term time-fractional&#10;diffusion-wave equation together with the spectral element method for&#10;spatial discretization. Numerical results for smooth and non-smooth&#10;solutions are included in Section \[sec:numerical\]. All the proofs of&#10;our lemmas and theorems are presented in Section \[sec:proof\] before&#10;the conclusion in the last section. In the Appendix we include some&#10;computational details, additional proofs, and also more numerical&#10;results.">
</outline>
<outline text="Finite difference approximations for fractional derivatives" _note="In this section, we examine the asymptotic behavior of the error&#10;equation of the shifted GL formula, which leads to the error estimate of&#10;the WSGL formula . Following Lubich’s approach , we then introduce&#10;correction terms to recover the global second-order accuracy of the WSGL&#10;formula and obtain an error bound.&#10;&#10;We first introduce definitions of fractional integrals and derivatives.&#10;The th-order Caputo derivative operator is defined where , is a positive&#10;integer. The fractional integral is given by The Riemann–Liouville&#10;fractional derivative operator is defined by where and is a positive&#10;integer. For and a uniformly continuous function , we have the following&#10;relation&#10;&#10;Let be a time stepsize and be a positive integer with and ). The shifted&#10;GL formula (with shifts) reads (see e.g. ): where . We have the&#10;following error estimate for the formula , the proof of which can be&#10;found in Section \[sec:proof\].&#10;&#10;\[lem:quad-accuracy\] Let and be a real number. Then where is defined by&#10;, , is an integer, and is bounded by&#10;&#10;Here and throughout the paper, the constant is independent of and .&#10;&#10;From Lemma \[lem:quad-accuracy\], we can eliminate the term in by a&#10;linear combination of and , . Let Then we obtain the second-order WSGL&#10;formula in ,&#10;&#10;Eq. is proved in to be of second-order convergence when , and its&#10;Fourier transform belongs to . However, these conditions are too&#10;restrictive since for with when . For example, when , the remainder term&#10;in is of the order of , which is not of second-order convergence&#10;globally as the accuracy is when . Consequently, when is applied to&#10;solve FDEs with even smooth solutions, we cannot expect a global&#10;second-order convergence unless [the solutions have vanishing&#10;first-order derivatives]{}. In particular, there is almost no accuracy&#10;at when . In practice, this large error near may lead to large&#10;accumulation of discretization errors and thus much larger error at the&#10;desired final time ; see accuracy tests of the formula in Fig.&#10;\[fig2-2\] of this section and numerical experiments in Section&#10;\[sec:numerical\].&#10;&#10;To improve the accuracy near , we follow Lubich’s approach by adding&#10;correction terms to such that the resulting formula is indeed of&#10;second-order accuracy when is of the form . avoid the propagation of&#10;possible large errors caused near . we need a quadrature rule that is&#10;exact or at least of order two for , where depends on the problems to be&#10;solved. Specifically, we modify such that In , the starting weights are&#10;known at each time step as they can be determined by setting in for .&#10;Denote . Then the starting weights can be solved from the following&#10;linear system of equations, see e.g. ,&#10;&#10;The linear system has an exponential Vandermonde type matrix that is&#10;ill-conditioned when is large . The large condition number of the matrix&#10;may lead to big roundoff errors of when computation is performed with&#10;double precision. For , we present the condition number of the system in&#10;Table \[tb2-1\]. Hereafter we choose in [^1] where the quadrature&#10;weights where ’s are defined by, see , In fact, satisfies , see .&#10;&#10;From Table \[tb2-1\], we observe that the condition number increases&#10;with and decreases with . However, for and ’s presented in Table&#10;\[tb2-1\], we can still have some reasonable accuracy for the starting&#10;weights. In fact, the accuracy of is determined somehow by the residual&#10;of . This observation has been made in . We present the residual of the&#10;system in Table \[tb2-2\], where the residual is computed by When and ,&#10;the condition number is and the residual is , see Table \[tb2-2\]. In&#10;this case we can still obtain relatively high accuracy, see Figure&#10;\[eg3-2\](a) in Example \[eg3-2\].&#10;&#10;In our numerical simulations of this work, we choose less than eight&#10;correction terms. It works surprisingly well with high accuracy even&#10;when is small. For example, in Figure \[eg3-2\](a), we used six&#10;correction terms for , the accuracy for all is at the level of , which&#10;is two orders of magnitude lower than . Hence, we are motivated to&#10;consider the asymptotic behavior of in when , addressing the practical&#10;effect of correction terms.&#10;&#10;\[lem:quad-2\] Let and be a real number. Let be defined in , , . Then we&#10;have where and are positive constants bounded and independent of and .&#10;&#10;Numerical results indicate that []{} in can be bounded by See the&#10;supplementary material.&#10;&#10;From Lemmas \[lem:quad-2\] and \[lm4.2\], we have a uniformly&#10;second-order approximation of when satisfies and , i.e., . In practice,&#10;especially with double precision computation, we take only small and&#10;thus may not hold. In this case, we may not have the global second-order&#10;accuracy, but we still observe accuracy improvement at and small errors&#10;far from due to the small coefficient in .&#10;&#10;Next, we check the accuracy of the discrete operator in .&#10;&#10;\[eg3-2\] Use the formula with to numerically approximate . We consider&#10;two cases: **Case I:** , where we take , . **Case II:** , where we take&#10;.&#10;&#10;[(a) .]{}&#10;&#10;[ [(b)]{} .]{}&#10;&#10;[(a) .]{}&#10;&#10;[(b) .]{}&#10;&#10;The purpose of this example is to show that a small number of correction&#10;terms is sufficient to yield relatively high accuracy whether has high&#10;regularity or not.&#10;&#10;We first consider Case I. When [ IS SMALL]{}, the regularity of is low.&#10;In such a case, we add only several correction terms but obtain&#10;satisfactory accuracy, see Fig. \[fig2-2\] (a). The accuracy can be&#10;explained by the estimate in Lemma \[lem:quad-2\], especially the factor&#10;in the error estimate. Despite the accuracy from , the factor is very&#10;small when is small and is large, see Table \[tb2-3\]. The small factor&#10;explains the high accuracy in Figs. \[fig2-2\] (a). When [ IS RELATIVELY&#10;LARGE]{}, we need only several terms to achieve second-order accuracy&#10;according to and Lemma \[lem:quad-2\]. In this case, the term is more&#10;pronounced than , see Table \[tb2-3\]. This effect is shown in Fig.&#10;\[fig2-2\] (b), where we observe that increasing the number of&#10;correction terms does not increase accuracy significantly except for ,&#10;due to high regularity of .&#10;&#10;For Case II, we choose so that we match more terms of the singularity in&#10;; the pointwise errors are shown in Fig. \[fig2-2-2\]. We obtain better&#10;accuracy as the number of correction terms increases up to when we&#10;capture all the singularity of that leads to accuracy at the machine&#10;precision level.&#10;&#10;the pointwise errors are two orders of magnitude smaller than , which&#10;suggests a small factor in the error estimate. This small factor&#10;estimated in Lemma as .&#10;&#10;In conclusion, we find that only a few number of corrections are needed&#10;to obtain high accuracy even when has low regularity at . We also find&#10;that we do not have to match the singular terms in when choosing&#10;correction terms. In Section \[sec:numerical\], we will present&#10;numerical examples with some empirical guidelines to introduce&#10;correction terms where we do not know explicitly the singular terms in .&#10;&#10;[^1]: We choose hereafter in this paper in .">
</outline>
<outline text="Application to multi-term FODEs" _note="In this section, we apply the formula to the discretization of&#10;multi-term FODEs of the form where , and . The existence, uniqueness,&#10;and regularity of solutions to are investigated in . If is smooth for or&#10;, are rational numbers (see e.g. ), then the solution to has the form&#10;&#10;Using , we apply to that leads to where , is defined by , and are&#10;suitable positive integers. By , the truncation error in satisfies . Let&#10;be the approximate solution of . Then we derive the following fully&#10;discrete scheme for where and is from . Denote .&#10;&#10;We need numerical values to proceed with the scheme. Here we solve the&#10;nonlinear system of using with , and we apply the Picard fixed-point&#10;iteration method. Other high-order methods for can be applied here too.&#10;&#10;Next, we present the stability and convergence for , the proofs of which&#10;are given in Section \[sec:proof\].&#10;&#10;\[thm3-2\] If , then the method is unconditionally stable.&#10;&#10;\[thm3-1\] Let be the solution to and be the solution to satisfying ,&#10;where are constants and . Suppose that satisfies the Lipschitz condition&#10;in its second argument, are suitable positive constants satisfying .&#10;Then there exists a positive constant independent of and such that&#10;&#10;\[theorem3-3\] Let . If in Theorem \[thm3-1\], then we have for ,&#10;&#10;Two special cases of Theorem \[theorem3-3\] are presented below. If&#10;there is no correction terms, i.e., , then we have If and , then we have">
</outline>
<outline text="Application to time-fractional diffusion-wave equation" _note="In this section, we consider the following time-fractional&#10;diffusion-wave equation, see e.g. : where , . We apply the quadrature&#10;formula in time and spectral element method in space for the&#10;discretization of Eq. . We also present the rigorous stability and&#10;convergence analysis of the present numerical scheme, the proofs of&#10;which can be found in the supplementary material.&#10;&#10;The key assumption here is that the analytical solution to satisfies the&#10;following form where . Indeed, when is smooth in time and is rational,&#10;the analytical solution of has the form as , see e.g. .">
  <outline text="Time discretization" _note="Denote , where satisfies . Then satisfies Hence, we derive from The main&#10;task in the following is to construct a second-order approximation for&#10;each differential operator in –, i.e., the first-order time derivative&#10;operator and the time-fractional derivative operator . For simplicity,&#10;we denote and From , we have , which yields Let . Then from and , we&#10;have where and the starting weights are chosen such that is exact for ,&#10;which leads to Note that . We have from We can similarly obtain where&#10;and are chosen such that is exact for , which yields From , we can also&#10;choose such that where , .&#10;&#10;Combining and , we have the following time discretization for From , the&#10;time discretization of Eq. is">
  </outline>
  <outline text="The fully discrete spectral element method" _note="Let us introduce some notations before presenting our fully discrete&#10;schemes. Let and be a positive integer. Let be a partition of the&#10;interval . Denote , is a positive integer, and&#10;&#10;Denote as the polynomial space defined on the domain with degree no&#10;greater than . The approximation spaces are defined as follows:&#10;&#10;The inner product and norm are defined by:&#10;&#10;From –, we present the Legendre Galerkin spectral element method (LGSEM)&#10;for –: For and , we find , such that in which , is defined by , are&#10;suitable positive integers, satisfy , satisfy , and is the&#10;Legendre–Gauss–Lobatto interpolation operator defined by where are the&#10;Legendre–Gauss–Lobatto points on .&#10;&#10;To get and for , we can let in – and solve the resulting system. We can&#10;also use other high-order methods in time to obtain and for .">
  </outline>
  <outline text="Stability and convergence" _note="This subsection presents the stability and convergence of the scheme –.&#10;We give the following stability result.&#10;&#10;\[thm:stability\] Suppose that and are solutions to –. If and , then&#10;there exists a positive constant independent of and such that&#10;&#10;For the nonnegative integer , is the Sobolev space equipped with the&#10;norm and semi-norm defined by Next, we present the convergence analysis.&#10;&#10;\[thm:convergence\] Suppose that and are positive integers with and is&#10;the solution to satisfying [, , for each ,]{} , and are the solutions to&#10;the scheme –, respectively, with . For fixed , , and . If , then for&#10;small enough , there exists a positive constant independent of and ,&#10;such that&#10;&#10;-10pt&#10;&#10;\[remark6\] If the analytical solution to is sufficiently smooth in&#10;time, then the convergence rate of – in time is by choosing and . For&#10;smooth solutions with , we also have: (i) if in –, then the convergence&#10;rate in time is ; (ii) if in –, then the convergence rate in time is for&#10;, for , or for at .&#10;&#10;The methodology here can be readily extended to two-term time-fractional&#10;subdiffusion equation and more generalized multi-term time-fractional&#10;subdiffusion equations, see e.g. .">
  </outline>
</outline>
<outline text="Numerical examples" _note="In this section, we present some numerical simulations to verify our&#10;theoretical analysis presented in the previous sections.&#10;&#10;\[s6eg0\] Consider the following two-term FODE subject to the initial&#10;condition , and .&#10;&#10;The analytical solution of is where is the Mittag–Leffler function&#10;defined by&#10;&#10;To solve , we apply the method with and in computation. The maximum&#10;absolute error is measured by&#10;&#10;First, we observe from Tables \[tb6-1-1\]–\[tb6-3-2\] that higher&#10;accuracy is obtained with correction terms () than that without&#10;correction terms (). For , compared with , we have gained one order of&#10;magnitude in the maximum error when and two orders of magnitude when ,&#10;see Table \[tb6-1-1\]. For , we observe similar improvement in accuracy,&#10;see Table \[tb6-3-1\]. For the error at final time , we also have&#10;similar effects for and have even more significant improvement in&#10;accuracy, see Tables \[tb6-1-2\] and \[tb6-3-2\]. The convergence order&#10;for in the maximum sense is consistent with the theoretical prediction&#10;in Theorem \[thm3-1\], which is , while a lower convergence rate is&#10;observed for .&#10;&#10;From Tables \[tb6-1-2\] and \[tb6-3-2\], we observe that much better&#10;accuracy is obtained far from . This phenomenon occurs in many time&#10;stepping methods for FDEs in literature, which can be also explained&#10;from the average error estimate , see Eq. . Clearly, the average error&#10;has smaller upper bound than the maximum error estimate , which implies&#10;much better numerical solutions far from , see the average errors in&#10;Table \[tb6-3-3\].&#10;&#10;Second, we find that a small number of corrections terms suffices to&#10;have high accuracy in both maximum error and the error at final time.&#10;According to Theorem \[thm3-1\], we can get the global second-order&#10;accuracy when , i.e., for . Indeed, we observed second-order accuracy&#10;for and in Table \[tb6-1-1\], and the accuracy is also much smaller than&#10;. When is small, i.e., , we need at least 19 correction terms to get the&#10;global second-order accuracy theoretically. Yet we obtain highly&#10;accurate numerical solutions using a small number of correction terms,&#10;see the case in Tables \[tb6-3-1\] and \[tb6-3-2\], and the accuracy is&#10;smaller than in Table \[tb6-3-2\] for . Though accuracy is improved when&#10;the number of correction terms increases, we did not use more than terms&#10;since the starting weights in may suffer from round-off error when when&#10;computed with double precision. Though we did not observe a sharp&#10;second-order convergence in the presented tables, second-order accuracy&#10;can be observed if we use more than 19 correction terms with&#10;quadruple-precision in the computation (results not presented here).&#10;&#10;Lastly, we show the case that is not taken as . In Tables&#10;\[tb6-5-1\]–\[tb6-5-2\], we present the maximum error and the error at&#10;of the method for and in . We do not exactly match the singularity of&#10;the solution but we still obtain satisfactory accuracy as the number of&#10;“correction terms” increases up to . The numerical results confirm the&#10;estimate , see also explanations in Example \[eg3-2\] in the previous&#10;section. We further illustrate this effect in our next example solving a&#10;nonlinear FODE where we don’t know the singularity of the solution.&#10;&#10;In summary, we find that a smaller number of correction terms can lead&#10;to significant improvement in accuracy. When the regularity of the&#10;solution is relatively high (the fractional order is large here), we&#10;need only a few correction terms to achieve a global second-order&#10;convergence. When the regularity of the solutions is low (the fractional&#10;order is small here), we need also a few correction terms as the&#10;correction terms bring a small factor (see Lemma \[lem:quad-2\]) that&#10;leads to high accuracy. Moreover, the correction terms can be chosen&#10;such that the approximation can be not exact for the singular terms of&#10;exact solutions.&#10;&#10;\[s6eg0-2\] Consider the following two-term nonlinear FODE subject to&#10;the initial condition , and .&#10;&#10;Here we consider three cases: Case I: , ; Case II: , ; Case III: , .&#10;&#10;In this example, we compare our method with the two well-known methods.&#10;Specifically, we first apply the L1 method to discretize the Caputo&#10;derivative in to derive the corresponding numerical scheme, which is&#10;called the L1 method, see . We also transform into its integral form as&#10;, and then we apply the trapezoidal rule to the fractional integrals to&#10;obtain the corresponding numerical scheme, which is called the&#10;trapezoidal rule method, see . Since we do not have the exact solution,&#10;we obtain a reference solution using the trapezoidal rule method with&#10;time step size . We also apply the L1 method with the step size to get a&#10;reference solution and obtain almost the same results (not presented&#10;here). In all computations, we use time step size unless otherwise&#10;stated.&#10;&#10;Obviously we do not know the regularity of of Eq. but we can estimate&#10;the regularity from linear equations related to Eq. . Here we first&#10;investigate the regularity of the following equation The solution can be&#10;represented by a generalized Mittag–Leffler function and is of the form&#10;if . Meanwhile, we choose the correction terms that make in as small as&#10;possible if contains when is relatively small. Empirically, we choose&#10;that guarantees the decrease of with for . Consequently, for all cases,&#10;we choose as .&#10;&#10;We show in Fig. \[fig5-2\] numerical solutions and pointwise errors of&#10;both our method with/without correction terms and the L1 method for&#10;Cases I and II. Adding correction terms greatly improves accuracy,&#10;although these “correction terms” may not match the singularity of the&#10;analytical solutions.&#10;&#10;We further test choices of in Case III where fractional orders are small&#10;that usually lead to low regularity of . In addition to the choice of ,&#10;we also choose in the computation. All these choices of yield smaller as&#10;increases when and . In this case, we choose in the computation that&#10;leads to . The pointwise errors are shown in Fig. \[fig5-3\]. We observe&#10;that numerical solutions with higher accuracy are obtained by properly&#10;choosing correction terms, which confirms Lemma \[lem:quad-2\].&#10;&#10;In conclusion, we again observed that a smaller number of correction&#10;terms leads to more accurate numerical solutions than those from&#10;formulas without correction terms. We also discussed how to choose based&#10;on some preliminary singularity analysis and error estimates in Lemma&#10;\[lem:quad-2\].&#10;&#10;[(a1) Case I.]{}&#10;&#10;[(a2) Case I.]{}&#10;&#10;[(b1) Case II.]{}&#10;&#10;[(b2) Case II.]{}&#10;&#10;[(a) .]{}&#10;&#10;[(b) .]{}&#10;&#10;[(c) .]{}&#10;&#10;[(d) .]{}&#10;&#10;\[s6eg1\] Consider the following fractional diffusion-wave equation&#10;where and .&#10;&#10;In this example, we consider two cases:&#10;&#10;Case I (Smooth solutions): Choose a suitable source term such that the&#10;exact solution to is&#10;&#10;Case II (Smooth inputs): The source term is , the initial conditions in&#10;are replaced by , and .&#10;&#10;We use the LGSEM – to solve , where the domain is divided into three&#10;subdomains, i.e., , and .&#10;&#10;In Table \[tb1-1\], we present the errors at for Case I (smooth solution&#10;with in ). We choose and in the computation and observe that&#10;second-order accuracy is observed for and , which is in line with or&#10;even better than the theoretical analysis, see also Remark \[remark6\].&#10;for , we do not obtain second-order accuracy, especially when is close&#10;to 1; see also the related numerical results in , [where second-order&#10;accuracy was lost without correction terms]{}.&#10;&#10;For Case II, we do not have the explicit analytical solutions. It is&#10;known, see e.g. and , that the analytical solution of satisfies , where&#10;when . For simplicity, we choose in the computation. The benchmark&#10;solutions are obtained with smaller time step size . In Table \[tb1-2\],&#10;we present the errors at and observe second-order accuracy. Moreover, we&#10;find that more accurate numerical solutions are obtained when increases,&#10;which is in line with our theoretical predictions.">
</outline>
<outline text="Proofs">
  <outline text="Proof of Lemma [lem:quad-accuracy]" _note="A special case of Lemma \[lem:quad-accuracy\] with and being an integer&#10;can be found in . We present the proof here for completeness and for all&#10;.&#10;&#10;For and , we have&#10;&#10;By analyzing the proof of Lemma 3.5 in again, we can obtain which yields&#10;for . Now we prove for . From , we have By the fact that , we have From&#10;and , we reach , which completes the proof.">
  </outline>
  <outline text="Proof of Lemma [lem:quad-2]" _note="To prove Lemma \[lem:quad-2\], we need the following lemma.&#10;&#10;\[lm4.2\] Let be a positive integer and be defined by . Suppose that are&#10;a sequence of strictly increasing positive numbers. Then we have&#10;&#10;Letting and in , we derive Combining and yields a linear system which&#10;leads to . The proof is completed.&#10;&#10;Proof of Lemma \[lem:quad-2\].&#10;&#10;We have from and , and satisfies (see Lemma \[lm4.2\]) where is&#10;independent of , and , is independent of and , and . From Eqs. (3.1) and&#10;(3.13) in , we can readily obtain both and are analytical functions with&#10;respect to . Hence, and are bounded for a given . Next, we derive a&#10;bound for . Since , it implies , . It is known that is infinitely smooth&#10;with respect to and , there exists an , such that From the boundedness&#10;of , , and the following relation we have , which leads to&#10;&#10;With the same reasoning, we can derive that also satisfies where is a&#10;positive integer and is independent of . From the estimates of and , we&#10;obtain the desired result. The proof is completed.">
  </outline>
  <outline text="Proofs of Theorems [thm3-2]–[theorem3-3]" _note="We first introduce a lemma.&#10;&#10;\[lm5-2\] Suppose that , , is real, and . If and , then there exists a&#10;positive constant independent of , such that .&#10;&#10;From , we have and , which leads to . Since , there exist a positive&#10;constant independent of such that . With the mathematical induction&#10;method and , we complete the proof. Assume that there exists a positive&#10;constant independent of such that , . Next, we prove . From and the&#10;assumption, we have where we have used , , and for . The proof is&#10;completed.&#10;&#10;From Lemma \[lm5-2\] and Lemma 3.3 in , one can derive the following&#10;corollary.&#10;&#10;\[crlr5-3\] Assume that , , and is real. If and , then .">
    <outline text="Proof of Theorem [thm3-2]" _note="Following the similar idea in (see also ), we derive that the method is&#10;stable if , where is defined by , in which . Since for all and , the&#10;region contains the whole negative real line, i.e., the scheme is stable&#10;for any . This completes the proof.">
    </outline>
    <outline text="Proof of Theorem [thm3-1]" _note="Let . Then we derive the error equation of as where is defined in . By&#10;Lemma 3.4 in , Eq. can be written in the following form where , and and&#10;are, respectively, the coefficients of the Taylor expansions of the&#10;functions and&#10;&#10;Assume that satisfies the uniform Lipschitz condition, i.e., there&#10;exists a positive constant such that . Hence, for small enough , we have&#10;where&#10;&#10;It is known that with . It then follows from Corollary \[crlr5-3\] that&#10;and . We can similarly obtain and . Hence, . Similar to the proof in ,&#10;we derive . If satisfies the local Lipschitz condition with respect to ,&#10;then we can also derive by the mathematical induction method, which is&#10;omitted here, see . This ends the proof.">
    </outline>
    <outline text="Proof of Theorem [theorem3-3]" _note="We first introduce a lemma.&#10;&#10;\[lm4.1\] Suppose that . Then we have where are real numbers and is&#10;defined by .&#10;&#10;From , we have where is defined in .&#10;&#10;Multiplying on both sides of and summing up from to , one has Applying&#10;Lemma \[lm4.1\] and the Cauchy–Schwarz inequality, we have where is a&#10;positive constant. If we choose , then we have Let . From , , and , we&#10;have Let . Then we have from the above equation which leads to . The&#10;proof is completed.">
    </outline>
  </outline>
</outline>
<outline text="Summary" _note="In this work, we obtained the asymptotic expansion of the error equation&#10;of the WSGL formula proposed in . The WSGL formula is second-order&#10;accurate far from but is not second-order accurate near . Hence&#10;second-order numerical scheme is not expected when the formula is&#10;applied to time-fractional differential equations. We then followed&#10;Lubich’s approach by adding the correction terms to the WSGL formula and&#10;obtained a modified formula with global second-order accuracy both&#10;around and far from . We applied our modified formula to solve two-term&#10;FODEs and two-term time-fractional anomalous diffusion equations and&#10;proved the stability and second-order convergence in time.&#10;&#10;We found that only a small number of correction terms is needed to&#10;improve convergence order and accuracy regardless of regularity of the&#10;analytical solutions. We showed both theoretically and numerically that&#10;a few correction terms are sufficient to obtain relatively high accuracy&#10;at and thus improve the convergence order and accuracy far from . With a&#10;few correction terms, we avoid solving the linear system with an&#10;exponential Vandermonde matrix of large size to obtain starting weights.&#10;We observed that with no more than terms, the linear system can be&#10;accurately solved with double precision without harming the accuracy of&#10;the second-order formula. Moreover, the correction terms do not have to&#10;exactly match the singularity indexes of solutions to FDEs. Even when we&#10;do not know the precise singularity indices of solutions to FDEs, we&#10;provided some empirical guidelines to choose correction terms.&#10;&#10;Although, we only focus on the WSGL formulas, the methodology proposed&#10;here can be also applied to recover globally high accuracy for some&#10;other high-order formulas, see e.g. , where the high-order accuracy&#10;requires vanishing initial/boundary values of the corresponding&#10;function, even vanishing values of higher-order derivatives at&#10;boundaries.&#10;&#10;[10]{}&#10;&#10;, [A [M]{}ATLAB TOOLBOX FOR POSITIVE FRACTIONAL TIME DERIVATIVE MODELING&#10;OF ARBITRARILY FREQUENCY-DEPENDENT VISCOSITY]{}, J. Vib. Control, 20&#10;(2014), pp. 1009–1016.&#10;&#10;, [SPECTRAL METHODS]{}, Scientific Computation, Springer-Verlag, Berlin,&#10;2006. Fundamentals in single domains.&#10;&#10;, [A HYBRID COLLOCATION METHOD FOR [V]{}OLTERRA INTEGRAL EQUATIONS WITH&#10;WEAKLY SINGULAR KERNELS]{}, SIAM J. Numer. Anal., 41 (2003), pp. 364–381&#10;(electronic).&#10;&#10;, [CRANK-[N]{}ICOLSON METHOD FOR THE FRACTIONAL DIFFUSION EQUATION WITH&#10;THE [R]{}IESZ FRACTIONAL DERIVATIVE]{}, J. Comput. Phys., 231 (2012),&#10;pp. 1743–1750.&#10;&#10;, [A [F]{}OURIER METHOD FOR THE FRACTIONAL DIFFUSION EQUATION DESCRIBING&#10;SUB-DIFFUSION]{}, J. Comput. Phys., 227 (2007), pp. 886–897.&#10;&#10;, [FOURTH ORDER ACCURATE SCHEME FOR THE SPACE FRACTIONAL DIFFUSION&#10;EQUATIONS]{}, SIAM J. Numer. Anal., 52 (2014), pp. 1418–1438.&#10;&#10;, [GENERALIZED [J]{}ACOBI FUNCTIONS AND THEIR APPLICATIONS TO FRACTIONAL&#10;DIFFERENTIAL EQUATIONS]{}, Math. Comp., 2015,&#10;http://dx.doi.org/10.1090/mcom3035.&#10;&#10;, [CONVOLUTION QUADRATURE TIME DISCRETIZATION OF FRACTIONAL&#10;DIFFUSION-WAVE EQUATIONS]{}, Math. Comp., 75 (2006), pp. 673–696&#10;(electronic).&#10;&#10;, [THE ANALYSIS OF FRACTIONAL DIFFERENTIAL EQUATIONS]{},&#10;Springer-Verlag, Berlin, 2010.&#10;&#10;, [PITFALLS IN FAST NUMERICAL SOLVERS FOR FRACTIONAL DIFFERENTIAL&#10;EQUATIONS]{}, J. Comput. Appl. Math., 186 (2006), pp. 482–503.&#10;&#10;, [DETAILED ERROR ANALYSIS FOR A FRACTIONAL [A]{}DAMS METHOD]{}, Numer.&#10;Algorithms, 36 (2004), pp. 31–52.&#10;&#10;, [HIGH-ORDER ALGORITHMS FOR [R]{}IESZ DERIVATIVE AND THEIR APPLICATIONS&#10;[(I)]{}]{}, Abstr. Appl. Anal., (2014), pp. Art. ID 653797, 17.&#10;&#10;height 2pt depth -1.6pt width 23pt, [HIGH-ORDER ALGORITHMS FOR [R]{}IESZ&#10;DERIVATIVE AND THEIR APPLICATIONS ([II]{})]{}, J. Comput. Phys., 293&#10;(2015), pp. 218–237.&#10;&#10;, [NUMERICAL SOLUTION OF FRACTIONAL DIFFERENTIAL EQUATIONS WITH A&#10;COLLOCATION METHOD BASED ON [M]{}ÜNTZ POLYNOMIALS]{}, Comput. Math.&#10;Appl., 62 (2011), pp. 918–929.&#10;&#10;, [SYSTEMS-BASED DECOMPOSITION SCHEMES FOR THE APPROXIMATE SOLUTION OF&#10;MULTI-TERM FRACTIONAL DIFFERENTIAL EQUATIONS]{}, J. Comput. Appl. Math.,&#10;229 (2009), pp. 282–391.&#10;&#10;, [NONPOLYNOMIAL COLLOCATION APPROXIMATION OF SOLUTIONS TO FRACTIONAL&#10;DIFFERENTIAL EQUATIONS]{}, Fract. Calc. Appl. Anal., 16 (2013),&#10;pp. 874–891.&#10;&#10;, [STABILITY AND CONVERGENCE OF FINITE DIFFERENCE SCHEMES FOR A CLASS OF&#10;TIME-FRACTIONAL SUB-DIFFUSION EQUATIONS BASED ON CERTAIN&#10;SUPERCONVERGENCE]{}, J. Comput. Phys., 280 (2015), pp. 510–528.&#10;&#10;, [ANALYTICAL SOLUTIONS FOR THE MULTI-TERM TIME-FRACTIONAL&#10;DIFFUSION-WAVE/DIFFUSION EQUATIONS IN A FINITE DOMAIN]{}, Comput. Math.&#10;Appl., 64 (2012), pp. 3377–3388.&#10;&#10;height 2pt depth -1.6pt width 23pt, [ANALYTICAL SOLUTIONS FOR THE&#10;MULTI-TERM TIME-SPACE [C]{}APUTO-[R]{}IESZ FRACTIONAL&#10;ADVECTION-DIFFUSION EQUATIONS ON A FINITE DOMAIN]{}, J. Math. Anal.&#10;Appl., 389 (2012), pp. 1117–1127.&#10;&#10;, [THE [G]{}ALERKIN FINITE ELEMENT METHOD FOR A MULTI-TERM&#10;TIME-FRACTIONAL DIFFUSION EQUATION]{}, J. Comput. Phys., 281 (2015),&#10;pp. 825–843.&#10;&#10;, [A FINITE ELEMENT METHOD WITH SINGULARITY RECONSTRUCTION FOR&#10;FRACTIONAL BOUNDARY VALUE PROBLEMS]{}, ESAIM: M2AN, 49 (2015), pp.&#10;1261–1283.&#10;&#10;, [THE FINITE DIFFERENCE METHODS FOR FRACTIONAL ORDINARY DIFFERENTIAL&#10;EQUATIONS]{}, Numer. Funct. Anal. Optim., 34 (2013), pp. 149–179.&#10;&#10;, [INITIAL-BOUNDARY VALUE PROBLEMS FOR MULTI-TERM TIME-FRACTIONAL&#10;DIFFUSION EQUATIONS WITH POSITIVE CONSTANT COEFFCIENTS]{},&#10;arXiv:1312.2112v2, (2014).&#10;&#10;, [FINITE DIFFERENCE/SPECTRAL APPROXIMATIONS FOR THE TIME-FRACTIONAL&#10;DIFFUSION EQUATION]{}, J. Comput. Phys., 225 (2007), pp. 1533–1552.&#10;&#10;, [ NUMERICAL METHODS FOR SOLVING THE MULTI-TERM TIME-FRACTIONAL&#10;WAVE-DIFFUSION EQUATION]{}, Fract. Calc. Appl. Anal., 16 (2013),&#10;pp. 9–25.&#10;&#10;, [DISCRETIZED FRACTIONAL CALCULUS]{}, SIAM J. Math. Anal., 17 (1986),&#10;pp. 704–719.&#10;&#10;height 2pt depth -1.6pt width 23pt, [A STABILITY ANALYSIS OF CONVOLUTION&#10;QUADRATURES FOR [A]{}BEL-[V]{}OLTERRA INTEGRAL EQUATIONS]{}, IMA J.&#10;Numer. Anal., 6 (1986), pp. 87–101.&#10;&#10;, [INITIAL-BOUNDARY PROBLEMS FOR THE GENERALIZED MULTI-TERM&#10;TIME-FRACTIONAL DIFFUSION EQUATION]{}, J. Math. Anal. Appl., 374 (2011),&#10;pp. 538–548.&#10;&#10;, [EFFICIENT SPECTRAL–[G]{}ALERKIN METHODS FOR FRACTIONAL PARTIAL&#10;DIFFERENTIAL EQUATIONS WITH VARIABLE COEFFICIENTS]{}, J. Comput. Phys.,&#10;307 (2016), pp. 243–261.&#10;&#10;, [A SECOND-ORDER ACCURATE NUMERICAL METHOD FOR A FRACTIONAL WAVE&#10;EQUATION]{}, Numer. Math., 105 (2007), pp. 481–510.&#10;&#10;, [FINITE DIFFERENCE APPROXIMATIONS FOR FRACTIONAL ADVECTION-DISPERSION&#10;FLOW EQUATIONS]{}, J. Comput. Appl. Math., 172 (2004), pp. 65–77.&#10;&#10;, [SUPERCONVERGENCE OF A DISCONTINUOUS [G]{}ALERKIN METHOD FOR&#10;FRACTIONAL DIFFUSION AND WAVE EQUATIONS]{}, SIAM J. Numer. Anal., 51&#10;(2013), pp. 491–515.&#10;&#10;, [SPLINE COLLOCATION METHODS FOR LINEAR MULTI-TERM FRACTIONAL&#10;DIFFERENTIAL EQUATIONS]{}, J. Comput. Appl. Math., 236 (2011),&#10;pp. 167–176.&#10;&#10;, [FRACTIONAL DIFFERENTIAL EQUATIONS]{}, Academic Press, Inc., San&#10;Diego, CA, 1999.&#10;&#10;, [NUMERICAL APPROXIMATION OF PARTIAL DIFFERENTIAL EQUATIONS]{}, vol. 23&#10;of Springer Series in Computational Mathematics, Springer-Verlag,&#10;Berlin, 1994.&#10;&#10;, [A FINITE DIFFERENCE METHOD WITH NON-UNIFORM TIMESTEPS FOR FRACTIONAL&#10;DIFFUSION AND DIFFUSION-WAVE EQUATIONS]{}, The European Physical Journal&#10;Special Topics, 222 (2013), pp. 1987–1998.&#10;&#10;, [EFFICIENT AND STABLE NUMERICAL METHODS FOR MULTI-TERM TIME FRACTIONAL&#10;SUB-DIFFUSION EQUATIONS]{}, East Asian J. Appl. Math., 4 (2014),&#10;pp. 242–266.&#10;&#10;, [HOW TO APPROXIMATE THE FRACTIONAL DERIVATIVE OF ORDER []{}]{},&#10;Internat. J. Bifur. Chaos Appl. Sci. Engrg., 22 (2012), pp. 1250075, 13.&#10;&#10;, [A CLASS OF SECOND ORDER DIFFERENCE APPROXIMATION FOR SOLVING SPACE&#10;FRACTIONAL DIFFUSION EQUATIONS]{}, Math. Comp., 84 (2015), pp.&#10;1703–1727.&#10;&#10;, [A HIGH-ACCURACY PRESERVING SPECTRAL [G]{}ALERKIN METHOD FOR THE&#10;[D]{}IRICHLET BOUNDARY-VALUE PROBLEM OF VARIABLE-COEFFICIENT&#10;CONSERVATIVE FRACTIONAL DIFFUSION EQUATIONS]{}, J. Comput. Phys., 281&#10;(2015), pp. 67–81.&#10;&#10;, [COMPACT DIFFERENCE SCHEMES FOR THE MODIFIED ANOMALOUS FRACTIONAL&#10;SUB-DIFFUSION EQUATION AND THE FRACTIONAL DIFFUSION-WAVE EQUATION]{}, J.&#10;Comput. Phys., 277 (2014), pp. 1–15.&#10;&#10;, [MAXIMUM PRINCIPLE AND NUMERICAL METHOD FOR THE MULTI-TERM TIME-SPACE&#10;[R]{}IESZ-[C]{}APUTO FRACTIONAL DIFFERENTIAL EQUATIONS]{}, Appl. Math.&#10;Comput., 227 (2014), pp. 531–540.&#10;&#10;, [WEIGHTED AVERAGE FINITE DIFFERENCE METHODS FOR FRACTIONAL DIFFUSION&#10;EQUATIONS]{}, J. Comput. Phys., 216 (2006), pp. 264–274.&#10;&#10;, [FRACTIONAL SPECTRAL COLLOCATION METHOD]{}, SIAM J. Sci. Comput., 36&#10;(2014), pp. A40–A62.&#10;&#10;, [SECOND-ORDER STABLE FINITE DIFFERENCE SCHEMES FOR THE TIME-FRACTIONAL&#10;DIFFUSION-WAVE EQUATION]{}, J. Sci. Comput., 65 (2015), pp. 411–430.&#10;&#10;, [THE USE OF FINITE DIFFERENCE/ELEMENT APPROACHES FOR SOLVING THE&#10;TIME-FRACTIONAL SUBDIFFUSION EQUATION]{}, SIAM J. Sci. Comput., 35&#10;(2013), pp. A2976–A3000.&#10;&#10;height 2pt depth -1.6pt width 23pt, [NUMERICAL ALGORITHMS FOR&#10;TIME-FRACTIONAL SUBDIFFUSION EQUATION WITH SECOND-ORDER ACCURACY]{},&#10;SIAM J. Sci. Comput., 37 (2015), pp. A55–A78.&#10;&#10;, [A GENERALIZED SPECTRAL COLLOCATION METHOD WITH TUNABLE ACCURACY FOR&#10;VARIABLE-ORDER FRACTIONAL DIFFERENTIAL EQUATIONS]{}, SIAM J. Sci.&#10;Comput. 37 (2015), pp. A2710–A2732.&#10;&#10;height 2pt depth -1.6pt width 23pt, [FAST DIFFERENCE SCHEMES FOR SOLVING&#10;HIGH-DIMENSIONAL TIME-FRACTIONAL SUBDIFFUSION EQUATIONS]{}, J. Comput.&#10;Phys. 307 (2016), pp. 15–33.&#10;&#10;, [FINITE DIFFERENCE METHODS FOR THE TIME FRACTIONAL DIFFUSION EQUATION&#10;ON NON-UNIFORM MESHES]{}, J. Comput. Phys., 265 (2014), pp. 195–210.&#10;&#10;, [OPTIMAL ERROR ESTIMATES FOR SPECTRAL [P]{}ETROV-[G]{}ALERKIN AND&#10;COLLOCATION METHODS FOR INITIAL VALUE PROBLEMS FOR FRACTIONAL&#10;DIFFERENTIAL EQUATIONS]{}, SIAM J. Numer. Anal., 53 (2015), pp.&#10;2074–2096.&#10;&#10;, [A FOURTH-ORDER COMPACT [ADI]{} SCHEME FOR TWO-DIMENSIONAL NONLINEAR&#10;SPACE FRACTIONAL [S]{}CHRÖDINGER EQUATION]{}, SIAM J. Sci. Comput., 36&#10;(2014), pp. A2865–A2886.&#10;&#10;, [A HIGH ORDER SPECTRAL METHOD FOR THE MULTI-TERM TIME-FRACTIONAL&#10;DIFFUSION EQUATIONS]{}, Appl. Math. Modelling, 2015, in press.&#10;&#10;, [QUASI-COMPACT FINITE DIFFERENCE SCHEMES FOR SPACE FRACTIONAL&#10;DIFFUSION EQUATIONS]{}, J. Sci. Comput., 56 (2013), pp. 45–66.">
</outline>
<outline text="Supplementary Material" _note="We provide more numerical results to support the theoretical analysis&#10;and the proofs of Theorems \[thm:stability\]–\[thm:convergence\] in&#10;Subsection \[sec4-3\].">
  <outline text="A preconditioner for the exponential Vandermonde matrix" _note="In order to reduce the condition number of the ill-conditioned system ,&#10;we can also construct a preconditioner such that the condition number of&#10;the preconditioned system is reduced. We present the following&#10;preconditioned system where is a basis function satisfying . By properly&#10;choosing , the system has lower condition number than that of . If ,&#10;then we can choose , where is the orthogonal Legendre function given by&#10;We numerically tested that the condition number of is bounded, which is&#10;about for any , while the condition number of the original system is&#10;unbounded. The preconditioned system can be well solved by using the&#10;known tools as the multiprecision toolbox (see&#10;http://www.mathworks.com/matlabcentral/fileexchange/6446-multiple-precision-toolbox-for-matlab).">
  </outline>
  <outline text="Further investigation of the upper bound of" _note="Numerically, we find a much better upper bound of , which is presented&#10;below&#10;&#10;We plot a bound of in for , which is shown in Fig. \[fig2-3\]. We see&#10;that does not increase with respect to and .&#10;&#10;[(a) .]{}&#10;&#10;[(b) .]{}&#10;&#10;[(c) . ]{}&#10;&#10;[(d) . ]{}">
  </outline>
  <outline text="More numerical results for multi-term FODEs" _note="We present an example using more than ten correction terms to solve the&#10;following FODE.&#10;&#10;\[appdx-eg-1\] Consider the following two-term FODE subject to the&#10;initial condition , and .&#10;&#10;Choose a suitable right-hand side function such that the analytical&#10;solution of is&#10;&#10;Here, we use the multi-precision toolbox with 48 significant digits in&#10;the computation in order to avoid round-off errors (see&#10;http://www.mathworks.com/matlabcentral&#10;/fileexchange/6446-multiple-precision-toolbox-for-matlab).&#10;&#10;We consider only the fractional order with in , and the pointwise errors&#10;are shown in Figs. \[appdx-fig2\]–\[appdx-fig3\]. We can see that very&#10;accurate numerical solutions are obtained as the number of correction&#10;terms increases. Although we did not observe the global second-order&#10;accuracy, the small factor in the error equation makes numerical&#10;solutions very accurate as correction terms increases.&#10;&#10;[(a) .]{}&#10;&#10;[(b) .]{}&#10;&#10;[(c) .]{}&#10;&#10;[(d) .]{}&#10;&#10;[(a) .]{}&#10;&#10;[(b) .]{}&#10;&#10;[(c) .]{}&#10;&#10;[(d) .]{}">
  </outline>
  <outline text="Proofs of Theorems [thm:stability] and [thm:convergence]" _note="We prove the stability and convergence analysis of LGSEM –. We first&#10;introduce a lemma.&#10;&#10;\[lm4.3\] Suppose that , and are nonnegative sequence. Let and satisfies&#10;Then we have">
    <outline text="Proof of Theorem [thm:stability]" _note="Letting in and in , and eliminating the intermediate term , we obtain&#10;where and are defined by in which are defined by . Here can be derived&#10;from the fact (see Lemma 3.4 in ) and the definition of [(see )]{}.&#10;Also, can be derived from Lemma \[lm4.2\] with [in ]{}.&#10;&#10;Summing up from 0 to and applying Lemma \[lm4.1\], we obtain Applying&#10;the Cauchy–Schwarz inequality yields where is a positive constant&#10;independent of and . For simplicity, we denote Then we obtain [Note from&#10;, , and Lemma \[lm4.2\] that Hence, we derive from – ]{} For small&#10;enough , using the assumption , , and , we can get from the above&#10;inequality where , and Applying Gronwall’s inequality (Lemma \[lm4.3\])&#10;yields Using the condition and leads to Applying , and yields Combining&#10;– reaches the conclusion. This completes the proof.">
    </outline>
    <outline text="Proof of Theorem [thm:convergence]" _note="We now focus on the convergence of the scheme –. Introduce the projector&#10;: as The properties of the interpolation and projection operators are&#10;listed below.&#10;&#10;\[lem2-1\] If , then we have&#10;&#10;\[lem2-2\] If , then&#10;&#10;Denote by , , , and . Then we get the error equation of – as follows&#10;where , , and&#10;&#10;From Theorem \[thm:stability\], –, and the properties , we can similarly&#10;derive where&#10;&#10;It is easy to obtain and From and the boundedness of and , we derive&#10;Using the assumption and applying the property , we obtain&#10;&#10;We can get from the assumption, hence Applying the triangle inequality&#10;and Lemma \[lem2-2\] yields the desired result.">
    </outline>
  </outline>
  <outline text="Multi-term time-fractional subdiffusion equation" _note="Consider the following multi-term time-fractional subdiffusion equation&#10;where , , , and . Here, we extend LGSEM – to solve , which can be easily&#10;extended to more generalized multi-term time-fractional subdiffusion&#10;equations, see e.g. . We directly present the LGSEM for as: Find for ,&#10;such that where , are suitable positive integers, and are defined as in&#10;.&#10;&#10;The convergence of the scheme – can be similarly proven as that of&#10;Theorem \[thm:convergence\], which is given by where the analytical&#10;solution of satisfies , is uniformly bounded for , , and []{}.&#10;&#10;If in –, then we have&#10;&#10;\[exm:throw-at-far-field\] Consider the following time-fractional&#10;subdiffusion equation subject to the homogenous initial and boundary&#10;conditions, , and .&#10;&#10;Next, we use the scheme – with to solve . Here in space, we use two&#10;subdomains: , and . We observe numerically that the resolution in space&#10;is fine enough and the total error is dominated by errors from time&#10;discretization.&#10;&#10;It is known in that the analytical solution to satisfies , where . As we&#10;do not have the explicit form of the solution, we use reference&#10;solutions that are obtained with smaller time stepsize .&#10;&#10;In Table \[apx-tb2-1\], we observe that the average errors become&#10;smaller when increases. We also observe second-order accuracy when . In&#10;the first column of Table \[apx-tb2-1\], we also list numerical results&#10;from the scheme of applying the L1 method in time with spatial&#10;discretization by the spectral element method (L1-SEM). We observe&#10;first-order accuracy of the L1-SEM, with the corresponding errors much&#10;larger than those by our proposed schemes.&#10;&#10;We observe that we do not need to use the correction terms to get&#10;second-order accuracy when computing solutions at time far from . Hence,&#10;we can still use the method – to solve , but the operator can be&#10;replaced with when , i.e., in for . It is shown in Table \[apx-tb2-2\]&#10;that similar error behaviors are obtained, compared to those results in&#10;Table \[apx-tb2-1\]. This can be readily explained by the truncation&#10;error defined in : When , is suitably large, the correction term in&#10;contributes little to accuracy and convergence rate of the method –.">
  </outline>
  <outline text="The  method and fractional trapezoidal rule used in Example 5.2" _note="L1 method: The Caputo derivatives in are discretized by the L1 method,&#10;and the corresponding scheme is given by where and .&#10;&#10;Trapezoidal rule method: We transform into its integral form as , then&#10;the trapezoidal rule is applied to the fractional integrals. The&#10;corresponding scheme is given by where and is given by">
  </outline>
</outline>
  </body>
</opml>