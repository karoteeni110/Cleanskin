<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>Fronthaul-Aware Software-Defined Joint Resource Allocation and User
Scheduling for 5G Networks</title>
    <abstract>Software-defined networking (SDN) is the concept of decoupling the
control and data planes to create a flexible and agile network, assisted
by a central controller. However, the performance of SDN highly depends
on the limitations in the fronthaul which are inadequately discussed in
the existing literature. In this paper, a fronthaul-aware
software-defined resource allocation mechanism is proposed for 5G
wireless networks with in-band wireless fronthaul constraints.
Considering the fronthaul capacity, the controller maximizes the
time-averaged network throughput by enforcing a coarse correlated
equilibrium (CCE) and incentivizing base stations (BSs) to locally
optimize their decisions to ensure mobile users’ (MUs)
quality-of-service (QoS) requirements. By marrying tools from Lyapunov
stochastic optimization and game theory, we propose a two-timescale
approach where the controller gives recommendations, i.e., sub-carriers
with low interference, in a long-timescale whereas BSs schedule their
own MUs and allocate the available resources in every time slot.
Numerical results show considerable throughput enhancements and delay
reductions over a non-SDN network baseline. </abstract>
  </head>
  <body>
<outline text="Introduction" _note="To satisfy the ever-increasing traffic demands in wireless networks,&#10;small cell base stations (BSs) are deployed to boost network capacity.&#10;However, due to frequency reuse in adjacent cells, signals from&#10;neighboring BSs result in severe co-channel interference. Although&#10;coupled BSs can coordinate their transmissions by exchanging information&#10;, it incurs high overhead in terms of latency, power cost, and allocated&#10;bandwidth. In order to reduce the overhead of coordination, the concept&#10;of software-defined networking (SDN) which decouples the control and&#10;data plane of networks has been considered . Under current wireless SDN&#10;architectures, a central controller, having the global view of the&#10;network at the top of the hierarchy, makes control decisions and issues&#10;recommendations to BSs at the lower-level of the hierarchy. Thus, BSs&#10;are allowed to locally optimize their transmissions following the&#10;controller’s recommendations without further coordination among&#10;neighboring BSs. In , Fu [ET AL.]{} consider a scenario in which&#10;wireless service providers (WSPs) bid for resources via a central&#10;controller on behalf of the subscribed users. The resource management is&#10;analyzed through an auction process. In , a central controller schedules&#10;users based on the WSP’s value function which relies on other&#10;competitors’ private information. Additionally, the flow programmability&#10;of SDN under dense mobile environments is studied in . However, the&#10;above studies do not address the overhead induced by using a&#10;capacity-limited shared fronthaul which negatively impacts the network&#10;performance. Hence, the impact of fronthaul capacity and latency on the&#10;network performance cannot be ignored, especially in highly-centralized&#10;SDN architectures.&#10;&#10;The main contribution of this paper is to propose a fronthaul-aware SDN&#10;architecture for a network consisting of locally coupled small cell BSs.&#10;These BSs compete over limited resources to maximize their own&#10;throughputs while ensuring mobile users’ (MUs) quality-of-service (QoS)&#10;requirements. Due to the time-varying environment and mutual&#10;interference coupling among BSs, the throughput maximization problem is&#10;modeled as a [STOCHASTIC GAME]{}. In the SDN architecture, the central&#10;controller optimizes the weighted sum-log utility subject to a game&#10;theoretic equilibrium known as coarse correlated equilibrium (CCE), and&#10;provides recommendations for BSs via an in-band wireless fronthaul. The&#10;reliability of the fronthaul is measured in terms of the signal-to-noise&#10;ratio (SNR) between the BS and the controller while the cost of&#10;fronthaul is modeled in terms of a time penalty as a function of the&#10;number of BSs and MUs. To reduce the overhead in the fronthaul, we&#10;propose a two-timescale decomposition: optimization at the central&#10;controller in a long timescale and decision making at BSs during a short&#10;timescale. Using tools from Lyapunov optimization, a low-complexity&#10;resource allocation and MU scheduling scheme is employed at each BS. In&#10;the numerical results, we evaluate the performance of the proposed&#10;SDN-aware resource allocation solution by comparing it to a non-SDN&#10;architecture. Furthermore, the impact of fronthaul reliability on the&#10;performance is studied with the aid of the simulations.">
</outline>
<outline text="System Model" _note="We consider a downlink (DL) wireless network consisting of a set of&#10;locally coupled small cell BSs with frequency reuse factor 1. In this&#10;network, BS serves a set of MUs , and each MU is associated with one BS&#10;only. A central controller coordinates these locally coupled BSs and&#10;communicates with BSs via an in-band wireless fronthaul. We assume that&#10;all network entities are equipped with single antenna and share a set of&#10;sub-carriers in the DL. Additionally, the considered network operates in&#10;slotted time indexed by , and each time slot is unit time for&#10;simplicity. In this regard, we refer to slots as one time frame and&#10;index the time frame by in which . Furthermore, denotes the channel gain&#10;(including path loss and channel fading) from transmitter to receiver&#10;over sub-carrier where is a finite set. Note that all channels are&#10;independent and experience block fading over time slots.&#10;&#10;At the beginning of frame , BS uploads its local information to the&#10;controller via the fronthaul by equally allocating the power budget over&#10;all sub-carriers. For a given target fronthaul rate , the required time&#10;to upload the information at BS satisfies, where subscript refers to the&#10;controller, and is the noise variance. To gather information from all&#10;BSs, the controller requires time slots. After manipulating the acquired&#10;local information, the controller sends back recommendations to every BS&#10;with a target rate . Thus, the time required for feedback for all BSs&#10;satisfies, In , the controller equally allocates the available power to&#10;all BSs over all sub-carriers. Finally, aided by the controller’s&#10;suggestions, BS serves its associated MUs in the remaining slots of&#10;frame . It is assumed that sub-carriers are shared in both DL and&#10;fronthaul. To avoid interference between the DL and fronthaul, BSs wait&#10;for time slots, i.e., round trip time for the controller’s&#10;recommendations. Thus, the overhead of the fronthaul is which belongs to&#10;the finite set , and time slots are left for DL transmission within&#10;frame . It is assumed that the knowledge of and the perfect channel&#10;information of the signaling links are available at both the central&#10;controller and BSs. Moreover, BSs have full information of the direct&#10;links to the associated MUs.&#10;&#10;In the DL transmission, BS serves MU with power over sub-carrier in&#10;which and . Each sub-carrier is used by the BS to serve one MU, but can&#10;be reused in other cells resulting in inter-cell interference.&#10;Considering the available time in the DL, i.e., , the effective DL rate&#10;of MU served by BS over sub-carrier and time period is given by, It can&#10;be noted that is bounded above by a maximal rate due to the fact that&#10;the channel gains and transmit power are upper bounded. Moreover, each&#10;BS has queue buffers to store the traffic arrivals for MUs from the core&#10;network. Let denote the data queue at the beginning of slot for MU which&#10;evolves as follows: Here, is the data arrival for MU during time slot&#10;which is independent and identically distributed over time with the mean&#10;and bounded above by a finite value , i.e., . Since it is infeasible to&#10;store data indefinitely, BSs need to ensure that queue buffers are MEAN&#10;RATE STABLE, i.e., []{} for all . Note that satisfying queue stability&#10;is equivalent to ensuring that the average serving rate is larger than&#10;the mean arrival . Therefore, the stability condition becomes, . Thus,&#10;as BSs compete one another over the limited resources to maximize the&#10;average DL rate, they need to satisfy,">
</outline>
<outline text="Stochastic Game among BSs" _note="The competition among BSs over resources to maximize their utilities (in&#10;terms of rates) under queue and channel uncertainties is modeled as a&#10;stochastic game among players/BSs. Here, and are the state and action&#10;spaces of all players, while denotes player ’s utility. In each time&#10;slot , BS observes a random state realization from the state space .&#10;Then, BS chooses a transmit power vector, []{} from its action space&#10;[]{} to serve its MUs. Here, is the indicator function. We define BS ’s&#10;utility as the expected DL rate with respect to the interference&#10;channels at the associated MUs which is given by, where is the set of&#10;interference channel gains of . Additionally, is the global random state&#10;with , and is the global control action with . Furthermore, is the mixed&#10;strategy of the stochastic game, and we focus on the MIXED STATIONARY&#10;AND MARKOVIAN strategy in this work. Thus, the long-term time average&#10;expected utility of BS is given by, For the purpose of allocating&#10;resources among BSs, the controller acts as a game coordinator.&#10;According to BSs’ requirements , the controller provides suggestions for&#10;BSs. In order to incentivize BSs to follow the controller’s suggestions,&#10;the controller finds the strategy satisfying the CCE constraints. In&#10;this regard, we consider a more general case, i.e., the -coarse&#10;correlated equilibrium (-CCE) .&#10;&#10;\[Def: epsilon-CCE\] The probability distribution is an -CCE if it&#10;satisfies, for some , where is the conditional expected utility on the&#10;state . Here, is the maximal utility BS can achieve at state when&#10;deviating from the strategy .">
</outline>
<outline text="Controller-assisted Resource Allocation and User Scheduling" _note="To ensure an -CCE for the stochastic game among BSs, the controller&#10;solves the network utility maximization problem which is given by, where&#10;is the network utility. In [**OP**]{}, and depend on the statistics of ,&#10;i.e., distributions of all interference channels, as per , , and . Since&#10;the MU has only the knowledge of the aggregate interference, estimating&#10;the distribution for each individual interference channel is&#10;impractical. To cope with this, an auxiliary utility for BS is&#10;introduced as follows: where is the maximal element in .&#10;&#10;\[Prop: mean rate stability\] Let be the average auxiliary utility of BS&#10;. Then, the mean rate stability in is assured if , is held.&#10;&#10;Please refer to Appendix \[Lem: mean rate stability\].&#10;&#10;\[Prop: Epsilon-CCE\] The CCE strategy with respect to is an -CCE with&#10;respect to .&#10;&#10;Please refer to Appendix \[Lem: Epsilon-CCE\].&#10;&#10;Since is the lower bound of as in , Propositions \[Prop: mean rate&#10;stability\] and \[Prop: Epsilon-CCE\] state that finding a CCE with&#10;respect to maximizes the lower bound of the optimal solution of&#10;[**OP**]{}. However, to solve [**OP**]{}, each BS requires the knowledge&#10;of the other BSs’ actions (i.e., ) and their impact on . Since the MU&#10;has the ability to measure only the aggregate interference, estimating&#10;the impact of on is also impractical. To address this, we assume that&#10;the mapping , is known at the controller in advance. Additionally, to&#10;ensure , and the CCE, the controller needs and all which in practice are&#10;unknown even at the BSs. Nevertheless, as time evolves, all the&#10;statistics can be empirically estimated by BSs. For notational&#10;simplicity, we denote the estimated state distribution and mean data&#10;arrival as and which are the uploaded information sent via fronthaul.&#10;Thus, the controller solves the modified problem of [**OP**]{} given&#10;by,\&#10;[**RP:**]{} where is the strategy related to the auxiliary utility and&#10;the estimated statistics []{}. Accordingly, we have []{}.&#10;&#10;Due to the fact that the objective and all the constraints in [**RP**]{}&#10;are concave and affine functions, respectively, [**RP**]{} is a convex&#10;optimization problem. Owing to the fact that analytically solving&#10;[**RP**]{} is not tractable, we resort to CVX, a package for specifying&#10;and solving convex programs , by numerically finding the optimal&#10;strategy of [**RP**]{}. Based on the strategy , for each global state ,&#10;the controller generates global action realizations . From all global&#10;states and the corresponding global action realizations for time slot ,&#10;there exists a mapping rule describing the above state-to-action&#10;relation, i.e., . Afterwards, the controller feeds back to BSs.&#10;&#10;With the knowledge of and the observed , BS obtains the suggested&#10;transmit action . Although following the suggested assures data&#10;throughput higher than the mean data arrival, it may suggest to schedule&#10;MUs considering only the channel quality neglecting their queues.&#10;Therefore, this transmission suggestion may result in high latency. To&#10;remedy to this issue, instead of following the suggested action, BS&#10;optimizes the transmit power over the recommended set of sub-carriers&#10;and schedules its MUs. Thus, utilizing the available sub-carriers, BS&#10;maximizes the average DL rate by scheduling the MUs ensuring their queue&#10;stability in the remaining time slots of frame . This is modeled as the&#10;following sub-problem: which can be solved using dynamic programming.&#10;However, dynamic programming suffers from high computational complexity.&#10;To cope with this complexity issue, we resort to the tools in the&#10;Lyapunov optimization framework. Let be the combined queue at BS . The&#10;conditional Lyapunov drift-plus-penalty for slot is given by, with a&#10;parameter which decides the trade-off between optimality and queue&#10;stability, and is the Lyapunov function. Using , can be simplified as&#10;follows, The solution to [**SP**]{} can be found by minimizing the upper&#10;bound in in every time slot . Thus, relaxing the power constraint in&#10;[**SP**]{}, the MU scheduling problem during time slot at BS becomes,&#10;Here, the expectation is over the conditional distribution of the&#10;estimated aggregate interference in slot , denoted by . For simplicity,&#10;the time index is omitted in the interference term . Applying the KKT&#10;conditions, the feasible power allocation , , is found by if , and&#10;otherwise. Here, is chosen to satisfy . Finally, we search for the&#10;nearest (with respect to the Euclidean distance) in as the transmit&#10;power.&#10;&#10;\[Remark: V impact\] From , it can be observed that for small , BS has&#10;high priority to serve MU with a large queue . Analogously, for large ,&#10;the BS allocates higher power to the MUs with better links. As such, the&#10;BS maximizes its DL rate while allowing the queues of the MUs with worse&#10;links to grow.&#10;&#10;By the end of DL transmission in time slot , MUs send feedback of the&#10;aggregate interference to the BS. Then, the BS updates according to and&#10;the estimated interference statistics as follows: if and . Otherwise,&#10;Furthermore, the BS empirically updates the estimated state&#10;distributions of and , and the mean arrival for the purpose of upload to&#10;the controller during frame . The overheads in fronthaul depend on the&#10;amount of information which needs to be uploaded. Based on the&#10;cardinalities of sets of channels and waiting time along the mean&#10;arrivals, each BS uploads amount of statistical values via the&#10;fronthaul. Thus, in becomes , where is the required transmission rate to&#10;upload a single statistical value. Moreover, assuming that all possible&#10;mapping rules are available at both the controller and BSs, the&#10;controller sends real values representing the mappings . Thus, in&#10;becomes .&#10;&#10;The proposed software-defined approach operates in two timescales. In&#10;the long timescale, BS uploads and at each time frame. Based on the&#10;uploaded information, the controller finds the set of optimal CCE&#10;mapping rules and feeds them back to the BSs. In the short timescale,&#10;i.e., at every time slot, BS schedules its MUs by solving [**BP**]{}.&#10;&#10;The information flow diagram of the two-timescale software-defined&#10;control approach is shown in Fig. \[Fig: Flow diagram\].">
</outline>
<outline text="Numerical Results" _note="In this section, we validate the proposed solution for a network&#10;composed of two small cell BSs and two MUs per cell. For notation&#10;clarity, we refer to the BS and the two MUs in the first cell as BS 1,&#10;MU 1, and MU 2 while for the second cell, BS 2, MU 3, and MU 4,&#10;respectively. We consider an indoor communication environment with the&#10;path loss model , where in meters is the distance between the&#10;transmitter and receiver . At MUs 1 and 3, the distances to the&#10;associated and interfering BSs are 10m and 40m while at MUs 2 and 4,&#10;they are 20m and 30m, respectively. Further, all wireless channels&#10;experience Rayleigh fading with unit variance, and channel gains are&#10;quantized into two levels. The time cost is quantized into two levels&#10;with . Additionally, we assume that the fronthaul SNR measured at the&#10;controller is 20dB. Coherence time and the bandwidth in each sub-channel&#10;are 100ms and 10MHz, respectively. We consider Poisson data arrival&#10;processes with mean values Mbps and Mbps. Moreover, dBm, dBm, dBm, , ,&#10;and (bit/s/Hz). For performance comparison, we consider a non-SDN scheme&#10;without the central controller, and BSs do not communicate with each&#10;other. In this baseline, the BS solves [**BP**]{} without the available&#10;sub-carrier constraint, i.e., , and . The impact of the trade-off&#10;parameter on the BS’s average DL rate and queue length for the proposed&#10;and baseline schemes is illustrated in Fig. \[Fig: 2\] and Fig. \[Fig:&#10;3\], respectively. Note that the average queue length is proportional to&#10;the average waiting time of a packet in the queue (i.e., ) and thus,&#10;represents the average delay/latency. For small , Lyapunov optimization&#10;aims at minimizing the average queues while for large , the focus is on&#10;maximizing the average rates. Thus, the lowest queues can be observed at&#10;while the highest rates can be seen at for both SDN and non-SDN schemes.&#10;Furthermore, Fig. \[Fig: 2\] illustrates that the proposed approach is&#10;aware of the traffic demands in which higher rates are ensured for BS 1&#10;over BS 2 while the non-SDN scheme provides equal rates for both BSs.&#10;According to Fig. \[Fig: 3\], it can be noted that the SDN scheme&#10;maintains a lower queue length for the BS with high demands (BS 1) over&#10;the non-SDN scheme, i.e. a significant delay reduction for high traffic&#10;demands is ensured. Although there is no improvement in the latency of&#10;BS 2, the proposed scheme provides higher rates compared to the non-SDN&#10;scheme.&#10;&#10;\[Fig: 2\]&#10;&#10;The trade-off between the time-averaged network sum rate and the&#10;aggregate queue is illustrated in Fig. \[Fig: R\_Q\_tradeoff\]. It can&#10;be noted that for a given target rate, the proposed SDN approach yields&#10;lower latency compared to the non-SDN scheme. Moreover, Fig. \[Fig:&#10;R\_Q\_tradeoff\] shows that increasing improves the rates with a price&#10;of the latency which grows as increases. Therefore, can be selected as&#10;the preferred trade-off parameter due to the fact that the cost of&#10;latency dominates the gains in rates for values of , for both schemes.&#10;For the choice of , the proposed SDN scheme yields about 8% gains in&#10;rates and 19% reductions in latency over the non-SDN scheme.&#10;&#10;Finally, the impact of the fronthaul SNR on the throughput and latency&#10;on the proposed two-timescale SDN approach is shown in Fig. \[Fig:&#10;SNR\_Q\]. Note that the non-SDN scheme has no impact from the&#10;reliability of the fronthaul. For a low-quality fronthaul, the round&#10;trip time for the controller’s recommendations, , is larger than , i.e.,&#10;the maximum element in . Therefore, BSs do not receive any&#10;recommendation even after waiting time slots and thus, cannot utilize&#10;their DL transmission resulting lower rates and higher delay compared to&#10;the non-SDN scheme. As the fronthaul becomes reliable, BSs obtain the&#10;recommendations with . Thus, a significant improvement in throughputs&#10;can be observed. These gains in rates dominate the overhead in fronthaul&#10;and thus, improve the overall latency.&#10;&#10;">
</outline>
<outline text="Conclusions" _note="In this paper, we propose a software-defined control mechanism for&#10;wireless networks with an in-band fronthaul. Here, BSs compete over the&#10;wireless resources in both the DL and fronthaul to maximize their&#10;utilities in terms of the average DL rates under the uncertainties of&#10;queues and channel states. Thus, the utility maximization problem is&#10;cast as a dynamic stochastic game among BSs where a central controller&#10;with a global view coordinates BSs via the fronthaul. Leveraging the&#10;timescale separation among the central controller and BSs, the&#10;controller ensures a CCE in the network by providing recommendations for&#10;BSs in the long timescale while BSs serve MUs in the short timescale.&#10;The tools of Lyapunov optimization are invoked to provide a&#10;low-complexity traffic-aware user scheduling algorithm at each BS.&#10;Simulation results yield throughput and latency enhancements over a&#10;non-SDN scheme. Furthermore, it is noted that the cost of overhead in&#10;fronthaul becomes negligible compared to the gains in throughput and&#10;latency as the reliability of the fronthaul improves.">
</outline>
<outline text="Acknowledgments" _note="This research was supported by TEKES grant 2364/31/2014 and the Academy&#10;of Finland project CARMA.">
</outline>
<outline text="Proof of Proposition [Prop: mean rate stability]" _note="As the aggregate interference in is modeled by the maximal interference&#10;channel gain , is lower bounded by , i.e., Taking the expectation of&#10;with respect to and applying , we obtain">
</outline>
<outline text="Proof of Proposition [Prop: Epsilon-CCE]" _note="Let be the CCE with respect to . Thus, from and , it satisfies,&#10;Furthermore, can be rewritten as follows: with . Applying to , it holds&#10;that, where and is an auxiliary variable. By applying and to , where .&#10;From and , we note that is an -CCE of .">
</outline>
  </body>
</opml>