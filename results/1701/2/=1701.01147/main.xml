<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>Alternate Product Adjacencies in Digital Topology</title>
    <abstract>We study properties of Cartesian products of digital images, using a
variety of adjacencies that have appeared in the literature.

Key words and phrases: digital topology, digital image, retraction,
approximate fixed point property, continuous multivalued function, shy
map

2010 MSC: 54C99, 05C99 </abstract>
  </head>
  <body>
<outline text="Introduction" _note="We study various adjacency relations for Cartesian products of multiple&#10;digital images. We are particularly interested in “product properties” -&#10;properties that are preserved by taking Cartesian products - and “factor&#10;properties” for which possession by a Cartesian product of digital&#10;images implies possession of the property by the factors. Many of the&#10;properties examined in this paper were considered in  for adjacencies&#10;based on the normal product adjacency. We consider other adjacencies in&#10;this paper, including the tensor product adjacency, the Cartesian&#10;product adjacency, and the composition or lexicographic adjacency.">
</outline>
<outline text="Preliminaries" _note="Much of the material that appears in this section is quoted or&#10;paraphrased from , and other papers cited in this section.&#10;&#10;We use , , and to represent the sets of natural numbers, integers, and&#10;real numbers, respectively,&#10;&#10;A digital image is a graph. Usually, we consider the vertex set of a&#10;digital image to be a subset of for some . Further, we often, although&#10;not always, restrict our study of digital images to finite graphs. We&#10;will assume familiarity with the topological theory of digital images.&#10;See, e.g., for many of the standard definitions. All digital images are&#10;assumed to carry their own adjacency relations (which may differ from&#10;one image to another). When we wish to emphasize the particular&#10;adjacency relation we write the image as , where represents the&#10;adjacency relation.">
  <outline text="Common adjacencies" _note="To denote that and are -adjacent points of some digital image, we use&#10;the notation , or when can be understood.&#10;&#10;The -adjacencies are commonly used. Let , . Let be an integer, . We say&#10;and are -adjacent, , if&#10;&#10;there are at most indices for which , and&#10;&#10;for all indices such that we have .&#10;&#10;A -adjacency is often denoted by the number of points adjacent to a&#10;given point in using this adjacency. E.g.,&#10;&#10;In , -adjacency is 2-adjacency.&#10;&#10;In , -adjacency is 4-adjacency and -adjacency is 8-adjacency.&#10;&#10;In , -adjacency is 6-adjacency, -adjacency is 18-adjacency, and&#10;-adjacency is 26-adjacency.&#10;&#10;For Cartesian products of digital images, the normal product adjacency&#10;(see Definitions \[NP-def\] and \[NP\_u-def\]) has been used in papers&#10;including  (errors in  are corrected in ). The tensor product adjacency&#10;(see Definition \[tensor-def\]), Cartesian product adjacency (see&#10;Definition \[product-adj-def\]), and the lexicographic adjacency (see&#10;Definition \[lexico\]) have not to our knowledge been studied in digital&#10;topology, so their respective roles in digital topology remain to be&#10;determined.&#10;&#10;Given digital images or graphs and , the [NORMAL PRODUCT ADJACENCY]{} ,&#10;also called the [STRONG PRODUCT ADJACENCY]{} (denoted in ) generated by&#10;and on the Cartesian product is defined as follows.&#10;&#10;\[NP-def\] []{} Let , . Then and are -adjacent in if and only if&#10;&#10; and ; or&#10;&#10; and ; or&#10;&#10; and .&#10;&#10;As a generalization of Definition \[NP-def\], we have the following.&#10;&#10;\[NP\_u-def\] []{} Let and be positive integers, . Let be digital&#10;images. Let be the adjacency defined on the Cartesian product as&#10;follows. For , and are -adjacent if and only if&#10;&#10;for at least 1 and at most indices , , and&#10;&#10;for all other indices , .&#10;&#10;\[tensor-def\] The [TENSOR PRODUCT ADJACENCY]{} on the Cartesian product&#10;of , denoted , is as follows. Given , we have and are -adjacent in if&#10;and only if for all , .&#10;&#10; \[msc8-fig\]&#10;&#10;[]{} \[product-adj-def\] The [CARTESIAN PRODUCT ADJACENCY]{} on the&#10;Cartesian product of , denoted or , is as follows. Given , we have and&#10;are -adjacent in if and only if for some  , , and for all indices , .&#10;&#10;The following has an elementary proof.&#10;&#10;\[CartesianAndNP\] For , .&#10;&#10;\[lexico\] []{} Let be digital images, . Let . Let , . We say and are&#10;adjacent in the [COMPOSITION]{} or [LEXICOGRAPHIC]{} adjacency on if ,&#10;or if for some index , , we have and . The adjacency is denoted .&#10;&#10; \[lex-adj-fig\]&#10;&#10;\[gaps-allowed\] Notice that for and to be -adjacent with and -adjacent,&#10;for indices we do not require that and be either equal or adjacent. See,&#10;e.g., Figure 2, where and are -adjacent. This is unlike other&#10;adjacencies discussed above.">
  </outline>
  <outline text="Connectedness" _note="A subset of a digital image is [-CONNECTED]{} , or [CONNECTED]{} when is&#10;understood, if for every pair of points there exists a sequence such&#10;that , , and for .&#10;&#10;For two subsets , we will say that and are ADJACENT when there exist&#10;points and such that and are equal or adjacent. Thus sets with nonempty&#10;intersection are automatically adjacent, while disjoint sets may or may&#10;not be adjacent. It is easy to see that a finite union of connected&#10;adjacent sets is connected.">
  </outline>
  <outline text="Continuous functions" _note="The following generalizes a definition of  .&#10;&#10;\[continuous\] [ ]{} Let and be digital images. A function is&#10;-continuous if for every -connected of we have that is a -connected&#10;subset of .&#10;&#10;When the adjacency relations are understood, we will simply say that is&#10;CONTINUOUS. Continuity can be reformulated in terms of adjacency of&#10;points:&#10;&#10;\[cont-by-adj\] [ ]{} A function is continuous if and only if, for any&#10;adjacent points , the points and are equal or adjacent.&#10;&#10;Note that similar notions appear in  under the names [IMMERSION]{},&#10;[GRADUALLY VARIED OPERATOR]{}, and [GRADUALLY VARIED MAPPING]{}.&#10;&#10;\[composition\] []{} If and are continuous, then is continuous.&#10;&#10;[]{} \[const-exl\] A constant function between digital images is&#10;continuous.&#10;&#10;\[id-exl\] The identity function is continuous.&#10;&#10;Let be a digital image in . Let . A [ -PATH OF LENGTH FROM TO ]{} is a&#10;set such that , , and and are equal or -adjacent for . If , we say is a&#10;[PATH OF LENGTH 0 FROM TO ]{}.&#10;&#10;Notice that for a path from to as described above, the function defined&#10;by is -continuous. Such a function is also called a [ -PATH OF LENGTH&#10;FROM TO ]{}.">
  </outline>
  <outline text="Digital homotopy" _note="A homotopy between continuous functions may be thought of as a&#10;continuous deformation of one of the functions into the other over a&#10;finite time period.&#10;&#10;[(; see also )]{} \[htpy-2nd-def\] Let and be digital images. Let be&#10;-continuous functions. Suppose there is a positive integer and a&#10;function such that&#10;&#10;for all , and ;&#10;&#10;for all , the induced function defined by is continuous. That is, is a&#10;path in .&#10;&#10;for all , the induced function defined by is continuous.&#10;&#10;Then is a [digital homotopy between]{} and , and and are [digitally&#10;homotopic in]{} . If for some we have for all , we say [holds fixed]{},&#10;and is a [pointed homotopy]{}.&#10;&#10;We denote a pair of homotopic functions as described above by . When the&#10;adjacency relations and are understood in context, we say and are&#10;[DIGITALLY HOMOTOPIC]{} (or just [HOMOTOPIC]{}) to abbreviate “digitally&#10;homotopic in ,&quot; and write .&#10;&#10;\[htpy-equiv-rel\] [ ]{} Digital homotopy is an equivalence relation&#10;among digitally continuous functions .&#10;&#10;[ ]{} \[htpy-type\] Let be a -continuous function and let be a&#10;-continuous function such that Then we say and have the [same -homotopy&#10;type]{} and that and are -[homotopy equivalent]{}, denoted or as when&#10;and are understood. If for some and we have , , and there exists a&#10;homotopy between and that holds fixed, and a homotopy between and that&#10;holds fixed, we say and are [pointed homotopy equivalent]{} and that and&#10;have the [same pointed homotopy type]{}, denoted or as when and are&#10;understood.&#10;&#10;It is easily seen, from Proposition \[htpy-equiv-rel\], that having the&#10;same homotopy type (respectively, the same pointed homotopy type) is an&#10;equivalence relation among digital images (respectively, among pointed&#10;digital images).">
  </outline>
  <outline text="Continuous and connectivity preserving multivalued functions" _note="Given sets and , a MULTIVALUED FUNCTION assigns a subset of to each&#10;point of . We will write . For and a multivalued function , let .&#10;&#10;\[mildly\] []{} A multivalued function is CONNECTIVITY PRESERVING if is&#10;connected whenever is connected.&#10;&#10;As is the case with Definition \[continuous\], we can reformulate&#10;connectivity preservation in terms of adjacencies.&#10;&#10;[]{} \[mildadj\] A multivalued function is connectivity preserving if&#10;and only if the following are satisfied:&#10;&#10;For every , is a connected subset of .&#10;&#10;For any adjacent points , the sets and are adjacent.&#10;&#10;Definition \[mildly\] is related to a definition of multivalued&#10;continuity for subsets of given and explored by Escribano, Giraldo, and&#10;Sastre in based on subdivisions. (These papers make a small error with&#10;respect to compositions, that is corrected in .) Their definitions are&#10;as follows:&#10;&#10;For any positive integer , the -TH SUBDIVISION of is An adjacency&#10;relation on naturally induces an adjacency relation (which we also call&#10;) on as follows: are adjacent in if and only if and are adjacent in .&#10;&#10;Given a digital image , the -TH SUBDIVISION of is&#10;&#10;Let be the natural map sending to .&#10;&#10;For a digital image , a function INDUCES A MULTIVALUED FUNCTION if&#10;implies&#10;&#10;\[multi-cont\] A multivalued function is called CONTINUOUS when there is&#10;some such that is induced by some single valued continuous function .&#10;&#10;Note  that the subdivision construction (and thus the notion of&#10;continuity) depends on the particular embedding of as a subset of . In&#10;particular we may have with isomorphic to but not isomorphic to . E.g.,&#10;in Figure \[subdivfig\], when we use 8-adjacency for all images, and are&#10;isomorphic, each being a set of two adjacent points, but and are not&#10;isomorphic since can be disconnected by removing a single point, while&#10;this is impossible in .&#10;&#10;The definition of connectivity preservation makes no reference to as&#10;being embedded inside of any particular integer lattice .&#10;&#10;\[pt-images-connected\] []{} Let be a continuous multivalued function&#10;between digital images. Then&#10;&#10;for all , is connected; and&#10;&#10;for all connected subsets of , is connected.&#10;&#10;\[cont-hierarchy\] []{} For , if is a continuous multivalued function,&#10;then is connectivity preserving.&#10;&#10;The subdivision machinery often makes it difficult to prove that a given&#10;multivalued function is continuous. By contrast, many maps can easily be&#10;shown to be connectivity preserving.">
  </outline>
  <outline text="Other notions of multivalued continuity" _note="Other notions of continuity have been given for multivalued functions&#10;between graphs (equivalently, between digital images). We have the&#10;following.&#10;&#10;[ ]{} \[Tsaur-def\] Let be a multivalued function between digital&#10;images.&#10;&#10; has [WEAK CONTINUITY]{} if for each pair of adjacent , and are adjacent&#10;subsets of .&#10;&#10; has [STRONG CONTINUITY]{} if for each pair of adjacent , every point of&#10;is adjacent or equal to some point of and every point of is adjacent or&#10;equal to some point of .&#10;&#10;\[mild-and-weak\] []{} Let be a multivalued function between digital&#10;images. Then is connectivity preserving if and only if has weak&#10;continuity and for all , is connected.&#10;&#10;[]{} \[pt-images-discon\] If is defined by , , then has both weak and&#10;strong continuity. Thus a multivalued function between digital images&#10;that has weak or strong continuity need not have connected point-images.&#10;By Theorem \[mildadj\] and Proposition \[pt-images-connected\] it&#10;follows that neither having weak continuity nor having strong continuity&#10;implies that a multivalued function is connectivity preserving or&#10;continuous.&#10;&#10;[]{} Let be defined by , . Then is continuous and has weak continuity&#10;but does not have strong continuity.&#10;&#10;[]{} Let be a multivalued function between digital images. If has strong&#10;continuity and for each , is connected, then is connectivity preserving.&#10;&#10;The following shows that not requiring the image of a point to be&#10;connected can yield topologically unsatisfying consequences for weak and&#10;strong continuity.&#10;&#10;[]{} Let and be nonempty digital images. Let the multivalued function be&#10;defined by for all .&#10;&#10; has both weak and strong continuity.&#10;&#10; is connectivity preserving if and only if is connected.&#10;&#10;As a specific example  consider and , all with adjacency. Then the&#10;function with has both weak and strong continuity, even though it maps a&#10;connected image surjectively onto a disconnected image.">
  </outline>
  <outline text="Shy maps and their inverses" _note="\[shy-def\] Let be a continuous surjection of digital images. We say is&#10;[SHY]{} if&#10;&#10;for each , is connected, and&#10;&#10;for every such that and are adjacent, is connected.&#10;&#10;Shy maps induce surjections on fundamental groups  . Some relationships&#10;between shy maps and their inverses as multivalued functions were&#10;studied in  . Shyness as a factor or product property for the normal&#10;product adjacency was studied in . We have the following.&#10;&#10;\[shy-thm\] []{} Let be a continuous surjection between digital images.&#10;Then the following are equivalent.&#10;&#10; is a shy map.&#10;&#10;For every connected , is a connected subset of .&#10;&#10; is a connectivity preserving multi-valued function.&#10;&#10; is a multi-valued function with weak continuity such that for all , is&#10;a connected subset of .">
  </outline>
  <outline text="Other tools" _note="Other terminology we use includes the following. Given a digital image&#10;and , the set of points adjacent to and the neighborhood of in are,&#10;respectively,">
  </outline>
</outline>
<outline text="Maps on products" _note="In this section, we consider various product adjacencies with respect to&#10;continuity of functions.">
  <outline text="General properties" _note="Let and be adjacency relations on a set . We say [DOMINATES]{} , , or&#10;[IS DOMINATED BY]{} , , if for , if and are -adjacent then and are&#10;-adjacent.&#10;&#10;We have the following comparisons of adjacencies.&#10;&#10;For and , .&#10;&#10;For and ,&#10;&#10;For , .&#10;&#10;For , we have:&#10;&#10;-    for ;&#10;&#10;-   ;&#10;&#10;-   .&#10;&#10;These follow immediately from the definitions of these adjacencies.&#10;&#10;The next example shows that there are adjacencies that can be applied to&#10;the same set such that neither dominates the other.&#10;&#10;\[neither-dominates\] In , neither of nor dominates the other.&#10;&#10;Consider the points and . We have but and are not -adjacent. Therefore&#10;does not dominate .&#10;&#10;Now consider . We have but and are not -adjacent. Therefore does not&#10;dominate .&#10;&#10;Domination, and being dominated, are transitive relations among the&#10;adjacencies of a graph. I.e., we have the following.&#10;&#10;Given adjacencies , , for a graph, if and , then .&#10;&#10;Elementary, and left to the reader.&#10;&#10;Let be a function.&#10;&#10;Let and be adjacency relations on . If is continuous and , then is&#10;continuous.&#10;&#10;Let and be adjacency relations on . If is -continuous and , then is&#10;-continuous.&#10;&#10;The assertions follows from the definitions of continuity and the&#10;relation.&#10;&#10;Given functions , , the function is defined by">
  </outline>
  <outline text="Normal product" _note="Here, we recall continuity properties of the normal product adjacency.&#10;&#10;\[prod-cont\] []{} Let , . Then the product map is continuous if and&#10;only if each is continuous.&#10;&#10;\[prod-iso\] []{} Let . Let , .&#10;&#10;For , if the product map is an isomorphism, then for , is an&#10;isomorphism.&#10;&#10;If is an isomorphism for all , then the product map is an isomorphism.&#10;&#10;\[projection-cont\] []{} The projection maps defined by for , are all&#10;continuous, for .">
  </outline>
  <outline text="Tensor product" _note="For the tensor product adjacency, we have the following.&#10;&#10;\[no-1zs\] Suppose has a pair of -adjacent points. Then&#10;&#10;each has 2 -adjacent points; and&#10;&#10;If is continuous and not constant on some component of , then for every&#10;, has 2 -adjacent points.&#10;&#10;Let and be -adjacent in . Then for each , and are -adjacent in , which&#10;establishes the first assertion. Further, if is as hypothesized, the&#10;continuity of implies there are -adjacent such that and are unequal,&#10;hence -adjacent. Therefore, for all , and are -adjacent.&#10;&#10;It is easy to construct examples showing that the assertions obtained&#10;from Proposition \[no-1zs\] by substituting the normal product adjacency&#10;for are false.&#10;&#10;\[prod-cont-implies-factor\] Let , . If the product map is continuous,&#10;then for each , is continuous.&#10;&#10;If are -adjacent in , then and are -adjacent in . Thus and are equal or&#10;-adjacent in . This implies and are equal or -adjacent in . Thus is&#10;continuous.&#10;&#10;However, the converse to Theorem \[prod-cont-implies-factor\] is not&#10;generally true, as shown in the following.&#10;&#10;\[need-local-1-1\] Let be the identity function. Let be the constant&#10;function . Then, using Examples \[id-exl\] and \[const-exl\], and are&#10;each -continuous, but is not -continuous.&#10;&#10;This follows from the observations that and are -adjacent, but and are&#10;neither equal nor -adjacent.&#10;&#10;A partial converse to Theorem \[prod-cont-implies-factor\] is obtained&#10;by using the following notion.&#10;&#10;A continuous function is [LOCALLY ONE-TO-ONE]{} if is one-to-one for all&#10;.&#10;&#10;Note any function between digital images that is one-to-one must be&#10;locally one-to-one.&#10;&#10;\[T-prod-continuity\] Suppose is continuous and locally one-to-one for .&#10;Then the product function is -continuous and locally one-to-one.&#10;&#10;Suppose is continuous and locally one-to-one for . Let and be -adjacent,&#10;where and are -adjacent in . Since is continuous and locally one-to-one,&#10;we must have that and are -adjacent in . Thus, and are -adjacent, so is&#10;continuous and locally one-to-one.&#10;&#10;\[T-prod-cont\] Let , . Then the product map is an isomorphism if and&#10;only if each is an isomorphism.&#10;&#10;If is an isomorphism, each must be one-to-one and onto. Therefore, is a&#10;single-valued function.&#10;&#10;By Theorem \[prod-cont-implies-factor\], each is continuous. Since , it&#10;follows from Theorem \[prod-cont-implies-factor\] that each is&#10;continuous. Hence is an isomorphism.&#10;&#10;Conversely, if each is an isomorphism, then is one-to-one and onto, so&#10;is a single-valued function. By Theorem \[T-prod-continuity\], is&#10;continuous.&#10;&#10;Similarly, is continuous. Therefore, is an isomorphism.&#10;&#10;\[T-projection-cont\] The projection maps defined by for are all&#10;continuous.&#10;&#10;Let and be -adjacent in , where . Then for all indices , and are&#10;-adjacent. Thus, is continuous.&#10;&#10;A seeming oddity is that a common method of injection that is often&#10;continuous, is not continuous when the tensor product adjacency is used,&#10;as shown in the following.&#10;&#10;\[natural-inject-not-cont\] Let and be digital images. Let . If has a&#10;pair of -adjacent points, then the function defined by is not&#10;continuous.&#10;&#10;This is because given -adjacent , and are not -adjacent.">
  </outline>
  <outline text="Cartesian product" _note="\[Cart-prod-cont\] Let be functions between digital images, . Let , .&#10;Then the product function is -continuous if and only if each is&#10;continuous.&#10;&#10;Suppose is continuous. Let in . Let , . Then , so either or . The former&#10;case implies and the latter case implies . Hence is continuous.&#10;&#10;Suppose each is continuous. Let and be -adjacent points of . Then there&#10;is only one index in which and differ, i.e., for some and , , , and .&#10;Then and have the same coordinate for , and have coordinates of and ,&#10;respectively. Continuity of implies either or . Therefore, is&#10;continuous.&#10;&#10;\[product-projection-cont\] The projection maps defined by for are all&#10;continuous.&#10;&#10;This follows from Proposition \[CartesianAndNP\] and&#10;Theorem \[projection-cont\].&#10;&#10;By contrast with Proposition \[natural-inject-not-cont\], we have the&#10;following.&#10;&#10;\[natural-inject-product-cont\] Let be digital images, . Let . The&#10;functions defined by are continuous.&#10;&#10;This follows immediately from Definition \[product-adj-def\].&#10;&#10;\[product-cont\] Let , . Then the product map is an isomorphism if and&#10;only if each is an isomorphism,.&#10;&#10;Suppose is an isomorphism. Then it follows from&#10;Proposition \[CartesianAndNP\] and Theorem \[prod-iso\] that is an&#10;isomorphism.&#10;&#10;Suppose each is an isomorphism. Then must be one-to-one and onto, and by&#10;Theorem \[Cart-prod-cont\], is continuous. Similarly, is continuous.&#10;Therefore, is an isomorphism.">
  </outline>
  <outline text="Lexicographic adjacency" _note="\[lexico-1-1\] Suppose is a function between digital images, . Let be&#10;the product function.&#10;&#10;If is -continuous, then each is -continuous. Further, if is locally&#10;one-to-one, then each is locally one-to-one.&#10;&#10;If each is a continuous function that is locally one-to-one, then is&#10;-continuous.&#10;&#10;Suppose is -continuous. Let such that . Let and let Notice Therefore,&#10;and are -adjacent or equal. It follows from statement (\[Lex-observ\])&#10;that and are -adjacent or equal. Since is an arbitrary set of -adjacent&#10;members of , is -continuous. Further if is locally one-to-one, then from&#10;statement (\[Lex-observ\]), and are not equal, so is locally one-to-one.&#10;&#10;Suppose each is continuous and locally one-to-one. Let , where , , for .&#10;Assume . Let be the smallest index such that . Since is locally&#10;one-to-one,&#10;&#10;If , it follows from Definition \[lexico\] that .&#10;&#10;Otherwise, implies , hence . Together with statement (\[adj-values\]),&#10;this implies .&#10;&#10;Then is -continuous, since and were arbitrarily chosen.&#10;&#10;The following example illustrates the importance of the locally&#10;one-to-one hypothesis in Theorem \[lexico-1-1\].&#10;&#10;\[lexico-factor-not-implies-prod\] Let for . Let be the constant&#10;function with value . Then and are continuous. However, is not&#10;-continuous.&#10;&#10;Consider the points and . These points are -adjacent in . However, and&#10;are neither equal nor -adjacent in .&#10;&#10;\[L-iso\] Suppose is a function between digital images, . Let be the&#10;product function. Then is an -isomorphism if and only if each is a&#10;-isomorphism.&#10;&#10;This follows easily from Theorem \[lexico-1-1\].&#10;&#10;The projection map is continuous.&#10;&#10;Let in . Then , for some , where either or . Since and , it follows that&#10;is continuous.&#10;&#10;By contrast, we have the following.&#10;&#10;\[L-projection-not-cont\] Let . The projection maps are not continuous&#10;for .&#10;&#10;Let , . Then in , but implies and , which are not -adjacent in . The&#10;assertion follows.">
  </outline>
  <outline text="More on isomorphisms" _note="We have the following.&#10;&#10;\[permute\] Let be a permutation. Let be an isomorphism of digital&#10;images, . Let . Let be any of Let , . Then the function defined by is an&#10;isomorphism.&#10;&#10;It is easy to see that is one-to-one and onto. Continuity of and of&#10;follows easily from the definitions of the adjacencies under discussion.&#10;Thus, is an isomorphism.&#10;&#10;The following example shows that the lexicographic adjacency does not&#10;yield a conclusion analogous to that of Theorem \[permute\].&#10;&#10;\[pretzel\] Let . Let . Then and are not isomorphic.&#10;&#10;Observe that is connected, since the 4 points of form a path in the&#10;sequence (see Figure 2). However, is not connected, as there is no path&#10;in from to . The assertion follows.">
  </outline>
</outline>
<outline text="Connectedness" _note="In this section, we compare product adjacencies with respect to the&#10;property of connectedness.&#10;&#10;\[prod-connected\] []{} Let be digital images, . Then is connected for&#10;all if and only is connected.&#10;&#10;\[Pi-conn\] Let be digital images, . If is -connected, then is&#10;-connected for all .&#10;&#10;These assertions follow from Definition \[continuous\] and&#10;Theorem \[T-projection-cont\].&#10;&#10;However, the converse to Theorem \[Pi-conn\] is not generally true, as&#10;shown by the following.&#10;&#10;\[conn-not-preserved\] Let , . Then and are each -connected. However:&#10;&#10; is not -connected.&#10;&#10; has two -components, and .&#10;&#10;See also Figure 1(c), which illustrates that is not -connected, although&#10;is -connected and is -connected.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;\[product-Pi-conn\] Let be digital images, . Then is -connected if and&#10;only if is -connected for all .&#10;&#10;Suppose is -connected. It follows from&#10;Proposition \[product-projection-cont\] that each is -connected.&#10;&#10;Suppose each is -connected. Let and be points of such that . There are&#10;-paths in from to . If the functions are as in&#10;Proposition \[natural-inject-product-cont\], then it is easily seen that&#10;is a -path in from to . Since and were arbitrarily chosen, it follows&#10;that is -connected.&#10;&#10;\[Lex-1st-factor\] Let and be digital images, such that . Then is&#10;connected if and only if is connected.&#10;&#10;Suppose is connected. Let , , with , .&#10;&#10;If then, since and is connected, there exists such that . Therefore, .&#10;&#10;Suppose . Since is connected, there is a path in , , such that&#10;Therefore,&#10;&#10;Therefore, is connected.&#10;&#10;Suppose is not connected. Then there exist such that and are in distinct&#10;components of . Let . By Definition \[lexico\], there is no path in from&#10;to . Therefore, is not connected.&#10;&#10;An argument similar to that used for the proof of&#10;Proposition \[Lex-1st-factor\] yields the following.&#10;&#10;\[lex-conn\] Let be digital images, . Suppose is the smallest index for&#10;which . Then is connected if and only if is connected.">
</outline>
<outline text="Homotopy">
  <outline text="Tensor product" _note="In , it is shown that many homotopy properties are preserved by&#10;Cartesian products with the adjacency. We show that we cannot make&#10;analogous claims for the tensor product adjacency.&#10;&#10;\[htpy-not-preserved\] There are digital images and and continuous&#10;functions , , such that&#10;&#10;We can use Example \[conn-not-preserved\]. E.g., if , is the identity&#10;function, and is the constant function taking the value 0, we have and .&#10;As we saw in Example \[conn-not-preserved\], is not -connected, so its&#10;identity function is not homotopic to the constant function .&#10;&#10;\[htpy-type-not-preserved\] There are digital images and for , such that&#10;and have the same homotopy type, but and do not have the same homotopy&#10;type.&#10;&#10;We saw in Example \[conn-not-preserved\] that is not -connected;&#10;however, it is trivial that is -connected. Therefore, we can take , .">
  </outline>
  <outline text="Cartesian product adjacency" _note="\[Cart-prod-htpy\] Let be continuous functions between digital images, .&#10;Let , , , . Then if and only if for all , . Further, and are pointed&#10;homotopic if and only if for each , and are pointed homotopic.&#10;&#10;Suppose . Then there is a homotopy such that and for all . Let and let&#10;be defined by where is the continuous injection of&#10;Proposition \[natural-inject-product-cont\] corresponding to the point&#10;and is the continuous projection map of&#10;Theorem \[product-projection-cont\]. Then Since the composition of&#10;continuous functions is continuous (Theorem \[composition\]), it follows&#10;that is a homotopy from to . Further, if holds some point of fixed, then&#10;we can take to be the point of used in&#10;Proposition \[natural-inject-product-cont\], and we can conclude that&#10;holds fixed.&#10;&#10;Suppose for all , . Let be a -homotopy from to . We execute these&#10;homotopies “one coordinate at a time,&quot; as follows. For such that , let&#10;for all and let be defined by&#10;&#10; if ;&#10;&#10; if ;&#10;&#10; if .&#10;&#10;It is easily seen that is well defined and is a homotopy from to .&#10;&#10;Further, if holds fixed, then holds fixed.&#10;&#10;\[product-adj-ptd-htpy-equiv\] Let and be digital images, . Then and are&#10;-(pointed) homotopy equivalent if and only if for each , and are&#10;(pointed) homotopy equivalent.&#10;&#10;This follows from Theorem \[Cart-prod-htpy\]">
  </outline>
  <outline text="Lexicographic adjacency" _note="\[lex-factor-and-prod\] Let be digital images for . Let . If there is a&#10;smallest index  such that , then and have the same pointed homotopy&#10;type.&#10;&#10;For each , let . Let be the injection of&#10;Proposition \[natural-inject-product-cont\]. By choice of , is&#10;-continuous. Also by choice of , the projection map is continuous.&#10;Notice . Also, the function defined for with by is easily seen from the&#10;choice of  to be a homotopy from to that holds fixed the point . The&#10;assertion follows.&#10;&#10;Let and be digital images of different homotopy types. If and , then and&#10;have different homotopy types.&#10;&#10;This follows immediately from Theorem \[lex-factor-and-prod\].&#10;&#10;Let and be digital images, . Let , . Suppose there exist a smallest&#10;index such that , and a smallest index such that . If and have the same&#10;(pointed) homotopy type, then and have the same (pointed) homotopy type.&#10;&#10;By Theorem \[lex-factor-and-prod\], and have the same pointed homotopy&#10;type, and and have the same pointed homotopy type. Since we also have&#10;assumed and have the same (pointed) homotopy type, the assertion follows&#10;from the transitivity of (pointed) homotopy type.">
  </outline>
</outline>
<outline text="Retractions" _note="[]{} \[retract-def\] Let . A -continuous function is a [RETRACTION]{},&#10;and is a [RETRACT OF]{} , if for all .&#10;&#10;\[ret-thm\] []{} Let , . Then is a retract of for all if and only if is&#10;a retract of .">
  <outline text="Tensor product adjacency" _note="The following example shows that one of the assertions obtained by using&#10;the tensor product adjacency rather than in Theorem \[ret-thm\] is not&#10;generally valid.&#10;&#10;Let . Observe that is a -retract of , and is a -retract of . However, is&#10;not a -retract of .&#10;&#10;Note is -connected, since is a listing of its points in a -path; but is&#10;not -connected. The assertion follows.&#10;&#10;The question of whether being a retract of implies is a -retract of ,&#10;for all , is unknown at the current writing.">
  </outline>
  <outline text="Cartesian product adjacency" _note="For the Cartesian product adjacency, we have the following analog of&#10;Theorem \[ret-thm\].&#10;&#10;Suppose . Let , . Then there is a retraction , if and only if there is a&#10;retraction .&#10;&#10;Suppose there is a retraction , . Let . Clearly for all , and for all .&#10;By Theorem \[Cart-prod-cont\], is continuous. Therefore, is a&#10;retraction.&#10;&#10;Conversely, suppose there exists a retraction . Let , where is the&#10;injection of Proposition \[natural-inject-product-cont\] and the of&#10;Proposition \[natural-inject-product-cont\] satisfies . Since&#10;composition preserves continuity, Theorem \[product-projection-cont\]&#10;and Proposition \[natural-inject-product-cont\] imply is continuous.&#10;Further, for we clearly have . Thus, is a retraction.">
  </outline>
  <outline text="Lexicographic adjacency" _note="For the lexicographic adjacency, we do not have an analog of&#10;Theorem \[ret-thm\], as shown by the following example.&#10;&#10; is a -retract of and is a -retract of . However, is not an -retract of&#10;.&#10;&#10;We give a proof by contradiction. Suppose there is an -retraction .&#10;Notice . Since , the continuity of requires that or , hence But also ,&#10;and since , the continuity of similarly requires that Therefore, Since&#10;this is impossible, no such retraction can exist.">
  </outline>
</outline>
<outline text="Approximate fixed point property" _note="Some material in this section is quoted or paraphrased from .&#10;&#10;In both topology and digital topology,&#10;&#10;a [FIXED POINT]{} of a continuous function is a point satisfying ;&#10;&#10;if every continuous has a fixed point, then has the [FIXED POINT&#10;PROPERTY]{} (FPP).&#10;&#10;However, a digital image has the FPP if and only if has a single point .&#10;Therefore, it turns out that the [APPROXIMATE FIXED POINT PROPERTY]{} is&#10;more interesting for digital images.&#10;&#10;[]{} \[approxFP\] A digital image has the [APPROXIMATE FIXED POINT&#10;PROPERTY (AFPP)]{} if every continuous has an [APPROXIMATE FIXED&#10;POINT]{}, i.e., a point such that is equal or -adjacent to .&#10;&#10;The following is a minor generalization of Theorem 5.10 of .&#10;&#10;[]{} \[NP-AFPP\] Let be digital images, . Then for any such that , if&#10;has the AFPP then has the AFPP for all .&#10;&#10;Determining whether analogs of Theorem \[NP-AFPP\] for the tensor&#10;product adjacency, or for the Cartesian product adjacency, are generally&#10;true, appear to be difficult problems. The following examples show that&#10;the analogs of converses to Theorem \[NP-AFPP\] for the tensor product&#10;adjacency and for the Cartesian product adjacency are not generally&#10;true.&#10;&#10;Although has the AFPP , does not have the AFPP.&#10;&#10;Consider the function defined by , i.e., One can easily check that is&#10;continuous and has no approximate fixed point when the adjacency is&#10;used.&#10;&#10;Although has the AFPP, does not have the AFPP.&#10;&#10;Consider the function defined by , i.e., One can easily check that is&#10;continuous and has no approximate fixed point when the adjacency is&#10;used.&#10;&#10;We have the following.&#10;&#10;\[L-AFPP\] Let be digital images, . Suppose there is a smallest index &#10;such that is -connected and . If the product has the AFPP property, then&#10;has the AFPP property.&#10;&#10;Let .&#10;&#10;Suppose the product has the AFPP property. Let be -continuous. Let .&#10;Notice this means for . Let . Let be defined by Since is -continuous,&#10;our choice of implies is -continuous. By hypothesis, there is a with&#10;such that or . Therefore, either Thus, is an approximate fixed point for&#10;.">
</outline>
<outline text="Multivalued functions" _note="We study various product adjacencies with respect to properties of&#10;multivalued functions.&#10;&#10;The following has an elementary proof.&#10;&#10;\[single-val-as-multi\] Let be a single-valued function between digital&#10;images. Then the following are equivalent.&#10;&#10; is continuous.&#10;&#10;As a multivalued function, has weak continuity.&#10;&#10;As a multivalued function, has strong continuity.&#10;&#10;For multivalued functions , , define the product multivalued function by">
  <outline text="Weak continuity" _note="For , we have the following results.&#10;&#10;\[weak-prod\] []{} Let be multivalued functions for . Let , , and . Then&#10;has weak continuity if and only if each has weak continuity.&#10;&#10;For the tensor product, we have the following.&#10;&#10;\[weak-prod-cont-implies-factor\] For each index such that , let be a&#10;multivalued map between digital images. Let , . If the product&#10;multivalued map has weak continuity, then for each , has weak&#10;continuity.&#10;&#10;For all indices , let in . Then, in , we have . The weak continuity of &#10;implies and are adjacent subsets of . Therefore, there exist and such&#10;that or .&#10;&#10;Now, where , and where . If then we have for all indices . If then we&#10;have for all indices . In either case, we have for all  that and are&#10;adjacent subsets of . It follows that each has weak continuity.&#10;&#10;The converse of Theorem \[weak-prod-cont-implies-factor\] is not&#10;generally true, as shown by the following.&#10;&#10;\[tensor-non-weak-prod\] Let and be the single-valued functions of&#10;Example \[need-local-1-1\]. By Proposition \[single-val-as-multi\], and&#10;have weak continuity. However, Example \[need-local-1-1\] shows that is&#10;not -continuous, so by Proposition \[single-val-as-multi\], does not&#10;have -weak continuity.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;\[weak-Cart-prod-implies-factor\] Let be multivalued maps between&#10;digital images, . Let , . Then the product multivalued map has weak&#10;continuity if and only if for each , has weak continuity.&#10;&#10;Suppose has weak continuity. Let in . Let We have . Therefore, there&#10;exist such that . Therefore, we have , , and or . Thus, has weak&#10;continuity.&#10;&#10;Suppose each has weak continuity. Let in , where , , , and, from the&#10;definition of the adjacency, there is one index such that and for all&#10;indices , and therefore . Since has weak continuity, there exist and&#10;such that or . For we can take . Then and are equal or -adjacent, and we&#10;have , . Therefore, has weak continuity.&#10;&#10;For the lexicographic adjacency, Example \[lex-weakStrong-exl\] below&#10;shows there is no general product property for weak continuity, and&#10;Example \[lex-weakStrong-factor-exl\] below shows there is not a general&#10;factor property for weak continuity.">
  </outline>
  <outline text="Strong continuity" _note="\[strong-prod\] []{} Let be multivalued functions for . Let , , and .&#10;Then has strong continuity if and only if each has strong continuity.&#10;&#10;For the tensor product adjacency, we have the following.&#10;&#10;\[strong-tensor-cont-implies-factor\] Let be multivalued maps between&#10;digital images, . Let , . If the product multivalued map has strong&#10;continuity, then for each , has strong continuity.&#10;&#10;Let in . Let and . Note in . Since has strong continuity, for every&#10;where , there exists where such that either or ; and therefore for all&#10;or for all . Also, for every where , there exists where such that either&#10;or ; and therefore for all or for all . Thus has -strong continuity.&#10;&#10;The converse of Theorem \[strong-tensor-cont-implies-factor\] is not&#10;generally true, as shown by the following.&#10;&#10;\[tensor-non-strong-prod\] Let be defined by . Let be defined by . Then&#10;and both have strong continuity. However, does not have -strong&#10;continuity.&#10;&#10;It is easily seen that and both have strong continuity. However, in&#10;Example \[tensor-non-weak-prod\], we showed that does not have -weak&#10;continuity. Therefore, does not have -strong continuity.&#10;&#10;\[strong-Cart-prod-implies-factor\] Let be multivalued maps between&#10;digital images, . Let , . Then the product multivalued map has strong&#10;continuity if and only if for each , has strong continuity.&#10;&#10;Suppose has strong continuity. Let in . Then in , for some index . Since&#10;has strong continuity, we must have that for every there exists such&#10;that or , so or ; and for every there exists such that or , so or .&#10;Therefore, has strong continuity.&#10;&#10;Suppose for each , has strong continuity. Let and with be such that .&#10;Then for some index , and for all indices , . Therefore, implies there&#10;exists ; and since has strong continuity, for every there exists such&#10;that or . Let . Then or with , . Similarly, for every there exists such&#10;that or . Thus, has strong continuity.&#10;&#10;For the lexicographic adjacency, the following shows there is not a&#10;general product property for weak or strong continuity.&#10;&#10;\[lex-weakStrong-exl\] Let be the multivalued function . Let be the&#10;function . Then and have weak continuity and strong continuity, but&#10;lacks both -weak continuity and -strong continuity.&#10;&#10;It is easy to see that and have weak continuity and strong continuity,&#10;and that . However are not -adjacent, so lacks -weak continuity and&#10;therefore lacks -strong continuity.&#10;&#10;For the lexicographic adjacency, the following shows there is not a&#10;general factor property for weak or strong continuity.&#10;&#10;\[lex-weakStrong-factor-exl\] Let be the multivalued function . Let be&#10;the multivalued function . Then has -weak and -strong continuity,&#10;although lacks both weak and strong continuity.&#10;&#10;It is easy to see that lacks weak and strong continuity. Since it&#10;follows easily that has both -weak continuity and -strong continuity.">
  </outline>
  <outline text="Continuous multifunctions" _note="\[gcm-subdiv\] []{} Let , . Let be a continuous multivalued function.&#10;Let be a continuous function that induces . Let . Then there is a&#10;continuous function that induces .&#10;&#10;For the adjacency, we have the following.&#10;&#10;\[multi-prod-thm\] []{} Given multivalued functions , , each is&#10;continuous if and only if the product multivalued function is&#10;continuous.&#10;&#10;For the tensor product, since a single-valued function can be considered&#10;as multivalued, Example \[need-local-1-1\] shows there is no general&#10;product rule for the continuity of multivalued functions. However, we&#10;have the following.&#10;&#10;\[tensor-prod-multi-cont\] Let be a continuous multivalued function&#10;between digital images, . Let , , . If for some positive integer  and&#10;for all  there is a continuous locally one-to-one function that&#10;generates , then is -continuous and is generated by a function that is&#10;locally one-to-one.&#10;&#10;Let . It follows from Theorem \[T-prod-continuity\] that is -continuous.&#10;Further, given where for and where , there exists such that . Therefore,&#10;.&#10;&#10;For in , we have and , where and . Since is locally one-to-one and&#10;continuous, we have . It follows that . This allows us to conclude that&#10;is -continuous. Thus, generates .&#10;&#10;Let in , where . Since is locally one-to-one, for all . Therefore, , so&#10;is locally one-to-one.&#10;&#10;Deciding whether the converse of Theorem \[tensor-prod-multi-cont\] is&#10;true appears to be a difficult problem.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;\[tensor-factor-cont-implies-prod\] Let be a multivalued function&#10;between digital images, where , , . Let , , . If each is continuous,&#10;then is -continuous.&#10;&#10;Suppose each is continuous. By Lemma \[gcm-subdiv\], there exists and&#10;generating functions of .&#10;&#10;We wish to show that generates . Suppose in . Then and where and for all&#10;but one index , with . Since each is -continuous, we have or and for all&#10;indices we have . Thus we have or . Thus, is -continuous.&#10;&#10;Let , where . Then there exists such that . For , we have . Thus,&#10;generates , so is continuous.&#10;&#10;Deciding whether the converse of&#10;Theorem \[tensor-factor-cont-implies-prod\] is true appears to be a&#10;difficult problem.&#10;&#10;For the lexicographic adjacency, there is no general product rule for&#10;the continuity of multivalued functions, as shown in&#10;Example \[lexico-factor-not-implies-prod\] (since a single-valued&#10;function can be regarded as multivalued). However, we have the&#10;following.&#10;&#10;\[multi-prod-cont-lex\] Let be a continuous multivalued function between&#10;digital images, . Let , , . If each is generated by a function that is&#10;locally one-to-one, then is -continuous.&#10;&#10;By Theorem \[lexico-1-1\], the single-valued function is -continuous.&#10;Further, given with , there exist such that . Therefore, . Therefore,&#10;generates , and the assertion follows.&#10;&#10;The paper  has several results concerning the following notions.&#10;&#10;[]{} Let be a digital image and . We say that is a [-RETRACT OF ]{} if&#10;there exists a -continuous multivalued function (a [MULTIVALUED&#10;-RETRACTION]{}) such that if .&#10;&#10;We generalize Theorem \[ret-thm\] as follows.&#10;&#10;\[multi-ret-thm\] []{} For , let . Suppose is a continuous multivalued&#10;function for all . Then is a multivalued retraction for all  if and only&#10;if is a multivalued -retraction.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;\[multi-retract-prod-Cart\] Let be multivalued retractions, . Let , , .&#10;Then is a -multivalued retraction.&#10;&#10;Since is a multivalued retraction, we must have that and for all .&#10;Therefore, and for all . By Theorem \[tensor-factor-cont-implies-prod\],&#10;is continuous, and therefore is a multivalued retraction.">
  </outline>
  <outline text="Connectivity preserving multifunctions" _note="\[normal-conn-preserv\] []{} Let be a multivalued function between&#10;digital images, . Then the product map is a connectivity preserving&#10;multifunction if and only if each is a connectivity preserving&#10;multifunction.&#10;&#10;The tensor product adjacency does not yield a similar result, as shown&#10;in the following.&#10;&#10;Consider , . The multivalued function defined by is connectivity&#10;preserving. However, is not -connectivity preserving.&#10;&#10;This follows from the observations that has a single point, hence must&#10;be -connected; but, by Example \[conn-not-preserved\], is not&#10;-connected.&#10;&#10;However, we have the following.&#10;&#10;Let be multivalued functions, . Let , . Suppose is -connectivity&#10;preserving. Then each is connectivity preserving.&#10;&#10;Let , where . By assumption, is -connected. From Theorem \[Pi-conn\], it&#10;follows that is -connected.&#10;&#10;Suppose in . Then . Since is connectivity preserving, and are -adjacent&#10;subsets of . This implies there exist , such that or . Therefore, for&#10;each index , or . Since and , we have that and are -adjacent subsets of&#10;.&#10;&#10;From Theorem \[mildadj\], is connectivity preserving.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;Let and be digital images, for . Let be a multivalued function. Let be&#10;the product function. Then is -connectivity preserving if and only if&#10;each is connectivity preserving.&#10;&#10;Suppose is connectivity preserving. Let , where . Then is -connected. By&#10;Theorem \[product-projection-cont\], is -connected.&#10;&#10;For any given index , let in . For all indices , let . Then and are&#10;-adjacent. Since is connectivity preserving, and are -adjacent subsets&#10;of . Therefore, Theorem \[product-projection-cont\] implies and are&#10;-adjacent subsets of . It follows from Theorem \[mildadj\] that is&#10;connectivity preserving. Since was an arbitrarily selected index, is&#10;connectivity preserving for all .&#10;&#10;Now suppose each is connectivity preserving. Let where . Then is, by&#10;Theorem \[product-Pi-conn\], -connected.&#10;&#10;Suppose in . Then for some index , in and for there exist such that&#10;Since is connectivity preserving, there exist and such that or . For ,&#10;let . Then and are -adjacent or equal. Therefore, and are -adjacent&#10;subsets of . It follows from Theorem \[mildadj\] that is connectivity&#10;preserving.&#10;&#10;For lexicographic adjacency,&#10;&#10;Example \[lexico-factor-not-implies-prod\] shows that there is no&#10;product property for connectivity preservation; and&#10;&#10;there is no factor property for connectivity preservation, as the&#10;following example shows.&#10;&#10;Let be the multivalued function . Let be the multivalued function . Then&#10;is -connectivity preserving, but is not -connectivity preserving.&#10;&#10;This follows from the observations that the single point is connected,&#10;and is -connected (see Figure 2).">
  </outline>
</outline>
<outline text="Shy maps" _note="We have the following.&#10;&#10;Let be a shy map of digital images. Then is an isomorphism if and only&#10;if is locally one-to-one.&#10;&#10;It is obvious that if is an isomorphism, then is locally one-to-one.&#10;&#10;To show the converse, we argue as follows. Since is shy, we know is a&#10;continuous surjection.&#10;&#10;To show is one-to-one, suppose there exist such that . Since is shy, is&#10;-connected. Therefore, if then there is a path of distinct points such&#10;that , for , and . But since is locally one-to-one, is one-to-one, so ,&#10;contrary to the assumption . Therefore, we must have , so is one-to-one.&#10;&#10;Since is one-to-one, is one-to-one. Since is shy, given in , is&#10;connected. Thus, is continuous. This completes the proof that is an&#10;isomorphism.&#10;&#10;The following generalizes a result of .&#10;&#10;\[shy-prod\] []{} Let be a continuous surjection between digital images,&#10;. Then the product map is shy if and only if each is a shy map.&#10;&#10;For the tensor product, we have the following.&#10;&#10;\[T-prod-shy-implies-factor\] Let be a surjection between digital&#10;images, . Let , . If the product function is shy, then is shy for each .&#10;&#10;Since is shy, it is continuous, so by&#10;Theorem \[prod-cont-implies-factor\], each is continuous. Clearly, each&#10;is a surjection.&#10;&#10;Let . Let . Since is shy, is -connected. By Theorem \[Pi-conn\], is&#10;-connected.&#10;&#10;Let in . Then . Since is shy, is -connected. By&#10;Theorem \[T-projection-cont\], is -connected. From&#10;Definition \[shy-def\], we conclude that is a shy map.&#10;&#10;The converse to Theorem \[T-prod-shy-implies-factor\] is not generally&#10;true, as shown by the following.&#10;&#10;Let be the function . Let be the function . Then and are shy, but is not&#10;shy.&#10;&#10;That and are shy is easily seen. Further, is a surjection. Notice that ,&#10;but and are neither equal nor -adjacent. Therefore, is not -continuous,&#10;hence is not -shy.&#10;&#10;For the Cartesian product adjacency, we have the following.&#10;&#10;\[Cart-shy-factor\] Let be a surjection between digital images, . Let ,&#10;. Then the product function is shy if and only if is shy for each .&#10;&#10;Suppose is shy. Then clearly each is a surjection, and by&#10;Theorem \[Cart-prod-cont\], is continuous.&#10;&#10;Let . Let . Since is shy, is -connected. By&#10;Theorem \[product-projection-cont\], the projection map is continuous,&#10;so is -connected.&#10;&#10;Let be such that . Then must be among the points , where satisfies .&#10;Since is shy, is -connected. Since is continuous, is -connected. This&#10;completes the proof that each is shy.&#10;&#10;Suppose each is shy. Then clearly is a surjection, and by&#10;Theorem \[Cart-prod-cont\], is continuous.&#10;&#10;Let . Let . Since is shy, is -connected. By Theorem \[product-Pi-conn\],&#10;&#10;Let be such that . Then for some index , , where satisfies . Similarly,&#10;&#10;Since is shy, is connected, so there exist , such that or . For indices&#10;, let . Then and satisfy From statements (\[shy-prod-1\]),&#10;(\[shy-prod-2\]), and (\[shy-prod-3\]), we conclude that is -connected.&#10;Therefore, is shy.&#10;&#10;For the lexicographic adjacency, we have the following.&#10;&#10;\[lex-shy-prod\] Let be functions between digital images, . Let , , . If&#10;each is shy, then is shy.&#10;&#10;Let , where . Then . Since each is shy, is -connected. By&#10;Theorem \[lex-conn\], is -connected.&#10;&#10;Let in . Then for some smallest index , and if then for . Since is shy,&#10;is -connected. Further, if then is connected, since is shy. Now,&#10;&#10;By the shyness of the and Theorem \[lex-conn\], each of and is&#10;-connected. Further, since for and, by shyness of , from&#10;statements (\[lex-shy-eqs0\]), (\[lex-shy-eqs\]), and (\[is-conn\]) we&#10;can conclude that and are -adjacent sets. Therefore, is -connected.&#10;Therefore, is shy.&#10;&#10;The following shows that the converse of Theorem \[lex-shy-prod\] is not&#10;generally true.&#10;&#10;Let be the function . Let be the function . Then is shy, but is not shy.&#10;&#10;Since is not connected, is not shy. However, is -connected, as discussed&#10;in Example \[pretzel\], so, from Definition \[shy-def\], is shy.">
</outline>
<outline text="Further remarks" _note="We have studied the tensor product, Cartesian product, and lexicographic&#10;adjacencies for finite Cartesian products of digital images. We have&#10;obtained many results for “product&quot; and “factor&quot; properties that&#10;parallel results obtained for extensions of the normal product adjacency&#10;in .&#10;&#10;However, there are many properties known  for the normal product&#10;adjacency whose analogs for the adjacencies studied here are either&#10;false or we were not able to derive. By comparing the results of  with&#10;those of the current paper, it appears that the normal product adjacency&#10;is the adjacency that yields the most satisfying results for Cartesian&#10;products of digital images.">
</outline>
<outline text="Acknowledgment" _note="The anonymous reviewers were very helpful. Their corrections and&#10;suggestions are gratefully acknowledged.&#10;&#10;[11]{}&#10;&#10;C. Berge, [GRAPHS AND HYPERGRAPHS]{}, 2nd edition, North-Holland,&#10;Amsterdam, 1976.&#10;&#10;K. Borsuk, [THEORY OF RETRACTS]{}, Polish Scientific Publishers, Warsaw,&#10;1967.&#10;&#10;L. Boxer, Digitally Continuous Functions, [PATTERN RECOGNITION&#10;LETTERS]{} 15 (1994), 833-839.&#10;&#10;L. Boxer, A Classical Construction for the Digital Fundamental Group,&#10;[PATTERN RECOGNITION LETTERS]{} 10 (1999), 51-62.&#10;&#10;L. Boxer, Properties of Digital Homotopy, [JOURNAL OF MATHEMATICAL&#10;IMAGING AND VISION]{} 22 (2005), 19-26.&#10;&#10;L. Boxer, Digital Products, Wedges, and Covering Spaces, [JOURNAL OF&#10;MATHEMATICAL IMAGING AND VISION]{} 25 (2006), 159-171.&#10;&#10;L. Boxer, Remarks on Digitally Continuous Multivalued Functions,&#10;[JOURNAL OF ADVANCES IN MATHEMATICS]{} 9 (1) (2014), 1755-1762.&#10;&#10;L. Boxer, Digital Shy Maps, [APPLIED GENERAL TOPOLOGY]{}, to appear.&#10;Available at https://arxiv.org/abs/1606.00782&#10;&#10;L. Boxer, Generalized Normal Product Adjacency in Digital Topology,&#10;submitted. Available at http://arxiv.org/abs/1608.03204&#10;&#10;L. Boxer, O. Ege, I. Karaca, J. Lopez, and J. Louwsma, Digital Fixed&#10;Points, Approximate Fixed Points, and Universal Functions, [APPLIED&#10;GENERAL TOPOLOGY]{} 17(2), 2016, 159-172.&#10;&#10;L. Boxer and I. Karaca, Fundamental Groups for Digital Products,&#10;[ADVANCES AND APPLICATIONS IN MATHEMATICAL SCIENCES]{} 11(4) (2012),&#10;161-180.&#10;&#10;L. Boxer and P.C. Staecker, Connectivity Preserving Multivalued&#10;Functions in Digital Topology, [JOURNAL OF MATHEMATICAL IMAGING AND&#10;VISION]{} 55 (3) (2016), 370-377. DOI 10.1007/s10851-015-0625-5&#10;&#10;L. Boxer and P.C. Staecker, Remarks on Pointed Digital Homotopy,&#10;submitted. Available at http://arxiv.org/abs/1503.03016&#10;&#10;L. Chen, Gradually varied surfaces and its optimal uniform&#10;approximation, [SPIE PROCEEDINGS]{} 2182 (1994), 300-307.&#10;&#10;L. Chen, [DISCRETE SURFACES AND MANIFOLDS]{}, Scientific Practical&#10;Computing, Rockville, MD, 2004&#10;&#10;C. Escribano, A. Giraldo, and M. Sastre, “Digitally Continuous&#10;Multivalued Functions,” in DISCRETE GEOMETRY FOR COMPUTER IMAGERY,&#10;Lecture Notes in Computer Science, v. 4992, Springer, 2008, 81–92.&#10;&#10;C. Escribano, A. Giraldo, and M. Sastre, “Digitally Continuous&#10;Multivalued Functions, Morphological Operations and Thinning&#10;Algorithms,” JOURNAL OF MATHEMATICAL IMAGING AND VISION 42 (2012),&#10;76–91.&#10;&#10;A. Giraldo and M. Sastre, On the Composition of Digitally Continuous&#10;Multivalued Functions, [JOURNAL OF MATHEMATICAL IMAGING AND VISION]{} 53&#10;(2) (2015), 196-209.&#10;&#10;F. Harary, On the composition of two graphs, [DUKE MATHEMATICAL&#10;JOURNAL]{} 26 (1) (1959), 29-34.&#10;&#10;F. Harary and C.A. Trauth, Jr., Connectedness of products of two&#10;directed graphs, [SIAM JOURNAL ON APPLIED MATHEMATICS]{} 14 (2) (1966),&#10;250-254.&#10;&#10;S.-E. Han, Computer topology and its applications, [HONAM MATH.&#10;JOURNAL]{} 25 (2003), 153-162.&#10;&#10;S.-E. Han, Non-product property of the digital fundamental group,&#10;[INFORMATION SCIENCES]{} 171 (2005), 73-91.&#10;&#10;E. Khalimsky, Motion, deformation, and homotopy in finite spaces, in&#10;[PROCEEDINGS IEEE INTERNATIONAL CONFERENCE ON SYSTEMS, MAN, AND&#10;CYBERNETICS]{}, 1987, 227-234.&#10;&#10;V.A. Kovalevsky, A new concept for digital geometry, [SHAPE IN&#10;PICTURE]{}, Springer-Verlag, New York, 1994, pp. 37-51.&#10;&#10;A. Rosenfeld, ‘Continuous’ Functions on Digital Images, [PATTERN&#10;RECOGNITION LETTERS]{} 4 (1987), 177-184.&#10;&#10;G. Sabidussi, Graph multiplication, [MATHEMATISCHE ZEITSCHRIFT]{} 72&#10;(1960), 446-457.&#10;&#10;Tsaur, R., and Smyth, M.: “Continuous&quot; multifunctions in discrete spaces&#10;with applications to fixed point theory. In: Bertrand, G., Imiya, A.,&#10;Klette, R. (eds.), [DIGITAL AND IMAGE GEOMETRY]{}, Lecture Notes in&#10;Computer Science, vol. 2243, pp. 151-162. Springer Berlin / Heidelberg&#10;(2001), http://dx.doi.org/10.1007/3-540-45576-0 5, 10.1007/3-540-45576-0&#10;5&#10;&#10;J.H. van Lint and R.M. Wilson, [A COURSE IN COMBINATORICS]{}, Cambridge&#10;University Press, Cambridge, 1992.">
</outline>
  </body>
</opml>