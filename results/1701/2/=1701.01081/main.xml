<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>SalGAN: visual saliency prediction with adversarial networks</title>
    <abstract>Recent approaches for saliency prediction are generally trained with a
loss function based on a single saliency metric. This could lead to low
performance when evaluating with other saliency metrics. In this paper,
we propose a novel data-driven metric based saliency prediction method,
named SalGAN (Saliency GAN), trained with adversarial loss function.
SalGAN consists of two networks: one predicts saliency maps from raw
pixels of an input image; the other one takes the output of the first
one to discriminate whether a saliency map is a predicted one or ground
truth. By trying to make the predicted saliency map indistinguishable
with the ground truth, SalGAN is expected to generate saliency maps that
resembles the ground truth. Our experiments show that the adversarial
training allows our model to obtain state-of-the-art performances across
various saliency metrics. </abstract>
  </head>
  <body>
<outline text="Introduction" _note="Visual saliency describes the spatial locations in an image that attract&#10;the human attention. It is understood as a result of a bottom-up process&#10;where a human observer explores the image for a few seconds with no&#10;particular task in mind. Therefore, saliency prediction is indispensable&#10;for various machine vision tasks such as object recognition .&#10;&#10;Visual saliency data are traditionally collected by eye-trackers , and&#10;more recently with mouse clicks or webcams . The salient points of the&#10;image are aggregated and convolved with a Gaussian kernel to obtain a&#10;saliency map. As a result, a gray-scale image or a heat map is generated&#10;to represent the probability of each corresponding pixel in the image to&#10;capture the human attention.&#10;&#10;A lot of research effort has been made in designing an optimal loss&#10;function for saliency prediction. State-of-the-art methods adopt&#10;saliency based metrics while others use distance in saliency map space.&#10;How to choose or design a best training loss is still an open problem.&#10;In addition, different saliency metrics diverge at defining the meaning&#10;of saliency maps, and there exist inconsistency with the model&#10;comparison. For instance, it has been pointed that the optimal metric&#10;for model optimization may depend on the final application . To this&#10;end, instead of designing a tailored loss function, we introduce&#10;adversarial training for visual saliency prediction inspired by&#10;generative adversarial networks (GANs). We dub the proposed method as&#10;SalGAN. We focus on exploring the benefits of using such an adversarial&#10;loss to make the output saliency map not able to be distinguished from&#10;the real saliency maps. In GANs, training is driven by two competing&#10;agents: first, the GENERATOR synthesizing samples that match with the&#10;training data; second, the DISCRIMINATOR distinguishing between a real&#10;sample drawn directly from the training data and a fake one synthesized&#10;by the generator. In our case, this data distribution corresponds to&#10;pairs of real images and their corresponding visual saliency maps.&#10;&#10;Specifically, SalGAN estimates the saliency map of an input image using&#10;a deep convolutional neural network (DCNN). As shown in the&#10;Figure \[fig:architecture\] this network is initially trained with a&#10;binary cross entropy (BCE) loss over down-sampled versions of the&#10;saliency maps. The model is then refined with a discriminator network&#10;trained to solve a binary classification task between the saliency maps&#10;generated by SalGAN and the real ones used as ground truth. Our&#10;experiments show how adversarial training allows reaching&#10;state-of-the-art performance across different metrics when combined with&#10;a BCE content loss in a single-tower and single-task model. To&#10;summarize, we investigate the introduction of the adversarial loss to&#10;the visual saliency learning. By introducing adversarial loss to the BCE&#10;saliency prediction model, we achieve the state-of-the-art performance&#10;in MIT300 and SALICON dataset for almost all the evaluation metrics The&#10;remaining of the text is organized as follows. Section&#10;\[sec:RelatedWork\] reviews the state-of-the-art models for visual&#10;saliency prediction, discussing the loss functions they are based upon,&#10;their relations with the different metrics as well as their complexity&#10;in terms of architecture and training. Section \[sec:Architecture\]&#10;presents SalGAN, our deep convolutional neural network based on a&#10;convolutional encoder-decoder architecture, as well as the discriminator&#10;network used during its adversarial training. Section \[sec:Training\]&#10;describes the training process of SalGAN and the loss functions used.&#10;Section \[sec:Experiments\] includes the experiments and results of the&#10;presented techniques. Finally, Section \[sec:Conclusions\] closes the&#10;paper by drawing the main conclusions.&#10;&#10;Our results can be reproduced with the source code and trained models&#10;available at &lt;https://imatge-upc.github.io/saliency-salgan-2017/&gt;.">
</outline>
<outline text="Related work" _note="Saliency prediction has received interest by the research community for&#10;many years. Thus seminal works proposed to predict saliency maps&#10;considering low-level features at multiple scales and combining them to&#10;form a saliency map. , also starting from low-level feature maps,&#10;introduced a graph-based saliency model that defines Markov chains over&#10;various image maps, and treat the equilibrium distribution over map&#10;locations as activation and saliency values. presented a bottom-up,&#10;top-down model of saliency based not only on low but mid and high-level&#10;image features. combined low-level features saliency maps of previous&#10;best bottom-up models with top-down cognitive visual features and&#10;learned a direct mapping from those features to eye fixations.&#10;&#10;As in many other fields in computer vision, a number of deep learning&#10;solutions have very recently been proposed that significantly improve&#10;the performance. For example, the Ensemble of Deep Networks (eDN)&#10;represented an early architecture that automatically learns the&#10;representations for saliency prediction, blending feature maps from&#10;different layers. In two convolutional neural networks trained&#10;ebd-to-end for saliency prediction are compared, a lighter one designed&#10;and trained from scratch, and a second and deeper one pre-trained for&#10;image classification. DCNN have shown better results even when&#10;pre-trained with datasets build for other purposes. DeepGaze provided a&#10;deeper network using the well-know AlexNet , with pre-trained weights on&#10;Imagenet and with a readout network on top whose inputs consisted of&#10;some layer outputs of AlexNet. The output of the network is blurred,&#10;center biased and converted to a probability distribution using a&#10;softmax. Huang et al. , in the so call SALICON net, obtained better&#10;results by using VGG rather than AlexNet or GoogleNet . In their&#10;proposal they considered two networks with fine and coarse inputs, whose&#10;feature maps outputs are concatenated.&#10;&#10;Li et al. proposed a multi resolution convolutional neural network that&#10;is trained from image regions centered on fixation and non-fixation&#10;locations over multiple resolutions. Diverse top-down visual features&#10;can be learned in higher layers and bottom-up visual saliency can also&#10;be inferred by combining information over multiple resolutions. These&#10;ideas are further developed in they recent work called DSCLRCN , where&#10;the proposed model learns saliency related local features on each image&#10;location in parallel and then learns to simultaneously incorporate&#10;global context and scene context to infer saliency. They incorporate a&#10;model to effectively learn long-term spatial interactions and scene&#10;contextual modulation to infer image saliency. Deep Gaze II sets the&#10;state of the art in the MIT300 dataset by combining features trained for&#10;image recognition with four layer of 1x1 convolutions. Both DSCLRCN and&#10;Deep Gaze II obtain excellent results in the benchmarks when combined&#10;with a center bias, which is not considered in SalGAN as the results are&#10;purely the results at inference time. MLNET proposes an architecture&#10;that combines features extracted at different levels of a DCNN. They&#10;introduce a loss function inspired by three objectives: to measure&#10;similarity with the ground truth, to keep invariance of predictive maps&#10;to their maximum and to give importance to pixels with high ground truth&#10;fixation probability. In fact choosing an appropriate loss function has&#10;become an issue that can lead to improved results. Thus, another&#10;interesting contribution of   lies on minimizing loss functions based on&#10;metrics that are differentiable, such as NSS, CC, SIM and KL divergence&#10;to train the network (see and for the definition of these metrics. A&#10;thorough comparison of metrics can be found in ). In KL divergence gave&#10;the best results. also tested loss functions based on probability&#10;distances, such as [X2]{} divergence, total variation distance, KL&#10;divergence and Bhattacharyya distance by considering saliency map models&#10;as generalized Bernoulli distributions. The Bhattacharyya distance was&#10;found to give the best results. In our work we present a network&#10;architecture that takes a different approach. By incorporating the&#10;high-level adversarial loss into the conventional saliency prediction&#10;training approach, the proposed method achieves the state-of-the-art&#10;performance in both MIT300 and SALICON datasets by a clear margin.">
</outline>
<outline text="Architecture" _note="The training of SalGAN is the result of two competing convolutional&#10;neural networks: a generator of saliency maps, which is SalGAN itself,&#10;and a discriminator network, which aims at distinguishing between the&#10;real saliency maps and those generated by SalGAN. This section provides&#10;details on the structure of both modules, the considered loss functions,&#10;and the initialization before beginning adversarial training.&#10;Figure  \[fig:architecture\] shows the architecture of the system.">
  <outline text="Generator" _note="The generator network, SalGAN, adopts a convolutional encoder-decoder&#10;architecture, where the encoder part includes max pooling layers that&#10;decrease the size of the feature maps, while the decoder part uses&#10;upsampling layers followed by convolutional filters to construct an&#10;output that is the same resolution as the input.&#10;&#10;The encoder part of the network is identical in architecture to VGG-16 ,&#10;omitting the final pooling and fully connected layers. The network is&#10;initialized with the weights of a VGG-16 model trained on the ImageNet&#10;data set for object classification . Only the last two groups of&#10;convolutional layers in VGG-16 are modified during the training for&#10;saliency prediction, while the earlier layers remain fixed from the&#10;original VGG-16 model. We fix weights to save computational resources&#10;during training, even at the possible expense of some loss in&#10;performance.&#10;&#10;The decoder architecture is structured in the same way as the encoder,&#10;but with the ordering of layers reversed, and with pooling layers being&#10;replaced by upsampling layers. Again, ReLU non-linearities are used in&#10;all convolution layers, and a final convolution layer with sigmoid&#10;non-linearity is added to produce the saliency map. The weights for the&#10;decoder are randomly initialized. The final output of the network is a&#10;saliency map in the same size to input image.&#10;&#10;The implementation details of SalGAN are presented in Table&#10;\[tab:generator\].">
  </outline>
  <outline text="Discriminator" _note="Table \[tab:discriminator\] gives the architecture and layer&#10;configuration for the discriminator. In short, the network is composed&#10;of six 3x3 kernel convolutions interspersed with three pooling layers&#10;(2), and followed by three fully connected layers. The convolution&#10;layers all use ReLU activations while the fully connected layers employ&#10;activations, with the exception of the final layer, which uses a sigmoid&#10;activation.">
  </outline>
</outline>
<outline text="Training" _note="The filter weights in SalGAN have been trained over a perceptual loss&#10;resulting from combining a content and adversarial loss. The content&#10;loss follows a classic approach in which the predicted saliency map is&#10;pixel-wise compared with the corresponding one from ground truth. The&#10;adversarial loss depends of the real/synthetic prediction of the&#10;discriminator over the generated saliency map.">
  <outline text="Content loss" _note="The content loss is computed in a per-pixel basis, where each value of&#10;the predicted saliency map is compared with its corresponding peer from&#10;the ground truth map. Given an image of dimensions , we represent the&#10;saliency map as vector of probabilities, where is the probability of&#10;pixel being fixated. A content loss function is defined between the&#10;predicted saliency map and its corresponding ground truth . The first&#10;considered content loss is mean squared error (MSE) or Euclidean loss,&#10;defined as: In our work, MSE is used as a baseline reference, as it has&#10;been adopted directly or with some variations in other state of the art&#10;solutions for visual saliency prediction .&#10;&#10;Solutions based on MSE aim at maximizing the peak signal-to-noise ratio&#10;(PSNR). These works tend to filter high spatial frequencies in the&#10;output, favoring this way blurred contours. MSE corresponds to computing&#10;the Euclidean distance between the predicted saliency and the ground&#10;truth.&#10;&#10;Ground truth saliency maps are normalized so that each value is in the&#10;range . Saliency values can therefore be interpreted as estimates of the&#10;probability that a particular pixel is attended by an observer. It is&#10;tempting to therefore induce a multinomial distribution on the&#10;predictions using a softmax on the final layer. Clearly, however, more&#10;than a single pixel may be attended, making it more appropriate to treat&#10;each predicted value as independent of the others. We therefore propose&#10;to apply an element-wise sigmoid to each output in the final layer so&#10;that the pixel-wise predictions can be thought of as probabilities for&#10;independent binary random variables. An appropriate loss in such a&#10;setting is the binary cross entropy, which is the average of the&#10;individual binary cross entropies (BCE) across all pixels:">
  </outline>
  <outline text="Adversarial loss" _note="Generative adversarial networks (GANs)  are commonly used to generate&#10;images with realistic statistical properties. The idea is to&#10;simultaneously fit two parametric functions. The first of these&#10;functions, known as the generator, is trained to transform samples from&#10;a simple distribution (e.g. Gaussian) into samples from a more&#10;complicated distribution (e.g. natural images). The second function, the&#10;discriminator, is trained to distinguish between samples from the true&#10;distribution and generated samples. Training proceeds alternating&#10;between training the discriminator using generated and real samples, and&#10;training the generator, by keeping the discriminator weights constant&#10;and backpropagating the error through the discriminator to update the&#10;generator weights.&#10;&#10;The saliency prediction problem has some important differences from the&#10;above scenario. First, the objective is to fit a deterministic function&#10;that predict realistic saliency values from images, rather than&#10;realistic images from random noise. As such, in our case the input to&#10;the generator (saliency prediction network) is not random noise but an&#10;image. Second, the input image that a saliency map corresponds to is&#10;essential, due the fact the goal is not only to have the two saliency&#10;maps becoming indistinguishable but with the condition that they both&#10;correspond the same input image. We therefore include both the image and&#10;saliency map as inputs to the discriminator network. Finally, when using&#10;generative adversarial networks to generate realistic images, there is&#10;generally no ground truth to compare against. In our case, however, the&#10;corresponding ground truth saliency map is available. When updating the&#10;parameters of the generator function, we found that using a loss&#10;function that is a combination of the error from the discriminator and&#10;the cross entropy with respect to the ground truth improved the&#10;stability and convergence rate of the adversarial training. The final&#10;loss function for the saliency prediction network during adversarial&#10;training can be formulated as: where is the binary cross entropy loss,&#10;and 1 is the target category of real samples and 0 for the category of&#10;fake (predicted) sample. Here, instead of minimizing , we optimize which&#10;provides stronger gradient, similar to . is the probability of fooling&#10;the discriminator network, so that the loss associated to the saliency&#10;prediction network will grow more when chances of fooling the&#10;discriminator are lower. During the training of the discriminator, no&#10;content loss is available and the loss function is: At train time, we&#10;first bootstrap the saliency prediction network function by training for&#10;15 epochs using only BCE, which is computed with respect to the&#10;down-sampled output and ground truth saliency. After this, we add the&#10;discriminator and begin adversarial training. The input to the&#10;discriminator network is an RGBS image of size containing both the&#10;source image channels and (predicted or ground truth) saliency.&#10;&#10;We train the networks on the 15,000 images from the SALICON training set&#10;using a batch size of 32. During the adversarial training, we alternate&#10;the training of the saliency prediction network and discriminator&#10;network after each iteration (batch). We used L2 weight regularization&#10;(i.e. weight decay) when training both the generator and discriminator&#10;(). We used AdaGrad for optimization, with an initial learning rate of .">
  </outline>
</outline>
<outline text="Experiments" _note="The presented SalGAN model for visual saliency prediction was assessed&#10;and compared from different perspectives. First, the impact of using BCE&#10;and the downsampled saliency maps are assessed. Second, the gain of the&#10;adversarial loss is measured and discussed, both from a quantitative and&#10;a qualitative point of view. Finally, the performance of SalGAN is&#10;compared to published works to compare its performance with the current&#10;state-of-the-art. The experiments aimed at finding the best&#10;configuration for SalGAN were run using the TRAIN and VALIDATION&#10;partitions of the SALICON dataset . This is a large dataset built by&#10;collecting mouse clicks on a total of 20,000 images from the Microsoft&#10;Common Objects in Context (MS-CoCo) dataset . We have adopted this&#10;dataset for our experiments because it is the largest one available for&#10;visual saliency prediction. In addition to SALICON,we also present&#10;results on MIT300, the benchmark with the largest amount of submissions.">
  <outline text="Non-adversarial training" _note="The two content losses presented in content loss section, MSE and BCE,&#10;were compared to define a baseline upon which we later assess the impact&#10;of the adversarial training. The two first rows of&#10;Table \[tab:Adversarial\] shows how a simple change from MSE to BCE&#10;brings a consistent improvement in all metrics. This improvement&#10;suggests that treating saliency prediction as multiple binary&#10;classification problem is more appropriate than treating it as a&#10;standard regression problem, in spite of the fact that the target values&#10;are not binary. Minimizing cross entropy is equivalent to minimizing the&#10;KL divergence between the predicted and target distributions, which is a&#10;reasonable objective if both predictions an targets are interpreted as&#10;probabilities. Based on the superior BCE-based loss compared with MSE,&#10;we also explored the impact of computing the content loss over&#10;downsampled versions of the saliency map. This technique reduces the&#10;required computational resources at both training and test times and, as&#10;shown in Table \[tab:Downsample15\], not only does it not decrease&#10;performance, but it can actually improve it. Given this results, we&#10;chose to train SalGAN on saliency maps downsampled by a factor , which&#10;in our architecture corresponds to saliency maps of .">
  </outline>
  <outline text="Adversarial gain" _note="The adversarial loss was introduced after estimating the value of the&#10;hyperparameter in Equation \[eq:alpha\] by maximizing the most general&#10;metric, Information Gain (IG). As shown in Figure \[fig:alpha\], the&#10;search was performed on logarithmic scale, and we achieved the best&#10;performance for .&#10;&#10;The Information Gains (IG) of SalGAN for different values of the hyper&#10;parameter are compared in Figure \[fig:alpha\]. The search for finding&#10;an optimal hyper parameter is performed on logarithmic scale, and we&#10;achieved the best performance for .&#10;&#10;The gain achieved by introducing the adversarial loss into the&#10;perceptual loss was assessed by using BCE as a content loss and feature&#10;maps of . The first row of results in Table \[tab:Adversarial\] refers&#10;to a baseline defined by training SalGAN with the BCE content loss for&#10;15 epochs only. Later, two options are considered: 1) training based on&#10;BCE only (2nd row), or 2) introducing the adversarial loss (3rd and 4th&#10;row). Figure \[fig:ganvsbce\] compares validation set accuracy metrics&#10;for training with combined GAN and BCE loss versus a BCE alone as the&#10;number of epochs increases. In the case of the AUC metrics (Judd and&#10;Borji), increasing the number of epochs does not lead to significant&#10;improvements when using BCE alone. The combined BCE/GAN loss however,&#10;continues to improve performance with further training. After 100 and&#10;120 epochs, the combined GAN/BCE loss shows substantial improvements&#10;over BCE for five of six metrics.&#10;&#10;The single metric for which Adversarial training fails to improve&#10;performance is normalized scanpath saliency (NSS). The reason for this&#10;may be that GAN training tends to produce a smoother and more spread out&#10;estimate of saliency, which better matches the statistical properties of&#10;real saliency maps, but may increase the false positive rate. As noted&#10;in , NSS is very sensitive to such false positives. The impact of&#10;increased false positives depends on the final application. In&#10;applications where the saliency map is used as a multiplicative&#10;attention model (e.g. in retrieval applications, where spatial features&#10;are importance weighted), false positives are often less important than&#10;false negatives, since while the former includes more distractors, the&#10;latter removes potentially useful features. Note also that NSS is&#10;differentiable, so could potentially be optimized directly when&#10;important for a particular application.">
  </outline>
  <outline text="Comparison with the state-of-the-art" _note="SalGAN is compared in Table \[tab:soa\] to several other algorithms from&#10;the state-of-the-art. The comparison is based on the evaluations run by&#10;the organizers of the SALICON and MIT300 benchmarks on a test dataset&#10;whose ground truth is not public. The two benchmarks offer complementary&#10;features: while SALICON is a much larger dataset with 5,000 test images,&#10;MIT300 has attracted the participation of many more researchers. In both&#10;cases, SalGAN was trained using 15,000 images contained in the training&#10;(10,000) and validation (5,000) partitions of the SALICON dataset.&#10;Notice that while both datasets aim at capturing visual saliency, the&#10;acquisition of data differed, as SALICON ground truth was generated&#10;based on crowdsourced mouse clicks, while the MIT300 was built with eye&#10;trackers on a limited and controlled group of users. Table \[tab:soa\]&#10;compares SalGAN with other contemporary works that have used SALICON and&#10;MIT300 datasets. SalGAN presents very competitive results in both&#10;datasets, as it improves or equals the performance of all other models&#10;in at least one metric.">
  </outline>
  <outline text="Qualitative results" _note="The impact of adversarial training has also been explored from a&#10;qualitative perspective by observing the resulting saliency maps.&#10;&#10;Figure \[fig:MITExamples\] shows one example from the MIT300 dataset,&#10;highlighted in as being particular challenges for existing saliency&#10;algorithms. The areas highlighted in yellow in the images on the left&#10;are regions that are typically missed by algorithms. In the this&#10;example, we see that SalGAN successfully detects the often missed hand&#10;of the magician and face of the boy as being salient.&#10;&#10;Figure \[fig:bcsgan\_artifacts\] illustrates the effect of adversarial&#10;training on the statistical properties of the generated saliency maps.&#10;Shown are two close up sections of a saliency map from cross entropy&#10;training (left) and adversarial training (right). Training on BCE alone&#10;produces saliency maps that while they may be locally consistent with&#10;the ground truth, are often less smooth and have complex level sets.&#10;Adversarial training on the other hand produces much smoother and&#10;simpler level sets.&#10;&#10;Finally, Figure \[fig:qualitativeResults\] shows some qualitative&#10;results comparing the results from training with BCE and BCE/Adversarial&#10;against the ground truth for images from the SALICON validation set.">
  </outline>
</outline>
<outline text="Conclusions" _note="To the best of our knowledge, this is the first work that proposes an&#10;adversarial-based approach to saliency prediction and has shown how&#10;adversarial training over a deep convolutional neural network can&#10;achieve state-of-the-art performance with a simple encoder-decoder&#10;architecture. A BCE-based content loss was shown to be effective for&#10;both initializing the saliency prediction network, and as a&#10;regularization term for stabilizing adversarial training. Our&#10;experiments showed that adversarial training improved all bar one&#10;saliency metric when compared to further training on cross entropy&#10;alone.&#10;&#10;It is worth pointing out that although we use a VGG-16 based&#10;encoder-decoder model as the saliency prediction network in this paper,&#10;the proposed adversarial training approach is generic and could be&#10;applied to improve the performance of other saliency models.">
</outline>
<outline text="Acknowledgments" _note="The Image Processing Group at UPC is supported by the project&#10;TEC2016-75976-R, funded by the Spanish Ministerio de Economia y&#10;Competitividad and the European Regional Development Fund (ERDF). This&#10;material is based upon works supported by Science Foundation Ireland&#10;under Grant No 15/SIRG/3283. We gratefully acknowledge the support of&#10;NVIDIA Corporation for the donation of GPUs used in this work.">
</outline>
  </body>
</opml>