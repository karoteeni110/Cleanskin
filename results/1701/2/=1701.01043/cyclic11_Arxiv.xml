<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>**Non-linear Cyclic Codes that Attain the Gilbert-Varshamov Bound**</title>
    <abstract>We prove that there exist non-linear binary cyclic codes that attain the
Gilbert-Varshamov bound. </abstract>
  </head>
  <body>
<outline text="Introduction" _note="For a finite field , a CYCLIC CODE of length is a linear subspace that&#10;is closed under cyclic permutations, i.e., for every codeword , all&#10;cyclic permutations of are also included in . Cyclic codes have been&#10;extensively studied over the last decades exhibiting a rich algebraic&#10;structure with immense applications in storage and communication, e.g.,&#10;.&#10;&#10;A code over alphabet is said to have (NORMALIZED) MINIMUM DISTANCE at&#10;least if any two distinct codewords in are of Hamming distance at least&#10;. It is also said to have RATE . Of particular interest are GOOD&#10;FAMILIES OF CODES, which are sequences of codes , with of length , rate&#10;, and minimum normalized distance , such that simultaneously,&#10;&#10;One of the most fundamental challenges in coding theory is to construct&#10;good families of codes. Several such families were presented in the&#10;literature over the years. This includes, for example, the&#10;Gilbert-Varshamov (GV) codes and the algebraic constructions of Justesen&#10;and Goppa (see also ). However, the existence of a good family of CYCLIC&#10;(linear) codes is a long-standing open problem, see e.g., .&#10;&#10;In an attempt to shed some light on the problem of good cyclic codes,&#10;some works considered close variants to cyclic codes. Quasi-cyclic and&#10;double-circulant codes are one example, created by interleaving cyclic&#10;codes. These families were shown to contain families of good codes .&#10;Another such example is the family of module skew codes, which are&#10;almost cyclic except for a slight twist in the permutation. These were&#10;recently shown to contain a good family of codes .&#10;&#10;In this work, we study another variant of cyclic codes – NON-LINEAR&#10;cyclic codes[^1]. For simplicity of presentation we consider only the&#10;binary case. We will show that this family of codes contains a good&#10;family which asymptotically meets the GV bound , i.e., of normalized&#10;distance and asymptotic rate approaching , where stands for the binary&#10;entropy function. This matches the best known lower bound for binary&#10;codes of minimum normalized distance that are not necessarily cyclic. To&#10;the best of our knowledge, good families of non-linear binary cyclic&#10;codes have not been previously presented in the literature.&#10;&#10;Our construction of good binary non-linear cyclic codes is conceptually&#10;very simple and includes two steps. In the first step we construct a&#10;high-rate binary code which we call AUTO-CYCLIC. (All formal definitions&#10;are given below in Section \[sec:pre\].) An auto-cyclic code is a&#10;non-linear cyclic code in which the set of cyclic permutations of any&#10;given codeword is of (normalized) minimum distance at least . In this&#10;context, we refer to as the AUTO-CYCLIC distance. Auto-cyclic codes are&#10;reminiscent of ORTHOGONAL or low AUTO-CORRELATION codes, e.g. . Using a&#10;probabilistic argument, we show the existence of a subset of of&#10;asymptotic rate which is auto-cyclic with auto-cyclic distance&#10;arbitrarily close to . Once a high-rate auto-cyclic code is established,&#10;we greedily remove some of its elements (using a slight variant of the&#10;well known greedy process that leads to the GV bound) to obtain the&#10;desired non-linear cyclic code of rate and minimum distance .&#10;&#10;The remainder of this note is structured as follows. In&#10;Section \[sec:pre\] we present our formal definitions. In&#10;Section \[sec:GV\] we prove the existence of binary non-linear cyclic&#10;codes that meet the GV bound. Section \[sec:conc\] includes concluding&#10;remarks and open questions.&#10;&#10;[^1]: It is common in the literature to define cyclic codes as linear.&#10;    Thus, we shall make it a point to emphasize the fact that the codes&#10;    we consider MAY BE non-linear by naming them NON-LINEAR CYCLIC&#10;    CODES.">
</outline>
<outline text="Preliminaries" _note="Let . In the context of indices, all addition and multiplication&#10;operations are done modulo .&#10;&#10;Let . For all , the cyclic shift of -locations to the left is defined as&#10;&#10;Let . The (normalized) Hamming distance between and is defined as The&#10;cyclic Hamming-distance between and is defined as The auto-cyclic&#10;Hamming-distance between and itself is defined as Notice that in the&#10;definition of the auto-cyclic distance we only consider shifts that&#10;differ from . For the all-0 vector and the all-1 vector we define the&#10;auto-cyclic distance to be .&#10;&#10;A subset is CYCLIC if for every and every it holds that .&#10;&#10;We say that is an binary AUTO-CYCLIC CODE if is cyclic and in addition&#10;for every it holds that .&#10;&#10;We say that is an binary non-linear CYCLIC CODE if is cyclic and in&#10;addition, for every , , it holds that .&#10;&#10;The rate of a subset is defined by&#10;&#10;The asymptotic rate of an infinite sequence of codes , where , for all ,&#10;is defined as">
</outline>
<outline text="Non-linear Cyclic Codes" _note="We start with the following lemma that provides a probabilistic&#10;construction of binary auto-cyclic codes of high rate.&#10;&#10;\[lemma:auto\] For every and every sufficiently large prime , there&#10;exists an binary auto-cyclic code of rate at least . In particular,&#10;there exists a sequence of binary auto-cyclic codes of normalized&#10;minimum distance and asymptotic rate .&#10;&#10;Let be a sufficiently large prime. Consider choosing a random element in&#10;from the uniform distribution. Namely, each entry of is chosen&#10;i.i.d. uniformly over . We study the probability that . Let . We first&#10;analyze the probability In our analysis we will use the fact that for a&#10;prime , the sequence consists of elements that are all distinct modulo .&#10;For , let be the indicator of the event that the -th coordinate (modulo&#10;) of differs from that of , namely that differs from . As is prime it&#10;holds that&#10;&#10;Let be an arbitrary vector, and consider the probability Notice that&#10;each event depends only on and . Using the fact that the sequence&#10;consists of elements that are all distinct modulo , we conclude that for&#10;: Here, we used the fact that each entry of is uniform over and that is&#10;independent of the entries that determine the events . Thus,&#10;&#10;We now conclude that for any , Above, we upper bound the Hamming ball of&#10;radius by , where stands for the binary entropy function. By the union&#10;bound over , we have&#10;&#10;Finally, define By we have for and a sufficiently large , so the rate of&#10;is at least . In addition, if then any cyclic shift of is also in .&#10;&#10;Equipped with Lemma \[lemma:auto\], we are ready to prove our main&#10;result stated below.&#10;&#10;For every and there exists a sequence of binary non-linear cyclic codes&#10;of normalized minimum distance at least and asymptotic rate at least .&#10;&#10;Fix and let . We construct for every sufficiently large prime an binary&#10;non-linear cyclic code of rate at least . Our construction has two&#10;steps. In the first step, using Lemma \[lemma:auto\], we construct an&#10;auto-cyclic code of rate at least .&#10;&#10;In the second step we construct by a greedy procedure similar to that&#10;used in the standard GV bound. Specifically, we start with . Let be any&#10;word in . Add and all its cyclic shifts to and remove them from . In&#10;addition, remove from all words for which . In this process, since , we&#10;remove at most words from . Here, as before, we upper bound the Hamming&#10;ball of radius by . Note that for any removed, we also remove all its&#10;cyclic shifts.&#10;&#10;We now continue in iterations, in each iteration we add an element and&#10;all its cyclic shifts to and remove all for which from (including and&#10;its cyclic shifts). We continue in this fashion until is empty.&#10;&#10;It follows that the code constructed above has size at least and thus&#10;has rate at least The code is an binary non-linear cyclic code. Namely,&#10;by construction, for each and it holds that . Moreover, by the iterative&#10;procedure, any distinct satisfy .">
</outline>
<outline text="Conclusion" _note="In this work we proved the existence of a good family of binary&#10;non-linear cyclic codes of normalized distance and asymptotic rate&#10;(i.e., codes that meet the GV bound). The codes we construct are&#10;non-linear. Specifically, for , the code obtained in the first step of&#10;our construction is the collection of all codewords with auto-cyclic&#10;distance greater or equal to . This code is not linear. To see this,&#10;consider any for which for all it holds that . The proof of&#10;Lemma \[lemma:auto\] shows the existence of several such . Consider now&#10;the codeword . The codeword satisfies the slightly weaker condition that&#10;for all . So both and have auto-cyclic distance at least however has&#10;auto-cyclic distance of . The second step of our construction, which&#10;removes elements from to obtain the cyclic code of distance and rate&#10;arbitrarily close to , is greedy and does not necessarily yield linear&#10;codes. Whether the first step of our construction can be refined using&#10;algebraic techniques to yield a linear auto-cyclic code, or whether the&#10;second step of our construction (assuming a linear ) can yield a linear&#10;code , are intriguing problems left open in this work. Problems that, if&#10;solved, may shed light on the existence of good binary linear cyclic&#10;codes.">
</outline>
<outline text="Acknowledgment" _note="The authors would like to thank Alexander Barg for his valuable comments&#10;on an earlier draft of this work.">
</outline>
  </body>
</opml>