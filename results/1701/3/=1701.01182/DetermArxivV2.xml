<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title>Parabolic Catalan numbers count efficient inputs\
for Gessel-Viennot flagged Schur function determinant</title>
    <abstract> </abstract>
  </head>
  <body>
<outline text="Introduction" _note="No particular background is needed to read this largely self-contained paper. Several prior results that are needed in Sections 2 and 8 and for Corollaries   and   were obtained in the predecessor paper .  Fix throughout the paper. Also fix a partition that has nonnegative parts; this is a list of weakly decreasing nonnegative integers. Flagged Schur functions are polynomials in that were introduced by Lascoux and Sch[ü]{}tzenberger in 1982 as they studied Schubert polynomials. Given an -tuple such that , the flagged Schur function indexed by and is defined to be the sum of the content weight monomial over the semistandard tableaux on the shape of whose values are row-wise bounded by the respective entries of . Sometimes for is also required to ensure nonvanishing. However, in this paper the notation will more generally denote this sum when is only required to satisfy for .  Ira Gessel and X.G. Viennot were able to express a flagged Schur function with a determinant by modelling its tableaux with nonintersecting -tuples of lattice paths: Their initial set-up fixed a sequence of lattice points to serve as sources for the respective paths, to which were assigned sinks from a set of fixed lattice points in any of the possible ways. These “terminal” lattice points were specified in terms of the entries of and . Initially was not required. Most of the resulting -tuples of lattice paths contained intersections, and the desired tableaux corresponded only to the nonintersecting -tuples of lattice paths for which the sinks were assigned from the set of terminals in their “native” order. The terms in the signed sum expansion of the proposed determinant gave the weights that they assigned to the -tuples of paths. Then they introduced a sign reversing involution that paired up the intersecting -tuples of paths so that the weights for these cancelled each other out from the expansion, leaving only the signed sum of the weights for the nonintersecting -tuples of paths. For this method to give the tableau weight sum , they needed to require that the set of terminals specified by the pair satisfied their “nonpermutable” property: This required that any -tuple of lattice paths that had a sequence of sinks coming from a nontrivially permuted assignment of the terminals had to contain an intersection. As Stanley parenthetically noted in his presentation of their work in Theorem 2.7.1 of , for any it can be seen that requiring will guarantee that is nonpermutable. Directly in terms of the entries of and , our main result gives a condition for a pair to be nonpermutable that is necessary as well as being sufficient. Although the references , , and each provide determinants for skew flagged Schur functions, we limit our considerations to the general sums on nonskew shapes.  Demazure characters were introduced by Demazure in 1974 when he studied singularities of Schubert varieties. Coincidences between the Demazure characters for (key polynomials) and flagged Schur functions were studied by Reiner and Shimozono and then by Postnikov and Stanley . When the parts of are not distinct, there are multiple row bound -tuples that will produce the same polynomial via the sum of tableau weights construction on the shape of . The predecessor paper to this paper sharpened, deepened, and extended the results of and . Much machinery was introduced and several special kinds of -tuples were defined. The foremost kinds were the “-312-avoiding permutations” and the “gapless -tuples”. The crucial information for an -tuple was distilled into its “critical list”, as its “-core” was being computed.  It turns out that the machinery and notions that were introduced in for the purposes of that paper are surprisingly well-suited to solving the problem of characterizing the nonpermutable pairs that was implicitly raised by Stanley’s Theorem 2.7.1 parenthetical remark. In addition to re-using the notion of gapless -tuple and the closely related notion of “gapless core -tuple”, here we also need to extend the -ceiling flag map of so that we can introduce a new condition that requires . Our main result, Theorem  , presents our characterization of the nonpermutable pairs . Its two halves are proved with Proposition   and  . Corollary   gives the determinant expression for when satisfies the characterization with respect to . Corollary   indicates how results of can be used to extend the realm of Corollary  . Corollary   describes how Corollary   can be used to give a determinant expression for certain Demazure characters; this improves upon Corollary 14.6 of .  In the last section, as in , we define two row bound -tuples to be equivalent if the sets of tableaux on the shape that satisfy these bounds are the same. Proposition   describes the equivalence classes of this relation within the set of row bound -tuples that meet the criteria required to use the determinant expression. Within an equivalence class, one can seek the -tuple for which the total number of monomials appearing in the corresponding determinant is as small as possible. Proposition   identifies these “maximum efficiency” -tuples as being the gapless -tuples that appeared in Corollary  . Corollary   then notes that the number of gapless -tuples was shown in to be the number of -312-avoiding permutations; there this number was taken to be the definition of the “parabolic Catalan number” indexed by and .  When one sets all , no special row bounds are imposed upon the tableaux and the resulting polynomial is the ordinary Schur function . The Gessel-Viennot method made the Jacobi-Trudi determinant expression of Theorem 7.16.1 of for more efficient by reducing the number of variables that appeared in most of its entries. When the parts of are not distinct, Proposition   says that Corollary   provides a determinant for that is even more efficient in this regard.  One of the central themes of the predecessor paper is continued into this paper. Given a set , an “-tuple” is an -tuple with entries from that is equipped with “dividers” between some of its entries. In these two papers the study of any one of the interrelated phenomena concerning sets of tableaux on the shape begins with the determination of the set of the lengths of the columns in that are less than . Much of the machinery needed to study these phenomena is formulated in terms of -tuples without reference to any other aspects of : Five preliminary sections of take place in the world of -tuples, before shapes and tableaux are introduced. Continuing a notation convention of , after has been introduced we replace ‘’ in prefixes and subscripts with ‘’. This reduces clutter while explicitly retaining the dependence upon , which setting would lose.">
</outline>
<outline text="Definitions for -tuples" _note="Let and be nonnegative integers. Define and . Except for , lower case Greek letters indicate -tuples of non-negative integers; their entries are denoted with the same letter. An -TUPLE consists of ENTRIES indexed by INDICES , which together form PAIRS . Let denote the poset of -tuples ordered by entrywise comparison. Fix an -tuple . A SUBSEQUENCE of is a sequence of the form for some . A STAIRCASE OF WITHIN A SUBINTERVAL for some is a maximal subsequence of whose entries increase by 1. A PLATEAU in is a maximal constant nonempty subsequence of . An -tuple is a FLAG if . An UPPER TUPLE is an -tuple such that for .  Fix . Denote the elements of by for some . Set and . We use the for to specify the locations of “dividers” within -tuples: Let be an -tuple. On the graph of in the first quadrant draw vertical lines at for and some small . These lines indicate the right ends of the CARRELS OF for . An -TUPLE is an -tuple that has been equipped with these dividers. Fix an -tuple ; we portray it by . Let denote the subposet of consisting of upper -tuples. Let denote the subposet of consisting of upper flags. Fix . The carrel has indices. An -INCREASING TUPLE is an -tuple such that for . Let denote the subset of consisting of -increasing upper tuples.  We distill the crucial information from an upper -tuple into a skeletal substructure called its “critical list”, and at the same time define two functions from to . Fix . To launch a running example, take , and . We will be constructing the images and of under -CORE and -PLATFORM maps and . Fix . Working within the carrel from the right we recursively find for : At the RIGHTMOST CRITICAL PAIR OF IN THE CARREL is . Set . Recursively attempt to increase by 1: If it exists, the NEXT CRITICAL PAIR TO THE LEFT is , where is maximal such that . For , write and set and . Otherwise, let be the last value of attained. For , write and again set and . The SET OF CRITICAL PAIRS OF FOR THE CARREL is . Equivalently, here is maximal such that there exists indices such that and for . The -CRITICAL LIST FOR is the sequence of its sets of critical pairs. In our example and and . It can be seen that the -core of and the -platform of have the same critical list as . It can also be seen that and that for . If is a critical pair, we call a CRITICAL INDEX and a CRITICAL ENTRY. We say that an -critical list is a FLAG -CRITICAL LIST if whenever we have , where . The example critical list is a flag critical list. If , then its -critical list is a flag -critical list.  A GAPLESS CORE -TUPLE is an upper -tuple whose critical list is a flag critical list. Let denote the set of gapless core -tuples. The example above is a gapless core -tuple. A GAPLESS -TUPLE is an -increasing upper tuple whose critical list is a flag critical list. Let denote the set of gapless -tuples. The example above is a gapless -tuple. Originally a gapless -tuple was defined in Section 3 of to be an -increasing upper tuple such that whenever there exists with , then and the first entries of the carrel are . Originally a gapless core -tuple was defined in Section 3 of to be an upper -tuple whose -core is a gapless -tuple. Those original definitions were shown there to be equivalent to these definitions in Proposition 4.2. An upper -tuple is BOUNDED BY ITS PLATFORM if . Let denote the set of such upper -tuples. The example above is not bounded by its platform. Clearly and . From the definition of , it is clear that and . Since by definition, we have .  We illustrate some recent definitions. First consider an -increasing upper tuple : Each carrel subsequence of is a concatenation of the staircases within the carrel in which the largest entries are the critical entries for the carrel. Now consider the definition of a gapless -tuple, which begins by considering a : This definition is equivalent to requiring for all that if , then the leftmost staircase within the carrel must contain an entry .  An -CEILING FLAG is an upper flag that is a concatenation of plateaus whose rightmost pairs are the -critical pairs of . Let denote the set of -ceiling flags. It can be seen that the restriction of the -platform map from to is the -ceiling map defined near the end of Section 5 of . So by that Proposition 5.4(ii) this restriction of is a bijection from to with inverse , and for the upper flag is the unique -ceiling flag that has the same flag -critical list as .">
</outline>
<outline text="Definitions of shapes, tableaux, polynomials" _note="A PARTITION is an -tuple such that . The SHAPE of , also denoted , consists of left justified rows with boxes. We denote its column lengths by . Since the columns were more important than the rows in , the boxes of are transpose-indexed by pairs such that and . Define to be the set of distinct column lengths of that are less than . Using the language of Section 2 with , note that for one has for . For the coordinates of the boxes in the CLIFF form the set . We will replace ‘’ by ‘’ in subscripts and in prefixes when using concepts from Section 2 via .  A (SEMISTANDARD) TABLEAU OF SHAPE is a filling of with values from that strictly increase from north to south and weakly increase from west to east. Let denote the set of tableaux of shape . Fix . For , we denote the one column “subtableau” on the boxes in the column by . Here for the tableau value in the row is denoted . To define the CONTENT OF , for take to be the number of values in equal to . Let be indeterminants. The MONOMIAL of is , where is the content .  Let be a -tuple. We define the ROW BOUND SET OF TABLEAUX to be . As in Section 12 of , it can be seen that is nonempty if and only if . Fix . As noted in Section 12 of , it can be seen that has a unique maximal element. In we introduced the ROW BOUND SUM , sum over . To connect to the literature, for we also give the names FLAG BOUND SET and FLAG SCHUR POLYNOMIAL to and the flagged Schur function respectively. As in , for it is also useful to give the names GAPLESS CORE BOUND SET and GAPLESS CORE SCHUR POLYNOMIAL to and respectively.  Proposition 12.1 of stated that the collection of sets and of are the same. Thus the gapless core Schur polynomials are already available as flag Schur polynomials. However, the additional indexing -tuples from are useful. The following theme from will be continued: Here we will prove that the row bound sums for are not “good” for the consideration at hand.">
</outline>
<outline text="Lattice paths and Gessel-Viennot determinant" _note="We introduce -tuples of weighted lattice paths to model the tableaux in the row bound tableau set . To obtain a close visual correspondence we first flip the - plane containing the paths vertically so that its first quadrant is to the lower right (southeast) of the origin on the page. Re-use our indexing of boxes in shapes with transposed matrix coordinates to coordinatize the points in this first quadrant of : Let and . The lattice point is units to the east of and units to the south of . For , the directed line segment from to is an EASTERLY STEP OF DEPTH . A (LATTICE) PATH WITH SOURCE AND SINK is a connected set incident to and that is the union of easterly steps and SOUTHERLY STEPS. The notation indicates that an eastbound path arrives at , turns right and proceeds south to , turns left and proceeds east to , and then turns right and proceeds south. An -PATH is an -tuple of paths such that the component path has source for .  Let . The points are TERMINALS and is a TERMINAL PAIR. This “strictification” of ensures that the longitudes of the terminals are distinct. Initially our -paths will use the terminals in this order as sinks for their respective components. Given such an -path , as in the proof of Theorem 7.16.1 of we attempt to create a corresponding tableau . For each we record the weakly increasing depths of the successive easterly steps in the path from left to right in the boxes of the row of the shape : Here the easterly step in from to is recorded as the value in the box for . The last value in the row cannot exceed . It can be seen that these values strictly increase down each column of if and only if there are no intersections among the for . Let denote the set of such DISJOINT -paths. There is at least one such disjoint -path if and only if is upper: To confirm this, with the correspondence above re-use the observations made near the beginning of Section 12 of that addressed the questions of when the set is empty and nonempty. When is upper, it can be seen that the recording process is bijective to the set . Since it will be seen that the cliffs of play a crucial role, we now determine and regard as being a -tuple. Summarizing:   We have if and only if . For , the recording process is a bijection from the set of disjoint -paths to the row bound tableau set .  Fix . To obtain the determinant expression for we will need to consider more general -paths and introduce weights. Let be an -path with any sinks. Assigning a weight monomial to in the following fashion emulates our assignment of the weight to a tableau when , and it also extends the weight rule to all -paths. For assign the weight to each easterly step of depth in the path , and then multiply these weights over its easterly steps. Multiply the weights of the component paths to produce a monomial we denote . When the sinks of are the terminals from in their usual order, it can be seen that the multivariate generating function is our row bound sum . Let , and set . If we sum the weights that are assigned to just one path as it varies over all paths from to , we produce the COMPLETE HOMOGENEOUS SYMMETRIC FUNCTION in the variables : Here for , and otherwise , sum over .  We next consider -paths that use the same terminals, but in a permuted order, for their list of sinks. Let be a permutation of . Let denote the list of terminals . Let denote the set of disjoint -paths with respective sinks . The terminal pair is NONPERMUTABLE if when .  Here is our non-skew version of Theorem 2.7.1 of ; as in Theorem 7.16.1 of we have replaced the disjoint -paths with the corresponding tableaux:   Let . If the terminal pair is nonpermutable, then the row bound sum is given by the determinant .  To produce this expression with Theorem 2.7.1 of , use the remark above that expressed as the generating function and note that . Theorem 2.7.1 was proved with a signed involution pairing cancellation argument, as in .">
</outline>
<outline text="Main results" _note="Our main result combines the forthcoming Propositions   and  :   Let be a partition and let be an upper -tuple. The terminal pair is nonpermutable if and only if is a gapless core -tuple that is bounded by its platform.  So under these circumstances we can employ the Gessel-Viennot method, as noted in Proposition  :   Let . If then .  Although this determinant is not guaranteed to “work” when , given our quotes in Section 8 of facts from the polynomial for such a can be computed with the determinant using instead of itself. An example of the failure of the determinant for such a is given before Lemma  .   Let . Set . If then .  At the end of Section 14 of we promised to give a determinant expression for certain Demazure characters (key polynomials) here. General Demazure characters for can be recursively defined with divided differences as noted in Section 1 of or defined as a sum of over a certain set of semistandard tableaux as in Section 14 of . Given that , the next statement is implied by Corollary   and Theorem 14.2(ii) of . For this result that theorem gives . Consult Section 3 of for the definitions of the -permutations and the map .   Let be a partition and let be a -permutation. If is -312-avoiding, then is a gapless -tuple and .  A “less efficient” (in the sense of our Section 8) version of this expression appeared in the proof of Corollary 14.6 of when Postnikov and Stanley applied their skew flagged Schur function determinant identity Equation 13.1 to their .">
</outline>
<outline text="Necessary condition for nonpermutability" _note="Let . We prepare for two proofs by constructing an -path for each . To see that each , we also describe its corresponding (clearly semistandard) tableau . Launching a running example, take and and . Set . Here . Let . For example, take . For set for . The corresponding paths are . Six of these eight paths are shown with dots in Figure 6.1. Let . Let be such that . For set . For set . The corresponding paths are . For set for . The corresponding paths are . The dots indicate the depths on the ending longitudes of the paths.  For a determinant example pertinent to the following lemma, take , and . Note that , and so this lemma will imply that is not nonpermutable. Here , but the determinant of Proposition   evaluates to .   If , then fails to be nonpermutable.  Set and . In the example we have . Since is a -tuple and for , the failure of  Figure 6.1. Rewiring four component paths produces a nonpermutability violation.  boundedness for cannot occur in this last carrel. Let be such that there exists such that , and then let be maximal such that . So is not a critical index, since . Let be the leftmost critical index in such that . Here we have , and . Here implies . Since we have , which implies . Now refer to the -path constructed above for this . We rewire the last part of its to produce a new path as follows: Rather than finishing with , the new path finishes with . Four rewirings are shown with solid paths. Here reaches , goes one unit to the south, then turns left onto the latitude and goes units to the east, and then turns right to go straight south until it ends at . This new southerly edge is not in use by (or a later path): If , then the longitude at is not used by any component of since here implies that this longitude is strictly to the east of the longitude on which finishes. If , note that because is a critical index. So here the southernmost point reached by on its new briefly used longitude at is strictly to the north of the northernmost point on this longitude used by , which descended to the depth on the longitude to the west. Either way, for , next successively rewire the finishes of to respectively produce finishes for the paths as follows: Rather than travelling , the new path travels . Here is finishing by turning right one step early, using one (or more) new southerly step(s), and then using the final (possibly empty) “southerly stilt” that had been using to finish. It can be seen that the “further” new southerly steps that could be used by are not used by . No intersections among these paths occur since the right turns that are each being executed one easterly step early are being coordinated along a staircase where . Given the choices of and , for we have . So for . Hence does not intersect for . When set . It can be seen that none of the rewired paths intersect any of these original paths. We have constructed a disjoint -path whose respective sinks form a nontrivial permutation of the original ordered terminals. Therefore .  For an example pertinent to the following lemma, take , and . Note that , and so this lemma will imply that is not nonpermutable. Here , but the determinant of Proposition   evaluates to .   If , then fails to be nonpermutable.  If apply Lemma  ; otherwise . Set and . Having failing to be a gapless core -tuple is equivalent to having failing to be a gapless -tuple. The only critical entry in the last carrel is . So there cannot be a failure of -gapless based upon having . Let be such that fails to be -gapless based upon having , where is the leftmost critical index in the carrel . Set . In each of the two cases below we refer to the -path for this constructed above. Note that . Since in each case we have , which implies . These facts will allow us to rewire the path to produce the path in nearly the same fashion as in the previous proof. The only difference is that the new path now has to make additional easterly steps just before reaching its finishing longitude of . If , then the reasoning used in the ‘’ case in the preceding proof to see that the southerly edge on the longitude from depth to depth is not in use by can be re-used here. Here is the only critical index for the carrel . If , the reasoning used in the ‘’ case in the preceding proof to see that the early “jog” to the right is acceptable can be re-used here. Here is the smallest critical index greater than . Either way, for , next successively rewire to respectively produce paths as in the previous proof. Then rewire the path to produce the path in nearly the same fashion as in the previous proof. The only difference is that the new path now makes fewer easterly steps just before reaching its finishing longitude of . The observation in the previous proof concerning the coordination of the right turns among the shifted modified paths needs a tiny modification to account for this. In each case the fact that is the smallest critical index larger than implies for . Since , we have for . The rest of this proof is the same as the end of the previous proof.  Combine the contrapositives of these two lemmas:   Let . If is nonpermutable, then .">
</outline>
<outline text="Sufficient condition for nonpermutability" _note="To prove the converse of Proposition  , we will need:   Let . Set . Let be a permutation of . Let . For each , the component of must end with .  To avoid forming the inverse of and using double subscripts, we sidestep by refering to the original indices for the terminals. Let be a critical index for . Let be the largest critical index that is less than ; if is the leftmost critical index then take . Here for . For such , let denote the component of that sinks at . The claim is true for since . Let decrement from to and assume the claim is true for . So each ends with . Set . Note that . If there is nothing to show. Otherwise and imply that . By the induction we see that is unavailable to for . So this path must pass through . Then it must finish with .  Stanley remarked in Theorem 2.7.1 of that is nonpermutable when is a flag. Since , the following proposition extends that remark. His remark can be justified with either of the arguments that we describe within Case (i) of this proof, but referring to rather than to .   Let . If , then is nonpermutable.  Let be a permutation of such that . For the sake of contradiction suppose . Find a descent in and let be such that . Set . Take . Set . By the lemma, without loss of generality we may revamp by replacing (with respect to their original indexing) the sequence of depths of its terminals with the sequence of shallower depths . This truncates its original paths by deleting their final stilts. We consider the components and of . Here arises at and sinks at . Later arises at and sinks at . Comparing the starting and finishing longitudes for to those for , we have and . So every longitude that is visited by is later visited by the longer . Set ; the earlier path finishes on the longitude at . Let’s say that the later path first reaches the longitude at on the latitude at , for some .\ (i) First suppose that , which is the finishing depth of on the longitude at . It is topologically evident that the path must intersect the path ; this contradicts . (For an explicit discrete proof, consider the minimum and maximum depths used on each of the longitudes visited by both and . Inequalities and equalities among these depths can be used to find a longitude on which and intersect.)\ (ii) Otherwise we have . See Figure 7.1. Since cannot exceed the finishing depth for , we have . Hence . But is -increasing. This forces for some . Set . Since is -gapless we have and , . Starting at the sink of and moving exactly to the  [1.3125in]{}[1.3125in]{}  Figure 7.1. Paths and successively sink at terminals\  and .  southwest, we note that the points forming a staircase are terminals that are serving as sinks for some paths other than . Since and are paths, we have and . The source of is exactly to the southwest of the source of by diagonal steps. Since the source of is weakly to the west of the longitude at , if the source of is on one of the latitudes appearing in the staircase it must be weakly to the west of the point of the staircase on that latitude. This implies that the source of is not on the same side of this staircase as . This is also clear if the source of is on a shallower latitude. Since the path originates on the longitude at and reaches with , it must intersect this staircase. This contradicts . Hence is impossible when .">
</outline>
<outline text="Equivalence and efficiency" _note="We group the valid -tuple inputs for computing row bound sums using the Gessel-Viennot method into equivalence classes, and identify the most efficient -tuple within each class.  When has distinct parts, the row ending values for the unique maximal element of are the entries of . Hence the sets for are distinct in this case. For general , as in Section 12 of , for define when . Proposition 12.3(i) of stated that the sets could be precisely labelled by requiring , and that these -increasing upper tuples are the minimal elements of the equivalence classes in for . Proposition 12.2 said that the results in Sections 4 and 5 of for could be used for by taking . Lemma 5.1(i) there said that are equivalent exactly when or when they have the same critical list. Since the are not valid -tuple Gessel-Viennot inputs, the next statement considers only and . Its two parts follow from Lemma 5.1(i), Proposition 4.2, and Proposition 5.2(ii)(iii) of .   When is restricted to and to , in each case the equivalence classes are the subsets consisting of -tuples that share a flag critical list. More specifically:  \(i) In these subsets are the nonempty intervals in of the form , where\  and is a “-canopy tuple”.  \(ii) In these subsets are the nonempty intervals in of the form , where is a “-floor flag” and .  To describe the equivalence classes of valid -tuple inputs as intervals, we “borrow” the minimum element of Part (i) above and the maximum element of Part (ii) above:   The equivalence classes for the restriction of to are the subsets of consisting of -tuples that share a flag critical list. These subsets are the nonempty intervals in of the form , where and . The equivalence class for a particular has and .  Since it was noted that in Section 2, there is no need here to consider how the equivalence classes for restrict to .  Two upper -tuples are equivalent exactly when they share a critical list. And by Proposition 4.2(iii) of every gapless core -tuple has a flag critical list. Let , and denote its equivalence class in this set by . By Proposition 5.2(ii)(i) of and Fact  (i), the minimum element of its equivalence class in is the gapless -tuple . In Section 2 it was noted that . So , and it must be the minimum element of . Set ; in Section 2 it was noted that has the same flag critical list as is shared by and . Let . Since it has the same critical list as , by the definition of we have . By the definition of we have . Hence is the maximum element of and . Suppose . By Lemma 5.1(i) and Proposition 5.2(i) of , the critical list of is the flag critical list shared by and . So . And implies . Hence .  So to compute for a given we may apply the Gessel-Viennot method to any , where and are respectively the unique gapless -tuple and the unique -ceiling flag that have the same flag critical list as . If one does not care about efficiency and wishes to use an upper flag, then at least the -ceiling flag will be available. In his Theorem 2.7.1 , Stanley noted that flags were valid inputs for the Gessel-Viennot method. Via Proposition  , our Theorem   implies that the Gessel-Viennot method cannot be used to compute a row bound sum for any upper -tuple that is not equivalent to an upper flag. So Corollary   does not provide determinant expressions for any new row bound sum polynomials.  We say attains MAXIMUM EFFICIENCY if has fewer total monomials among its entries than does the Gessel-Viennot determinant for any other that produces . Fix one and set . By Proposition 5.2(ii) of this is the minimum element of that is equivalent to . Knowing leads to:    Let . The gapless -tuple attains maximum efficiency.  To complete the proof, note that . So Proposition   can be applied. Corollary 14.4(i) of rules out an “accidental” polynomial equality between and any for which is not equivalent to . The entry of has monomials. The sentences before the statement complete this proof.  So the are the -tuples in that attain maximum efficiency. If is replaced by , for each the number of terms in the entry of the determinant will be reduced by a factor of ; this is a ratio of falling factorials. We have not been able to obtain this conversion with naive row and column operations. In the example given before Lemma  , the “attempted” incorrect determinant expression for that uses cannot be converted with row and column operations to the correct determinant expression for that uses . So any row and column conversion that is proposed here must refer to the assumption . If , one can also factor out and work with . Going further, when there are only nonempty rows in the shape , the determinant is equal to its upper left minor because the last terminals coincide with the respective sources: There are no paths from the first sources to these terminals, and the only path from one of the last sources to one of these last terminals is the null path at each source.  What does the equivalence class for look like in the path model? Fix and . Since , the graph of above the portion of the -axis can be decomposed into “staircases” whose rightmost indices are the critical indices. When is applied to to produce , these staircases are converted to “plateaus” at the heights of the critical entries for in this carrel. Let . The graph of over this carrel lies between these graph portions for and . To view the portions of these three gapless core -tuples as subsequences of the corresponding overall sequences of terminals, rotate this picture by . The partition is constant on each of its carrels. Lemma   said that the the lattice paths that arrive at these terminals for within a non-intersecting -tuple of paths must pass through “staircases” of terminals specified by this portion of , and that the ending segments of these paths must then drop down in “stilts” to arrive at their terminals. As the lengths of each of these stilts is varied from to for , the weight of the -tuple of paths is unaffected since no horizontal steps are present.  In we defined the parabolic Catalan number to be the number of “-312-avoiding permutations”. There in Theorem 18.1(ii) we noted that this is also the number of gapless -tuples. Given this, the following result is a consequence of the two propositions in this section. It was previewed as Part (xi) of Theorem 18.1 of that paper:   The number of valid upper -tuple inputs to the Gessel-Viennot determinant expression for flagged Schur polynomials on the shape that attain maximum efficiency is .  For a sequence of examples, let . Suppose is a partition whose shape’s set of column lengths that are less than is . Then the number of maximum efficiency inputs here is given by the member of the sequences A220097 of the OEIS that is indexed by .  [99]{}  Gessel, I., Viennot, X. G., Determinants, paths, and plane partitions, preprint (1989), available online at http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.331, 2017.  Postnikov, A., Stanley, R., Chains in the Bruhat order, J. Algebr. Comb. **29**, 133-174 (2009).  Proctor, R., Willis, M., Parabolic Catalan numbers count flagged Schur functions; Convexity of tableau sets for Demazure characters, preprint (2016), arXiv:1612.06323.  Reiner, V., Shimozono, M., Key polynomials and a flagged [L]{}ittlewood-[R]{}ichardson rule, J. Combin. Theory Ser. A **70**, 107-143 (1995).  Sloane, N.J.A., et. al., The On-Line Encyclopedia of Integer Sequences, published electronically at http://oeis.org, 2017.  Stanley, R., Enumerative Combinatorics Volume 1, Cambridge University Press (1997).  Stanley, R., Enumerative Combinatorics Volume 2, Cambridge University Press (1999).">
</outline>
  </body>
</opml>