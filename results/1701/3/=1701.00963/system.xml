<?xml version="1.0" encoding="UTF-8"?>
<opml version="2.0">
  <head>
    <title></title>
    <abstract> </abstract>
  </head>
  <body>
<outline text="The RADIUS System Design" _note="In this section, we give an overview of the system design and the architecture of RADIUS, followed by the introduction of its major functional modules. In addition, we motivate the use of Bayesian thresholding in RADIUS to achieve minimal error rate and high robustness in detecting link quality anomalies, based on a comparison with the CDF thresholding and the Chebyshev thresholding techniques.">
  <outline text="RADIUS System Overview" _note="To achieve its goal, RADIUS adopts a hybrid approach. It comprises a set of distributed software modules located at the sensor nodes, which are called DETECTION AGENTS (DAs), to detect anomalous link quality degradation along routing paths. In addition, a central server, called VISUALIZER AND CONTROL CENTER (VCC), is used to monitor the performance of both the network and the RADIUS system. The overall system architecture of RADIUS is shown in Figure  .">
    <outline text="Two phases." _note="Similar to other anomaly detection systems, RADIUS runs in two phases: a training phase and an anomaly detection phase. During the TRAINING PHASE, the user first observes if the performance of the network, e.g., packet delivery rate, is above the user requirement. In this case, each DA measures and collects the RSSI readings of the received packets to construct a “normal profile” for each monitored link, based on which a set of thresholds are generated. In the following ANOMALY DETECTION PHASE, each DA compares the runtime RSSI readings with the generated thresholds to detect if there is an anomalous link quality degradation.">
    </outline>
    <outline text="System modules." _note="Choosing an appropriate anomaly detection technique is the key to achieve high detection performance, especially when using the highly varying RSSI values to distinguish the good links (with low packet losses) from weak links (with high packet losses) as accurately as possible. To tackle this problem, RADIUS employs a thresholding technique based on the Bayes decision theory. Through the process of deciding a Bayes threshold, the detection error rate can be minimized, as to be discussed in Section  . In a (close to) Gaussian channel, the computation of the Bayes threshold for a desired error only relies on a user-defined parameter (i.e. the A PRIORI probability in the Bayes formula) and two statistical measures (i.e. the [MEAN]{} and the [STANDARD DEVIATION]{}) of the measured RSSI values.  During the training phase, the `Bayesian Thresholding Module` in each DA constructs the RSSI profiles (mean and standard deviation) of good links, and at the end of this phase, the module derives a Bayes threshold for each monitored link. Note that, although the detection error is minimized by employing the Bayesian thresholding technique, the detection error rate may still be high when the mean and standard deviation estimates are not accurate due to insufficient RSSI training samples. To alleviate this problem, RADIUS employs a `Training Set Size Estimation Module` before the threshold computation. In this module, we use a confidence interval to estimate for each link the number of minimal RSSI samples required to produce a good approximation of the true underlying distribution of the RSSI values and hence the mean and standard deviation. This module ensures a “good enough” quality of the first Bayes threshold while keeping an acceptable training set size to avoid an overly long training time.  After the above operations, the anomaly detection phase starts. Recall that RADIUS is aimed to achieve high detection accuracy for links under diverse link conditions and be robust to environment changes. This is realized mainly by the `Basic Detection Module` and the `Training Set Update Module`. For the former, i.e. to achieve consistent high detection accuracy for different links, the system should avoid fine-tuning of the parameters involved in the thresholding, which specifically means no tuning of the A PRIORI probability for each individual link. For this purpose, the `Basic Detection Module` compares the runtime RSSI measurements after smoothing with the Bayes threshold to decide about whether there is an anomalous link quality degradation or not. Later in Section  , we show that a near-optimal detection accuracy is possible for all links across the network by even a coarse choice of the A PRIORI probability setting. In addition, to cope with dynamic environment changes, the `Training Set Update Module` is introduced, which updates the RSSI training set continuously during the detection phase in a memory-efficient way.  To further explore the potential of the A PRIORI probability parameter in achieving or maintaining the high detection accuracy, a feedback-based A PRIORI probability adaptation technique is introduced in RADIUS during the anomaly detection phase through the `A Priori Probability Refinement Module`. If the module in the VCC observes that the error rate of RADIUS for a link increases above a certain threshold, it then informs the SETTER at the DA to tune the setting of the A PRIORI probability.  In summary, the DA on each sensor node monitors the link quality of the links used by the higher-layer network protocols and fire alarms to inform the VCC and the network administrator about detected anomalous link quality degradations. In the training phase, when the network performance satisfies the user requirements, each DA generates locally the best RSSI threshold using Bayesian thresholding (Section  ) for each monitored link after collecting enough samples as determined by the minimal training set size estimation (Section  ). In the detection phase, using the generated thresholds, each DA performs local detection including data smoothing (Section  ) and adaptively adjusts the threshold either with local information updating the training set (Section  ) or with the refinement of the A PRIORI probability by the feedback from the VCC (Section  ) to achieve high accuracy and robustness.">
    </outline>
    <outline text="Remarks." _note="In RADIUS, we have focused on using the RSSI link attribute to detect anomalous link quality degradation. However, its approach is not strictly limited to using RSSI, which may be extended to use other communication attributes as potential indicators of (possibly other types of) network performance anomalies. For instance, PACKET CRC ERROR RATE could be observed for identifying packet collisions, PACKET OVERFLOW RATE for indicating queuing losses, and PACKET INTER-ARRIVAL TIME for determining node crashes.">
    </outline>
  </outline>
  <outline text="Motivation of Bayesian Thresholding" _note="Before describing the details of the Bayesian thresholding technique, we first motivate and illustrate its need. Its ability to deal with the challenge of achieving minimized detection error in a noisy channel is then evaluated in comparison with the CDF-based (or Percentile-based) and Chebyshev inequality-based thresholding techniques.">
    <outline text="Achieving Minimal Detection Error" _note="Due to its stochastic nature, the quality of a WSN link can vary randomly. To illustrate this, Figure   presents two RSSI traces collected from a real WSN link. The upper one is when the link operated in a normal state with a packet delivery ratio (PDR) higher than 99% (i.e. good link), while the lower one is when the link operated in an abnormal state with PDR below 52% (i.e. weak link). The figure also shows that the two clusters of RSSI values, although mostly centred around their respective means, partially overlap with each other and no threshold can clearly discriminate them. This is due to the stochastic nature and the well-known temporal properties of low-power wireless links .  An implication of Figure   is that no single RSSI threshold can, based on an RSSI value, lead to a definite conclusion without error if the link is in the good or weak state. Our objective is to find a threshold that minimizes the misidentification error. As shown in the figure, finding such a threshold involves a tradeoff decision to balance between reducing the chance that a good link is misidentified as a weak link and reducing the chance that a weak link is falsely viewed as a good link. The former is called false positive rate (FPR) and the latter called false negative rate (FNR).  Mathematically, such a decision problem of finding the best threshold minimizing the error rate has been comprehensively studied under the Bayesian decision theory. In addition, if the monitored attribute is a Gaussian random variable (e.g., RSSI in a Gaussian channel), the complexity of Bayesian thresholding decreases significantly, falling within the limited capability of sensor nodes. This motivates our adoption of Bayesian thresholding in RADIUS.  ">
    </outline>
    <outline text="Comparison among Thresholding Techniques" _note="To illustrate the high accuracy and robustness achieved by a Bayesian thresholding based detection system, we compare the detection performance of Bayesian thresholding with that of two aforementioned popular statistical detection techniques in WSNs: CDF-based and Chebyshev-inequality based thresholding techniques, both of which have similar complexity as the Bayesian thresholding technique.  In a CDF-based (or Percentile-based) detection scheme, the threshold is typically defined as the X-TH percentile of the underlying data distribution of the monitored attribute. For a Gaussian channel, the resulting threshold depends on the mean and standard deviation of the collected RSSI samples as well as on a parameter setting of the PERCENTILE defined by the user. The other thresholding technique often used in the literature of WSNs is the Chebyshev-inequality based technique. In this case, the threshold is defined as follows: where, in addition to the mean () and standard deviation () of the monitored attribute , is a user-defined parameter for the desired false positive rate. Similarly, the Bayes threshold for Gaussian random RSSI depends on the same statistical measures (mean and standard deviation) as the CDF and Chebyshev methods and hence incurs a similarly low computation and memory overhead. The main difference is the parameter involved in the computation of the Bayes threshold: the A PRIORI probability of a link being in a good state (, as to be discussed in Section  ).  For this comparison, we evaluate the system performance in terms of accuracy and robustness, with a focus on how the performance is influenced by the user-defined parameters, namely the X-TH PERCENTILE for CDF thresholding, for Chebyshev thresholding and for Bayesian thresholding. The preferable technique is the one whose best detection accuracy performance is least sensitive to its parameter choice. Ideally, such a technique does not require fine-tuning of its parameter to achieve consistently optimal accuracy.  We apply these three techniques individually to the same data traces collected from 5 different links in a network. The links are selected in such a way that diverse link conditions (e.g., line-of-sight, non-line-of-sight, no human movements or frequent movement etc.) are captured. We record the false positive rate (FPR) and false negative rate (FNR) for each technique. A detection decision is considered as false positive (false negative) when the technique declares that an RSSI anomaly is detected (not detected) while the packet delivery rate over the link is above (under) a minimum (e.g., 80%). The values of the above parameters of each method are varied in the same wide range of  . The resultant overall detection error rate (sum of FPR and FNR) for the three methods are presented in Figure  .  From Figure  , we can clearly see that the system performance with the Bayes threshold is consistently ROBUST for different links and is INSENSITIVE to the value of unless is approaching the extreme, i.e., 1. In contrast, the system performance of both Percentile-based and Chebyshev-based approaches dramatically varies with changing parameter values. Furthermore, the optimal for Chebyshev threshold with minimal detection error varies significantly from link to link. Instead, Bayesian thresholding with a global coarse setting of (e.g., any value from 0.1 to 0.9) for the analyzed 5 links provides close to the minimal detection error achieved by the Chebyshev thresholds. Finally, the accuracy with the Percentile threshold is in general worse than that with the Bayes threshold for every link with any parameter setting.  An implication is that while CDF thresholding tends to provide tight RSSI bounds of good links for achieving a low FNR, it can easily cause a significantly high FPR in case of high randomness and temporal variations, making the technique difficult to achieve a low error rate. In addition, while Chebyshev thresholding can reach high detection accuracy, its performance highly depends on the choice of . Bayesian thresholding, on the other hand, is designed to minimize the detection error while at the same time it can use a single setting of the threshold parameter for the entire network, thus avoiding parameter tuning for every individual link. Thanks to such features, we employ Bayesian thresholding as the core detection technique in RADIUS. Details of Bayesian thresholding and the supporting techniques needed to use it are described in the following section.">
    </outline>
  </outline>
</outline>
  </body>
</opml>