knitr::opts_chunk$set(echo = TRUE)
cs_abt_composition <- read.delim("cs_abt_composition.txt", header=FALSE, row.names=1, comment.char="#", stringsAsFactors=FALSE)
cs_ft_composition <- read.delim("cs_ft_composition.txt", header=FALSE, row.names=1, stringsAsFactors=FALSE)
for (i in 1:length(cs_abt_composition)) {
cs_abt_composition[i,1] <- strsplit(cs_abt_composition[i,1],"abstract/")[[1]][2]
}
for (i in 1:length(cs_ft_composition)) {
cs_ft_composition[i,1] <- strsplit(cs_ft_composition[i,1],"abstract/")[[1]][2]
}
View(cs_abt_composition)
cs_cate <- read.table(text = gsub(",", " ", readLines("Computer_Science.txt")))
library(readr)
cs_cate <- read_table2("Computer_Science.txt",
col_names = FALSE)
View(cs_cate)
class(cs_cat)
class(cs_cate)
typeof(cs_cate)
cs_cate[1]
cs_cate[2]
cs_cate$v1
cs_cate$V1
cs_cate$X1
typeof(cs_cate$X1)
class(cs_cate)
typeof(cs_cate)
typeof(cs_abt_composition)
typeof(cs_ft_composition)
cs_cate[2]
for (i in 1:length(cs_cate[2])) {}
cs_cate[2][1]
cs_cate[2,1]
cs_cate[2,2]
cs_cate[2,2,1]
cs_cate[1]
cs_cate[2]
cs_cate[2][1]
cs_cate[2][3]
cs_cate[2][2]
typeof(cs_cate[2])
typeof(cs_cate[2][2])
typeof(cs_cate[2][1])
cs_cate[[2]]
cs_cate[[2]][1]
cs_cate[[2]][2]
cs_cate[[2]][3]
x <- list(1, "a", TRUE, 1+4i)
x[1]
x[[1]]
for (i in 1:length(cs_cate[[2]])) {
cates <- strsplit(cs_cate[[2]][i], ',')
}
View(cates)
for (i in 1:length(cs_cate[[2]])) {
cates <- strsplit(cs_cate[[2]][i], ',')[[1]]
}
for (i in 1:length(cs_cate[[2]])) {
cates <- strsplit(cs_cate[[2]][i], ',')[[1]]
}
for (i in 1:length(cs_cate[[2]])) {
cates <- strsplit(cs_cate[[2]][i], ',')
}
View(cates)
for (i in 1:length(cs_cate[[2]])) {
cates[i] <- strsplit(cs_cate[[2]][i], ',')
}
View(cates)
for (i in 1:length(cates)) {}
cates[[1]][1]
cates[[1]][1] == "cs.*"
cates[[1]][2]
cs_cates[[2]][1]
cs_cate[[2]][1]
cs_cate[[2]]
typeof(cs_cate[[2]])
for (i in 1:length(cs_cate[[2]])) {
cs_cate[[2]][i] <- cates[[i]]
}
View(cs_cate)
View(cs_cate)
cs_cate[[2]]
cs_cate[[2]][2]
cs_cate[[2]][1]
library(ggplot2)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE, conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
abstract <- read.csv('cs_abstract_kld.txt', header=T)
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/MYfig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,7)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
View(abstract2)
View(abstract)
type(abstract2)
typeof(abstract2)
View(abstract2)
?write.csv2
write.csv2(abstract2, 'abstract_result_stats.txt')
write.csv2(abstract2, 'abstract_result_stats.txt', row.names = FALSE)
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/MYfig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/MYfig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
library(ggplot2)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE, conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/MYfig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/redo_fig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/redo_fig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/redo_fig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/redo_fig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
View(abstract2)
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/redo_fig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/MYfig1.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
View(abstract)
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
write.csv2(abstract2, file='myfig1_result_stats.txt')
write.csv2(abstract2, file='myfig1_result_stats.txt')
write.csv2(abstract2, file='myfig1_result_stats.txt', row.names=FALSE, col.names =TRUE)
write.table(abstract2, file='myfig1_result_stats.txt', row.names=FALSE, col.names=TRUE)
abstract <- read.csv('abstract_question.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
library(ggplot2)
b <- ggplot(data=abstract, aes(x=pid, y=kld))
b
b + geom_bar()
b + geom_histogram(binwidth = 5)
abstract[abstract$category=='Machine Learning']
abstract$category=='Machine Learning'
abstract[abstract$category=='Machine Learning',]
ml <- abstract[abstract$category=='Machine Learning',]
b <- ggplot(data=ml, aes(x=pid)) + geom_density()
b
b <- ggplot(data=ml, aes(x=pid)) + geom_histogram()
b
b <- ggplot(data=ml, aes(x=pid)) + geom_density()
b
b <- ggplot(data=ml, aes(x=pid), y=kld) + geom_density()
b
ggplot(mpg, aes(displ, hwy)) +
geom_point()
displ
?displ
displ
ml
View(ml)
mpg
typeof(mpg)
typeof(abstract)
typeof(dpl)
typeof(displ)
typeof(mpg.displ)
typeof(mpg$displ)
typepof(mpg$hwy)
typeof(mpg$hwy)
typepof(abstract)
typeof(abstract)
typeof(abstract$pid)
typeof(abstract$kld)
ggplot(ml, aes(pid, kld)) + geom_density(kernal='Gaussian')
ggplot(ml, aes(kld)) + geom_density(kernel='gaussian')
ggplot(ml, aes(kld)) + geom_density()
b <- ggplot(ml, aes(kld)) + geom_density()
b
b <- ggplot(abstract, aes(kld)) + geom_density()
b
b <- ggplot(abstract, aes(kld)) + geom_density()
b
abstract
ggplot(abstract, aes(kld)) + geom_density()
ggplot(abstract[abstract$category=='Information Theory', :], aes(kld)) + geom_density()
ggplot(abstract[abstract$category=='Information Theory', ], aes(kld)) + geom_density()
ggplot(abstract[abstract$category=='Information Theory', ], aes(kld)) + geom_density(kernel='gaussian')
ggplot(abstract) + geom_density(aes(y=kld))
ggplot(abstract) + geom_density(aes(kld))
ggplot(abstract) + geom_density(aes(kld)) + geom_point()
ggplot(abstract) + geom_density(aes(kld)) + coord_flip()
ggplot(abstract) + geom_density(aes(kld))
ggplot(abstract) + geom_density(aes(kld)) + theme_bw()
ggplot() + geom_density(data=abstract, aes(kld))
ggplot() + geom_density(data=abstract, aes(kld))
ggplot()
+ geom_density(data=abstract, aes(kld, col=category))
ggplot() + geom_density(data=abstract, aes(kld, col=category))
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
ggplot() + geom_density(data=abstract, aes(kld, col=category))
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
ggplot() + geom_density(data=abstract, aes(kld, col=category))
########## REPRODUCE OLD FIGURE 1
abstract <- read.csv('../../data/old_cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
ggplot() + geom_density(data=abstract, aes(kld, col=category))
abstract <- read.csv('../../data/cs_abstract_kld.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
ggplot() + geom_density(data=abstract, aes(kld, col=category))
View(ml)
View(b)
View(b)
library(ggplot2)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE, conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
abstract <- read.csv('../../data/cs_abstract_kld_50tp.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
abstract <- read.csv('../../data/cs_abstract_kld_50tp.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld))
+ geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld))  /
+ geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() /
+ ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld))/
+ geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip()/
+ ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
# ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
# ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(2,3),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
# ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(4,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3,6),breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
abstract <- read.csv('../../data/cs_abstract_kld_50tp.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3,6)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3,5.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_50tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3.5,5.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
abstract <- read.csv('../../data/cs_abstract_kld_200tp.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
pdf("../../results/100kdata_200tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(3.5,5.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_200tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(5.5,6.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_200tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(5.5,7.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_200tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(5.75,7.25)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
pdf("../../results/100kdata_200tp.pdf", h=7, w=6)
ggplot(abstract2, aes(x=reorder(category, kld, FUN=mean), y=kld)) + geom_errorbar(aes(ymin=kld-ci, ymax=kld+ci)) + geom_point() + coord_flip() + ylab('KL divergence (bits)') + xlab('') + scale_y_continuous(limits=c(5.5,7.5)) + theme_bw()# ,breaks=c(2.0,2.2,2.4,2.6,2.8,3.0)) + theme_bw()
dev.off()
View(abstract)
abstract <- read.csv('../../data/cs_abstract_kld_100tp.txt', header=T)
abstract2 <- summarySE(abstract, measurevar = 'kld', groupvars = c('category'))
ml_pids <- abstract$pid[abstract$category=='Machine Learning']
ml_pids
abstract$category[abstract$pid in ml_pids]
abstract$category[abstract$pid %in% ml_pids]
ml_cates <- abstract$category[abstract$pid %in% ml_pids]
ggplot(data=ml_cates,aes(x=ml_cates, y=)
)
?(frequency)
?frequency
ggplot(data=ml_cates,aes(fl))+geom_bar()
ggplot(data=abstract,aes(fl))+geom_bar()
ggplot(data=abstract,aes(ml_cates))+geom_bar()
ggplot(data=abstract,aes(x=ml_cates))+geom_bar()
View(abstract2)
summary.factor(ml_cates)
mlcatesum<- summary.factor(ml_cates)
mlcatesum
typeof(mlcatesum)
typeof(mlcatesum)
?summary
typeof(abstract2)
list(mlcatesum)
mlcatesum<- list(mlcatesum)
View(mlcatesum)
mlcatesum<- summary.factor(ml_cates)
View(abstract2)
View(abstract2)
View(b)
View(ml)
abstract$category[abstract$pid %in% ml_pids]
abstract[abstract$pid %in% ml_pids]
ml <- subset(abstract, pid %in% ml_pids)
View(abstract)
View(ml)
ggplot(data=ml, aes(x=category)) + geom_bar()
ggplot(data=ml, aes(x=category)) + geom_bar()
ggplot(data=ml, aes(x=ml$category)) + geom_bar()
ggplot(data=ml, aes(x=category, y=count(category))) + geom_bar()
ggplot(data=ml, aes(x=category, y=stat_count(category))) + geom_bar()
ggplot(data=ml, aes(x=category)) + geom_bar(stats="identity")
ggplot(data=ml, aes(x=category)) + geom_bar(stat="identity")
ggplot(data=ml, aes(x=category)) + geom_bar(stat="bin")
ggplot(data=ml, aes(x=category)) + geom_bar(stat="count")
ggplot(data=ml, aes(x=category)) + geom_bar(stat="count")
ggplot() + geom_bar(data=ml, aes(x=category), stat='count')
ggplot() + geom_bar(data=ml, aes(category), stat='count')
b <- ggplot() + geom_bar(data=ml, aes(category), stat='count')
b
mpg
ml
mpg
View(ml)
abstract2
ml
?summarySE
mpg
mpg$fl
View(mpg)
ggplot(mpg, aes(fl)) + geom_bar()
b<- ggplot(mpg, aes(fl))
b+geom_bar()
