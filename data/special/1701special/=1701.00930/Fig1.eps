%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: revised_paper_schematic.pdf
%%Creator: Adobe Acrobat 11.0.18
%%For: Shilpi Gupta
%%CreationDate: 1/4/2017, 1:25:16 PM
%%BoundingBox: 0 0 1600 690
%%HiResBoundingBox: 0 0 1600 690
%%CropBox: 0 0 1600 690
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 644 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="Adobe PDF library 5.00"
   xmp:CreateDate="2017-01-04T00:32:30+06:00"
   xmp:ModifyDate="2017-01-04T00:32:31+05:30"
   xmp:CreatorTool="Adobe Illustrator 10.0"
   xmp:MetadataDate="2017-01-04T00:32:31+05:30"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -690 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 690 li
1600 690 li
1600 0 li
cp
clp
gsave
0 690 mo
1600 690 li
1600 0 li
0 0 li
cp
clp
set_def_flat
1171.52 657.016 mo
1171.52 673.447 1167.1 686.771 1161.66 686.771 cv
853.562 686.771 li
848.11 686.771 843.694 673.447 843.694 657.016 cv
843.694 120.069 li
843.694 103.637 848.11 94.3174 853.562 94.3174 cv
1161.66 94.3174 li
1167.1 94.3174 1171.52 103.637 1171.52 120.069 cv
1171.52 657.016 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[.3651 0 0 -1.10089 1232.97 713.008 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [-617.255 292.909 0 -617.255 292.909 370.111 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!?b8?!?b5>!?b2=!?Y);!?Y&:!?Oo7!?Ol6!?Fc4!?F]2!?=T0!?=Q/!?4H-!?4E,!?+9)!?+6(!?"*%
!?"'$!>ms"!>mp!!>dcs!>[Zq!>[Wp!>RKm!>RHl!>I?j!>@3g!>@-e!>7$c!>-m`!"g^]!"^RZ!"UIX
!"UCV!"L:T!"C1R!"C+P!":"N!"9tM!"0hJ!"0eI!"'\G!!sPD!!sMC!!sJB!!j>?!!j;>!!a/;!!a,:
!!Wu7!!Wr6!!Ni4!!Nf3!!EZ0!!EW/!!<N-!!<K,!!3?)!!3<(!!*3&!!*0%!!!'#!!!$"z!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.05055 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.3651 0 0 -1.10089 1232.97 713.008 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!!**$!<E3%!WiE)!WiE)!s8W-!s8W-"9\i1"9\i1"U,&5"U,&6"pP89"pP8:#6tJ=#6tJ>#R
C\A#RC\A#RC_C#mgqG$47+I$47.K$O[=M$O[@O$k*OQ$k3XT%1WjX%LrsY%M''\%hK9`&.fBa&J5Te&e
Yfi&eYfi',)#m'GM5q'GM5q'bqGu'bqH!()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X>2)B'M4)B'P6)]
K_8)]Kb:*#oq<*$$%?*??.@*?H7C*Zc@D*ZlIG+!2RH+!2RH~>
<~zzzzz!!**$!<N<(!WrN,!sA`0"9er4"pP;;#RC\A#mgnE$47+I$O[@O%1NaU%LrsZ%hB0^&.oKe&eYfj
',2,q'bqH!()Ic((`4,.)&X>2)]Kb:*#ot>*??1B+!2UJ+<VgN+X/*T,:"N[,UF`_,pjrd-R^Ak-n-Sp
.P!##/M/S-0/"t30JG491,:XA1c.$G2)R6K2E!KR3&ilX3B9)\3]fDc4?P_h4Ztql5!D.p5<qM#5s[h(
6UO706psI477B[87Rfm<7n6*@8P2TI8kVfM92&#R9hnGY:/=Y]:Jaka:f1(e~>
0 ]
>>
-617.255 292.909 0 -617.255 292.909 370.111 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
1594.5 656.382 mo
1594.5 672.8 1590.59 686.111 1585.76 686.111 cv
1312.91 686.111 li
1308.08 686.111 1304.17 672.8 1304.17 656.382 cv
1304.17 120.041 li
1304.17 103.625 1308.08 94.3174 1312.91 94.3174 cv
1585.76 94.3174 li
1590.59 94.3174 1594.5 103.625 1594.5 120.041 cv
1594.5 656.382 li
cp
level3{
gsave
clp
[.32339 0 0 -1.0999 1547.18 713.189 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [-302.538 293.64 0 -302.538 293.64 370.039 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!?b8?!?b5>!?b2=!?Y);!?Y&:!?Oo7!?Ol6!?Fc4!?F]2!?=T0!?=Q/!?4H-!?4E,!?+9)!?+6(!?"*%
!?"'$!>ms"!>mp!!>dcs!>[Zq!>[Wp!>RKm!>RHl!>I?j!>@3g!>@-e!>7$c!>-m`!"g^]!"^RZ!"UIX
!"UCV!"L:T!"C1R!"C+P!":"N!"9tM!"0hJ!"0eI!"'\G!!sPD!!sMC!!sJB!!j>?!!j;>!!a/;!!a,:
!!Wu7!!Wr6!!Ni4!!Nf3!!EZ0!!EW/!!<N-!!<K,!!3?)!!3<(!!*3&!!*0%!!!'#!!!$"z!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.05055 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.32339 0 0 -1.0999 1547.18 713.189 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!!**$!<E3%!WiE)!WiE)!s8W-!s8W-"9\i1"9\i1"U,&5"U,&6"pP89"pP8:#6tJ=#6tJ>#R
C\A#RC\A#RC_C#mgqG$47+I$47.K$O[=M$O[@O$k*OQ$k3XT%1WjX%LrsY%M''\%hK9`&.fBa&J5Te&e
Yfi&eYfi',)#m'GM5q'GM5q'bqGu'bqH!()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X>2)B'M4)B'P6)]
K_8)]Kb:*#oq<*$$%?*??.@*?H7C*Zc@D*ZlIG+!2RH+!2RH~>
<~zzzzz!!**$!<N<(!WrN,!sA`0"9er4"pP;;#RC\A#mgnE$47+I$O[@O%1NaU%LrsZ%hB0^&.oKe&eYfj
',2,q'bqH!()Ic((`4,.)&X>2)]Kb:*#ot>*??1B+!2UJ+<VgN+X/*T,:"N[,UF`_,pjrd-R^Ak-n-Sp
.P!##/M/S-0/"t30JG491,:XA1c.$G2)R6K2E!KR3&ilX3B9)\3]fDc4?P_h4Ztql5!D.p5<qM#5s[h(
6UO706psI477B[87Rfm<7n6*@8P2TI8kVfM92&#R9hnGY:/=Y]:Jaka:f1(e~>
0 ]
>>
-302.538 293.64 0 -302.538 293.64 370.039 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
724.071 657.234 mo
724.071 673.672 714.416 687 702.51 687 cv
29.3223 687 li
17.4141 687 7.76123 673.672 7.76123 657.234 cv
7.76123 120.079 li
7.76123 103.641 17.4141 94.3174 29.3223 94.3174 cv
702.51 94.3174 li
714.416 94.3174 724.071 103.641 724.071 120.079 cv
724.071 657.234 li
cp
level3{
gsave
clp
[.7979 0 0 -1.10129 486.088 713.246 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [-150.61 292.915 0 -150.61 292.915 370.062 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!?b8?!?b5>!?b2=!?Y);!?Y&:!?Oo7!?Ol6!?Fc4!?F]2!?=T0!?=Q/!?4H-!?4E,!?+9)!?+6(!?"*%
!?"'$!>ms"!>mp!!>dcs!>[Zq!>[Wp!>RKm!>RHl!>I?j!>@3g!>@-e!>7$c!>-m`!"g^]!"^RZ!"UIX
!"UCV!"L:T!"C1R!"C+P!":"N!"9tM!"0hJ!"0eI!"'\G!!sPD!!sMC!!sJB!!j>?!!j;>!!a/;!!a,:
!!Wu7!!Wr6!!Ni4!!Nf3!!EZ0!!EW/!!<N-!!<K,!!3?)!!3<(!!*3&!!*0%!!!'#!!!$"z!!!!!~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.05055 ]
/Encode [1 0 1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[.7979 0 0 -1.10129 486.088 713.246 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~zzzzzzzz!!**$!<E3%!WiE)!WiE)!s8W-!s8W-"9\i1"9\i1"U,&5"U,&6"pP89"pP8:#6tJ=#6tJ>#R
C\A#RC\A#RC_C#mgqG$47+I$47.K$O[=M$O[@O$k*OQ$k3XT%1WjX%LrsY%M''\%hK9`&.fBa&J5Te&e
Yfi&eYfi',)#m'GM5q'GM5q'bqGu'bqH!()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X>2)B'M4)B'P6)]
K_8)]Kb:*#oq<*$$%?*??.@*?H7C*Zc@D*ZlIG+!2RH+!2RH~>
<~zzzzz!!**$!<N<(!WrN,!sA`0"9er4"pP;;#RC\A#mgnE$47+I$O[@O%1NaU%LrsZ%hB0^&.oKe&eYfj
',2,q'bqH!()Ic((`4,.)&X>2)]Kb:*#ot>*??1B+!2UJ+<VgN+X/*T,:"N[,UF`_,pjrd-R^Ak-n-Sp
.P!##/M/S-0/"t30JG491,:XA1c.$G2)R6K2E!KR3&ilX3B9)\3]fDc4?P_h4Ztql5!D.p5<qM#5s[h(
6UO706psI477B[87Rfm<7n6*@8P2TI8kVfM92&#R9hnGY:/=Y]:Jaka:f1(e~>
0 ]
>>
-150.61 292.915 0 -150.61 292.915 370.062 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
4.504 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
24.2891 333.545 mo
200.002 333.545 li
.75021 .679683 .670222 .90164 cmyk
@
24.2891 246.016 mo
200.002 246.016 li
@
24.2891 641.304 mo
200.002 641.304 li
@
498.383 333.545 mo
600.184 333.545 li
@
498.383 275.875 mo
600.184 275.875 li
@
2.252 lw
214.077 224.434 mo
214.077 270.037 li
@
248.173 269.86 mo
270.562 247.47 li
247.619 224.528 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3214325d84000000cc000000606376
7420adbfdf8e0000012c0000066e6670676d38a5162b0000079c00000bb0
676c7966598d46320000d06000003c46686561649cb5e4930000134c0000
003668686561123319560000138400000024686d7478b40da312000013a8
000042346c6f636103d51c42000055dc000042386d617870168309af0000
9814000000206e616d6535d34cc20000983400002bfa70726570a1b2e8ea
0000c43000000c2f67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002effc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200015
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
0471048304f9008c00910096009b00a000a500aa00af00b400b90000405b
8574737271706f6e6d6c6b6a6968676665625d58575655544f4e41403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8022323701020b802234520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c4b5258b00425b0042549b00425b00425496120b0005458212043b00055
58b00325b00325b8ffc038b8ffc038591bb04054582043b0005458b00225
b8ffc038591b2043b0005458b00325b00325b8ffc038b8ffc0381bb00325
b8ffc03859595959212121212d2c462346608a8a462320468a608a61b8ff
8062232010238ab902c202c28a70456020b0005058b00161b8ffba8b1bb0
468c59b0106068013a2d2c2320b000508a8a64b10003255458b0401bb101
03255458b037438b59b04f2b5923b0622b2321235865592d2cb13a000c21
5460432d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b202800243604259b12801885158b94000080063b81000885458ba000201
00000243604259595959595959b10002435458400a37403a403b403e023f
021bb10102435458b237403aba0100003b0100b33e013f011bb180024352
58b237403ab80180b13b401bb901000002435258b237403aba0180003b01
401bb901800002435258b237403ab80200b13b401bb237403aba0100003b
0100595959b9400000808855b94000020063b8040088555a58b33e003f01
1bb33e003f0159595942424242422d2cb0024354584b53234b515a58381b
2121591b21212121592d2cb0572b580c028a4b53b004264b515a580a381b
0a2121591b21212121592d2c20b0024354b00123b05f237821b1000243b0
56237921b0024323b020205c58212121b100471c598a8a208a208a23b810
00635658b81000635658212121b1012c1c591b2159b08062205c58212121
b1001b1c5923b08062205c58212121b1000c1c598ab00161b8ffb31c2321
2d2c20b0024354b00123b07b237821b1000243b072237921b10002438ab0
20205c58212121b0631c598a8a208a208a23b81000635658b81000635658
b00426b0015bb00426b00426b004261b21212121b13600231c591b2159b0
042623b08062205c588a5c8a5a23212321b01d1c598ab08062205c582121
2321b00e1c59b00426b00161b8ff981c23212d2c012d2cb0022563b02060
66b00225b82000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b03543525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b03543525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12501885058b940
00020063b8040088545cb0124b525b1bb001592d000100000006e666e2e3
45e85f0f3cf5081b080000000000a2e3272a00000000d19de3fdfaaffd67
1000085100000009000100010000000000010000073efe4e00431000faaf
fa7a100000010000000000000000000000000000108d0600010000000000
0239000002390000023900b002d7005e0473001504730049071d00770556
00580187005a02aa007c02aa007c031d004004ac0072023900aa02aa0041
023900ba0239000004730055047300df0473003c047300560473001a0473
00550473004d047300610473005304730055023900b9023900aa04ac0070
04ac007204ac00700473005a081f006f0556fffd0556009605c7006605c7
009e055600a204e300a80639006d05c700a4023900bf0400003705560096
0473009606aa009805c7009c063900630556009e0639005805c700a10556
005c04e3003005c700a105560009078d0019055600090556000604e30029
0239008b023900000239002703c100360473ffe102aa00590473004a0473
008604000050047300460473004b02390013047300420473008701c70088
01c7ffa20400008801c7008306aa00870473008704730044047300870473
004802aa00850400003f02390024047300830400001a05c700060400000f
040000210400002802ac0039021400bc02ac002f04ac00570556fffd0556
fffd05c70068055600a205c7009c0639006305c700a10473004a0473004a
0473004a0473004a0473004a0473004a040000500473004b0473004b0473
004b0473004b023900bd023900230239ffe5023900090473008704730044
047300440473004404730044047300440473008304730083047300830473
008304730049033300800473006b0473001b0473005102cd006d044c0001
04e3009905e5000305e50003080000e102aa00de02aa003d0464004e0800
00010639005305b4009a0464004e0464004d0464004d0473fffd049c00a0
03f4003805b4007a069600a1046400000231000002f6002f02ec002d0625
007f071d004404e3008104e3009e02aa00e804ac0072046400540473002e
0464003304e5001a047300860473008c080000ef0556fffd0556fffd0639
006308000081078d00520473fffc0800000002aa005302aa004701c70080
01c7006c0464004e03f4002f04000021055600060156fe390473ffe402aa
005c02aa005c040000170400001704730049023900b901c7006c02aa0047
080000250556fffd055600a20556fffd055600a2055600a20239008d0239
ffe0023900040239001506390063063900630639006305c700a105c700a1
05c700a1023900c602aa001902aa000602aa001d02aa002e02aa00e502aa
00a202aa006b02aa003a02aa004b02aa00280473000001c700030556005c
0400003f04e3002904000028021400bc05c7fffd04730049055600060400
00210556009e0473008704ac007204ac00a102aa006b02aa001902aa0021
06ac006b06ac006b06ac0021047300000639006d04730042023900b10556
005c0400003f05c700660400005005c700660400005004730046046bffe1
02aa00ee0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7
fffd055600a20473004b055600a20473004b0473009601c7004204730096
025500880473009602ac008305c7009c0473008705c7009c047300870639
00630473004405c700a102aa008505c700a102aa003c0556005c0400003f
04e300300239002404e300300300002305c700a10473008305c700a10473
008304e300290400002804e3002904000028046800a40639006006620055
04a00048047400480391006204f000440329002e05300048046bffe10400
00b002eb005208c000330800004f040000990800004f040000990800004f
040000980400009807d5016a05c0009e04ab007204d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505e100bf038d008804d5ffd90180008002d500800715
00610296000f04d5009202d6008302d6008304d500b202d600700556fffd
0473004a05c700660400005005c7006604000050055600a20473004b0556
00a20473004b055600a20473004b0639006d047300420639006d04730042
0639006d0473004205c700a40473008705c7001f047300060239ffce0239
ffce0239ffe40239ffe40239fff60239fff50239004b01c7001904000037
01c7ffa20556009604000088040000860473009601c7006a05c7009c0473
008705c900a50473008b0639006304730044063900630473004405c700a1
02aa006a0556005c0400003f04e300300239000c05c700a10473008305c7
00a10473008305c700a10473008305c700a104730083078d001905c70006
055600060400002101c700890556fffd0473004a08000001071d00440639
005304e30081023900b9078d001905c70006078d001905c70006078d0019
05c70006055600060400002101c7008a02aaffe10473001b04cd005a06ac
006b06ac002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea
0557ffff0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7
ff780556fffd055600960558fffe055600a204e3002905c700a4023900bf
055600960558000b06aa009805c7009c0533006d0639006305c700a40556
009e04f2009404e30030055600060556000906af007f05fb006102390004
0556000604a00048039100620473008b01c7006b04600088049a008c0400
0019038700480473008b0473005c01c700890400008604000018049c00a0
0400001a0395005c04730044048d008303db0056046000880433001105b4
007a063f005701c7ffc9046000880473004804600088063f0057055700a2
06eb0032045500a105c000640556005c023900bf02390004040000370875
000d081500a406d5003104a900a10515000a05c000a00556fffd054000a7
05560096045500a1056b0000055600a20763000704d5004e05c000a105c0
00a104a900a10540001206aa009805c700a40639006305c000a00556009e
05c7006604e300300515000a061500520556000905eb009f055500570755
00a1078000a106550000071500a8054000a505c0004a081500a405c7001a
0473004a0495005b0440008802eb008804ab00000473004b055afffb03ab
003204780087047800870380008604ab00180580008c046b008804730044
04550088047300870400005003aa0026040000210695004b0400000f0495
008a042b0045066b008d0695008d0500002805c0008b042b00840415002b
060000890455001f0473004b0473000002eb00890415004b0400003f01c7
00880239000901c7ffa20740001306800083047300000380008604000021
046b008803e900a1034a008808000041089500a00585002d000000000000
000000000000000000000000000000000000000000000000000000000000
0000ffac00000000000001010000ffce0310007d0000ff37023300d20000
030b0000ff04023900b90481006904560032033100190411002d04d10096
01f9009b030f005f04ca009b04b8008c01f9009b0413002803b0005003b4
003c04ca009b04cf005001f9009b02d2003c0498005a043c00190488006e
045f007303b1001903d4000a0466009604130028058e00640524002803f2
009b03f2009b03f2009b01e3005a0356005a0686009b01f9004604130028
0413002803b4ff4903b4ff490448002d058e0064058e0064058e0064058e
006404810069048100690481006904560032033100190411002d04d10096
024b0000034a000004b8008c024b00000413002803b0005003b4003c04cf
005002d2003c0498005a0488006e045f007303d4000a0466009604130028
058e00640524002801f9009b0456003203b00050045f0073049b003c0000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da0043034d0079
01a8ffba0000004600000046000000460000004600000048000000460000
0046000000460435017c0435012e043500b7043500810435012c043500be
043500af043500810435009a043500db04350085028d00c0043500b30600
01000600010002420036060001000435009e04350098043500cb06000100
060001000600010006000100060001000000004606000100060001000600
01000600010006000100060001000600010006000100051bffba06000100
060001000600010005b5003a05b5003a01f4ffba01f4ffba060001000600
010006000100060001000481003604350036043dffba043dffba03e9004a
03e9004a067f0014077600140327ffba041effba067f0014077600140327
ffba041effba051b003204b500240300fff7060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000310000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473004a080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d0011028d00300600
010004ee0015034d007901a8001301d6ffd701a8005601d6001103750032
0375003201a8002e01d60013051b003204b5002401f4ffba01f4ffba01a8
009301d6001305b5003a05b5003a01f4ffba01f4ffba0242fffe0300fff7
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3005f02b3005f02b3
005f02b3005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9
003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
064f0027064f00270224ffba021affba04a7004604a700460224ffba021a
ffba04cf002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba
01a8ffba02b4002302b400230327ffba0327ffba043500450435004501f4
ffba01f4ffba024200360300fff7039affba0327ffba0375003203750032
051b003204b50024051b003204b5002401f4ffba01f4ffba045a003104ce
0041045a002704ce003a045a005304ce004a045a005304ce004a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000031060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0100ffba0800ffba1000ffba06dc0063053f004406d500a1055b00830000
fddc0000fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d
0000fd110000fc670000fd9d0000fbf50000fc720000fed50000fed50000
ff02041b00a006ac006b06ac00190000feb60000fd730000fe080000fca6
0000fe530000fd110000fbc80000faf40000faaf0000fc720000fbaa0000
fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe84
0000fdc20000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000
fd580000fc900000fd150000fc2c0000fc130000fc120000fb960000fb96
01c700880556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b0239006301c7001f023900ba01c7007c
063900630473004406390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406dc0063
053f004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004405c700a10473008305c700a10473008306d500a1055b0083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
00830556000604000021055600060400002105560006040000210556fffd
0473004a0239ffe201c7ffb0063900630473004405c700a10473008305c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
0000fefe0000fefe0000fefe0000fefe0455fffd02eb000c07630007055a
fffb04a900a10380008604a900a10380008605c700a4046b00880473fffd
040000140473fffd04000014055600090400000f05550057042b00450555
00a1047300870605006304730055063900600473004405b5003a01f4ffba
0224ffba021affba04a7004601f4009e01f4001001f4001b01f4001001f4
006b01f4fff90227ffce0000000f0000fff502aa00a402aa00a400000013
00000056000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8
001d01d6fff501a8009301d6001303750032037500320375003203750032
051b003204b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3
005f02b3003802b3003802b3004902b3004903e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e
08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435
ffba0327ffba064f0027064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba064f
0027064f00270224ffba021affba064f0027064f00270224ffba021affba
04a7004604a7004604a7004604a70046093e0032093e00320740ffba0740
ffba067f0014077600140327ffba041effba04cf002d04cf002d0327ffba
0327ffba04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327
ffba0327ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba040d0047
040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d
0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba
043500450435004501f4ffba01f4ffba0435004504350045043500450435
0045043500450435004501f4ffba01f4ffba043500450435004504810036
04350036043dffba043dffba024200360300fff7031a001a031a001a031a
001a03750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba
0375003203750032051b003204b5002401f4ffba01f4ffba051b003204b5
0024067f0045067f0045067f0045067f004501a800280000fe290000fea2
0000fef30000ff1d0000ff120000ff920000fe7e08fc003208ad00320000
ff880000ffaf0000ff3f0000ff640000fe7e0000ff36018d000002f6fffd
0000fe820000ff1004cd00320000ff580000ff580000ff640692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a
039a00360435ffba0327ffba034d007902b400230242003601f4ffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d067f001407760014
01f9009b0000fee002bc000003f2009b045afff504cefff5045a005304ce
004a045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a04350071043500ad045a000f04ce000f0473
001406110014054000a7047300860540000a0473000a05c7005105c70066
0400005005c7fffd067a00140540004a04730046047400480556006e04d5
005304e3ffc40639006d04fe000f070c008701c700830239001f05560096
0400008801c7001504000018072000a405c7ffb80473008b0639006006f2
00630557004406090014047300860556009e0556006b0400004f04f20094
030b00440239002404e300140239002404e3003005fb006105c700a1062e
00100400002104e300290400002804e3002904e30031045c0044045c003f
0473003c0473005503ab003203e5002404730087021400bc034e00bc04ac
0072023900b00aaa009e09c7009e08640046087f009606aa0096039c0083
09c7009c078e009c062b0087047300550556fffd0473004a0000fefe0556
fffd0473004a08000001071d00440639006d0473001a0639006d04730042
05560096040000880639006304730044063900630473004404e30029045c
004c01c7ffa20aaa009e09c7009e086400460639006d04730042084600a4
04f2009e05c7009c047300870556fffd0473004a0556fffd0473004a0556
00a20473004b055600a20473004b0239ff8a0239ff64023900040239fff6
0639006304730044063900630473004405c700a102aaffcc05c700a102aa
006805c700a10473007605c700a1047300830556005c0400003f04e30030
02390024045c0051037e001305c700a40473008705a600a404d6005e0486
005e04e30029040000280556fffd0473004a055600a20473004b06390063
047300440000fefd06390063047300440639006304730044063900630473
004405560006040000210473005704730048047300860473008604000013
0400005004730046047300460473005505e9005503ab004903ab0032050d
0032040f00440239ffb90473004204730042047800500402001904ef0019
0473008b047300870473008701c7001901c7005702d90044029e0000026e
001401c700830493008306aa008406aa008406aa00870473ffa60473008b
046c00870473004406530044063f00570466004402aaffe402aaffe402aa
ffe402aa008502aa008502aa008502aaffe40455008a0455008a0400003f
01c7ffa20214ffb901c7ff7202cb00000239000f0239002404730019048c
0054046000880400001a05c7000604000018042800190400002804540028
045c004c045c007904000024040000500400002404000050063900630440
0088040f004904780050046b0088032e000004000008033b008804730048
040000240400005007b7004607400046080b004605b30024036f002405c0
0024061c0013054a0083050f008303e2001e043800630311006403110064
0146ffce01eb006401eb000001eb000002ea006403d90000029100000187
005a02d7005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca0032
02ca003204ac007004ac007004ac006504ac006502aa012102aa00de02aa
005902aa012102aa001d02aa005902aa00de023900b6023900b602aa00fb
02aa00fb02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb0294
00000142006402b8003202a0000002ca0032031000960310009603100096
031000960310009602aa006202aa006202aa002802aa001d02aa00470457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000fec10000fec60000fdac
0000fed80000ff920000fee90000ff4c0000fea00000fec40000ffce0000
ff660000fea00000fed80000fed80000ff970000ff980000ff990000fff4
0000ff420000ff420000ff440000ff5f0000fe870000ffec0000ffa60000
ff510000ff510000ff510000fec90000ff1c000000000000fee90000ff4c
0000ff930000ff2a0000ff560000ffce0000fe870000febb0000fec40000
fec40000fed80000fed80000feb30000fec90000fdad0000fec80000feb3
0000fec90000fdad0000fe160000fee60000ffa60000fe870000ff440000
feba0000ff230000ff9a0000fdac0000fe88000000000000feb00000ff98
0000fe930000ffa60000fe870000fe1c0000ff660000ff440000feb00000
feb00000feb00000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb50000feb50000ffc30000feae0000fedc0000fec70000fec80000
fedc0000fe1e0000ff420000ff510000feb70000feb002aa00de02aa0059
02aa00fa049a007004600000062e001407aa0000062e0014047b004c063f
005704cf0044063900630473004405c700700400005004e300a8033b0088
04ff0000043c0032060d000a049d0042072000a406aa0084056500630473
008b056400a40400000a0556006b0556006b04e0000504c5001905e5005f
046e004403b600140347002804cf00440495005b0400005001c7ffa20639
00600389004d03890050055600a205c000a10473004b047800870ab4006d
04fe00100639001404e70014079900bf05b500880558000104000006072e
00bf0590008806a10078057b007a086d00bf06f0008804d5006603ab001f
065f0039058200480639006004730044066d0009050c001a066d0009050c
001a08980063072c004406aa002004e6001c0987006d06d000500000fe37
0ab4006d04fe001005c7006604000050040700140000fea60000febc0000
ff980000ff980000fc2b0000fc4c05c000a10478008705400004042b0014
0556009e04730087055d00a40464008804d5004e03ab003204a900040380
000005ef002904490028070900a4052f0088091800a006f600880606003e
042b002305c700660400005004e3003003aa002607670031058700260555
0057042b004506e4000a0554000a06e4000a0554000a023900bf07630007
055afffb055700a1046800860540001204ab001805c700a4046b008805c7
00a4046b008805550057042b004506aa00980580008c02aa002e0556fffd
0473004a0556fffd0473004a08000001071d0044055600a20473004b0605
00630473005507630007055afffb04d5004e03ab003204d5004e045c004c
05c000a10478008705c000a1047800870639006304730044063900600473
004405c0004a0415002b0515000a040000210515000a040000210515000a
0400002105550057042b0045071500a805c0008b0540004a0473004607bf
004a0703004607a6006606860053054d00660413005307c3001207470018
084600a4070700880639006d0478005005f90030055300260000ff430000
ff290000ff6a0000ffac0000ff590000ff560000ff730000fed70000fe5c
0000005e0000ff560000ff56000000500000ff0b0000fe550000ff430000
ff5c0000ff750000ff640000ff560000ff0b0000ff8a0000ff560000ff43
0000ff430000ff640000ff75000000500000fddd0000ff750000ffad0000
fefe0000fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd
0473004a05560096047300860556009604730086055600960473008605c7
00660400005005c7009e0473004605c7009e0473004605c7009e04730046
05c7009e0473004605c7009e04730046055600a20473004b055600a20473
004b055600a20473004b055600a20473004b055600a20473004b04e300a8
023900130639006d0473004205c700a40473008705c700a40473008705c7
00a40473008705c700930473006805c700a4047300870239ffdf01c7ff92
023900200239000605560096040000880556009604000088055600960400
00880473009601c7007e0473009601c7ffb90473009601c7ffa504730096
01c7ffa306aa009806aa008706aa009806aa008706aa009806aa008705c7
009c0473008705c7009c0473008705c7009c0473008705c7009c04730087
063900630473004406390063047300440639006304730044063900630473
00440556009e047300870556009e0473008705c700a102aa008505c700a1
02aa008505c700a102aa005e05c700a102aa00260556005c0400003f0556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
04e300300239002404e300300239002404e300300239ffff04e300300239
000e05c700a10473008305c700a10473008305c700a10473008305c700a1
0473008305c700a104730083055600090400001a055600090400001a078d
001905c70006078d001905c70006055600090400000f055600090400000f
055600060400002104e300290400002804e300290400002804e300290400
0028047300870239000305c70006040000210473004a01c7008904a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
039100620391006203910062039100620391006203910062061e0000061e
0000076c0000076c0000076c0000076c00000473008b0473008b0473008b
0473008b0473008b0473008b0473008b0473008b068f0000068f0000081f
0000081f0000081f0000081f0000081ffff3081ffff301c7008101c70081
01c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301
0000049100000491000004910000049100000491fff30491fff304730044
0473004404730044047300440473004404730044069d0000069d0000082d
0000082d000007c9000007c9000004600088046000880460008804600088
046000880460008804600088046000880682000007ae00000812000007ae
0006063f0057063f0057063f0057063f0057063f0057063f0057063f0057
063f0057065f0000065f000007ef000007ef0000078b0000078b0000078b
ffff078bffff04a0004804a0004803910062039100620473008b0473008b
01c7ffe601c7006804730044047300440460008804600088063f0057063f
005704a0004804a0004804a0004804a0004804a0004804a0004804a00048
04a000480556fffd0556fffd068200130682001306820013068200130682
0056068200560473008b0473008b0473008b0473008b0473008b0473008b
0473008b0473008b068f0000068f0000081f0000081f0000081f0000081f
0000081ffff3081ffff3063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd0556fffd0556fffd0556
fffd02aa00e502aa00fd02aa00e502aa000602aa00060473008b0473008b
0473008b0473008b0473008b068200000682000006f3000006f3000005c7
00a402aa001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca
01c7ff9301c7ff930239001a0239fff5036500000365000002aa001302aa
001302aa000604600088046000880460008804600088048d0083048d0083
0460008804600088055600060556000606e6000007180000061e000002aa
ffea02aaffea02aa0059063f0057063f0057063f0057063f0057063f0057
07650000069d000007270000065f000005fb006102aa00de02aa00e50473
000d05c7006605c7006606aa008705c70024095000a1078d00190556001f
04e30030080000290400003004c100660000ff530000ff530000ff530000
ff5301c7001901c7ffa2042b0005055600110574004602cbffa3057a0087
02f0ffc8057f000a057f000a02aa008402aa008402aa00c902aa00c902aa
00a002aa005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ffa50000
fed80000ff230000ff720000ff720000fee70000ffa50000ff530000ff53
0000ff530556009e0473008703f8001905fb0019071d0044044000190400
0050046900870469001903eb008703ab003201c700880361004104000088
033600100580008c04780087047300440400001304de004404de004404de
000d078d005003a800440473004404730044042b00840455001f0455001f
03aa00260460008804c6004405de004404c600440400001a05c700060400
002803ab0032036b003f04db001f02eb00880400001a04550088042b0084
05b4007a04ab001803a00000054f0000035100320351ffd1039800320348
00320348003203f80032036e0032015600690284002d0366003202d00032
0415003203710032036f003204180032030f003203590032039c00320376
0031036f003204fb000002fa003202fa00320304003204cc003203050064
0305003202f9003202f90032028c0032028c0032030400320142006402b6
006404950064030f00640305003202d50032030500320305003203060064
01c20032030f006403420032049500640292000003200000031500640292
0000030600320385003202bf00000142006401eb0064030f006402920000
0315006402920000030900320385003202bf0000077d00460a6600460383
00460a2f00460541ffba01e9003c045a00110000ff0d0000ff350000fece
0000feb70000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3
005f03e9004a03e9004a039affba0327ffba039affba0327ffba05ad0069
053d002d05fd009604dc005004e0003c05f6009b053f00280650002804ac
00720000000000000000000000000473fffc02aa005302d5ffce01a8ffba
01a8ffba01a8ffba01a8ffba0658001509c5004704000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5000305c7006606aa00980580008c074400830718
0046071800480556fffd05c70066040000140473000a04e300300400004f
0400002804a5001d000001020000ff420000febf0000ff3a0000ff53048d
000a05c7005105c7006605c70051045500a102eb00880000ff430000ffac
0000ffac02d2009600000000021affba0250001e0000ff3a0000ff5b0000
ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff96
01f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba02b3003202b3003202b3005f02b3005f03e9
004a03e9004a0692003e0692003e043fffba043fffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
02b4002302b400230327ffba0327ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba040d0047040d004701a8
ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0473ff93047300460239ffbf06aaffd50473ffb70473
ff9102aaffa402aaffa40400ffff0239ffb90400002804730089030b0064
047400480649002401c7001901c700190473001e0460001e048c000a0473
0086047300460239001305b400420400008801c7fffc06aa00870473008b
0473008702aafffb0400003f0318ffa20400001a0400000f040000280473
004a04730048047300460473004b03ab004903ab00320534005501c70088
0400001301c7ffa204730083045c004c0304006402d5003202c9003302fc
0032028c003201d5003201d5000003040032031100640142001901420064
0142006401420019022a0000014200640142000902330064049300640493
0064030fffc9030f0064030e0064030500320300003202b800320142ffca
01c20032030f001d031a00320306006402d400640292000002de003202de
003202de003202f4003202ea00320000febc0000febc0000ff730000fea9
023900b902fa003202f900320305003202a0000002f900320639006d0556
fffd0473000f05c7006602aa004104a0004804a0004804a0004804a00048
04a0004804a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7
ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb046000880460008804600088
046000880460008804600088046000880460008801c7ffab01c7ffab01c7
ffbb01c7ffbb04600088046000880460008804600088045a005304ce004a
03a000130556001105c700290558000b055600a20473004b0400003301c7
ffa205e600630473004805c7000002aa000f055600060400002104000013
040000500400001301c700830455fffd02eb0001055600090400000f0556
00090400000f04d5005303ab00490540001204ab00180000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b
000a03eb004c040000130473000a01c700150473fff40556001105c700a1
047300190239ff8b05c700a404730087055600960400008804e300290400
00280400003b049e00a403670088053000480000ff530000ffbc0000fefe
0000fefe0000fea40000fea401c7008805c900a505c7009c05c900a50000
fecd0000ff480000fec90000fece0000fec50000fed00000fed10000feee
0000fed60000fedc0000fdd90639005804730048078d001905c70006059f
00a40000feb905dc006304c60009084c001906ba0006023900b903800072
0187005a0187005a0400009904000099023900b0023900b0023900b002aa
0019000000460000003b000000310000005600000044000000560000004a
0000004904e30030047300500473005c0312003f045000480446003d0473
00310450003d047d00620427003f0473005604790054047300550319003b
0473003c047300560473003204730055047e0062042f004b04730053047b
005505c5006a05d3006305f800a6094a00a605f8009c0302003b054100a4
063900600472004601c7008903f80087020a00890473004e0250000e0478
00850473005c0473005c0302003b020a008901c700880471000004890098
04c3005c04e70098046f009804080098052f005c04f0009801ea00980373
00290489009803bc009805c7009804ec00980531005c046d00980531005c
04db0098046d004a0410002904dd0091046800080659001e046f0008046c
0008040e001f0691000006aa005c03bc003805310031046f009804e70014
04c3009004710000047100000471000004710000047100000471000004c3
005c046f0098046f0098046f0098046f009801eafff401ea008e01eaffb6
01eaffda04ec00980531005c0531005c0531005c0531005c0531005c04dd
009104dd009104dd009104dd0091046c0008047100000471000004710000
04c3005c04c3005c04c3005c04c3005c04e7009804e70014046f0098046f
0098046f0098046f0098046f0098052f005c052f005c052f005c052f005c
04f0009804f2002e01eaff9601eaffbd01eaffd401ea003e01ea00870543
0098037300290489009803bc009803bc009803bc009803bc009804ec0098
04ec009804ec009804f500980531005c0531005c0531005c04db009804db
009804db0098046d004a046d004a046d004a046d004a046d004a04100029
0410002904100029040e002904dd009104dd009104dd009104dd009104dd
009104dd00910659001e0659001e0659001e0659001e046c0008046c0008
046c0008040e001f040e001f040e001f0471000006910000053100310471
00000489009803ae009804710000046f0098040e001f04f000980531005c
01ea009804890098045a000205c7009804ec0098042f004c0531005c04e6
0098046d00980425006a04100029046c00080546004c046f00080543004c
0531005204710000046f009804f0009801ea008e0531005c046c00080531
005201eaffda046c0008046f009805af002903ae009804c7005c046d004a
01ea009801eaffda0373002906f4000f06b6009805da0029041600980463
002304e6009804710000048600980489009803ae00980469000f046f0098
06540023041f004604e5009804e50098041600980469000f05c7009804f0
00980531005c04e60098046d009804c3005c0410002904630023050d004c
046f000804dc0098047d004c06280098061e0098057c003c05e700980455
009804c6004606af009804db00120323009802aa002202aa006b02aa0019
02aa002102aa001702aa002202aa002e02aa004902aa002a02aa003302aa
002e02aa003302aa002205c5006a05c5006a05c5006a05c5006a05c5006a
05c5006a05c5006a05c5006a05c5006a05c5006a05c5006a05d3006305d3
006305d3006305d3006305d3006305d3006305d3006305d3006305d30063
05d3006305d3006305f800a605f800a605f800a605f800a605f8009c05f8
009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c
0302003b0302003b0302003b0302003b030200320302003b0302003b0302
003b0302003b0416ffac0302003b0302003b0302003b020a0089020a004e
0269008902a50089020a00070302003b0302003b0302003b0302003b0302
00320302003b0302003b0302003b054100a4047200460472004604720046
04720046047200460472004604720046047200460472004601c7ffa703f8
0087020a0089020a004e0269008902a50089020a00070250000e0250000e
0300000e0250000e0478008504780085047800850478008504a0005702aa
001702aa002202aa004902aa002a04ee001504ed009d04ed009d060b001a
04d5008505e3008502260099022600890226002c0226001e022600630226
00300226001b0226001d0226001d022600290226001e022600260226001d
02260008022600280c9600460e0c00460000ffba0ed200460000ff5b0000
ff910000ffb70000ff9b0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0692003e0692003e043fffba043fffba03e9
004a03e9004a0481003604350036043dffba043dffba01a8ffc301d6ff5f
01a8ffe901d6ff85051b003204b5002401f4ffba01f4ffba051b003204b5
002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba03750032
037500320375003203750032067f0045067f0045067f0045067f00450481
003604350036043dffba043dffba0692003e0692003e043fffba043fffba
0692003e0692003e043fffba043fffba04cf002d04cf002d0327ffba0327
ffba04b4ffe00500ffe00496ffe804e4ffe8075c003205da0032070e0032
051300390bb700000000fe2c0000fffc0000006b000000730000006b051b
003204b5002401f4ffba01f4ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba051b003204b5002401f4ffba01f4
ffba051b003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba
01f4ffba0000fff5049e00a403cd000a04e3003003aa002605c000a104ac
0087055600960473005a0a6600440473007e0556001d07ae001206150018
064e009e05be008707a9000906da001f0556009604000086088c000d0713
0018090e00a406ce008805c700a40455008805a300a2046f008702390013
0239001304740048062200bf032f000e04ba005c0474004905590014049b
000a06aa00980556fffd05dc00a50590004b02aaffe50473004403eb004c
0146ffce029200000556005c04e3002902390069063c00aa0b56ffc2084a
ff120b0c00320ed2004401a8ffba01a8ffba01a8ffba01d6000201a80032
01a8004601a8ffba01a8001a0251003a01a8002901a8004601a8ffba01a8
004801a8ffba01a8002901a8ffba01a8004601a8ffba01a8006e01a8ffba
01f4009e01f4001001f4001b01f4001001f4fff9022e008d01f4006b0199
004602bf003202bf00320473000f02ea001302ea00130427fff70427fff7
051b0032051b0032051b0032051b0032051b0032051b0032051b0032051b
0032048000240480002403e5ffba048000240480002403e5ffba05b5003a
05b5003a01f4ffba01f4ffba0481003604350036043dffba043dffba04a7
ffba04a7ffba04a7ffba04a7ffba064f0027064f00270224ffba021affba
04a7004604a700460224ffba021affba040d0047040d004701a8ffba01a8
ffba02b4002302b400230327ffba0327ffba051b003204b5002401f4ffba
01f4ffba051b003204b5002401f4ffba01f4ffba03b7004a03b7004a0375
003203750032036b0046036b00460000ff1e0000ff480000ff1e0000fee7
0000ff4f0000fef90000ffb50000ff520000ff470000ffb50000ff520000
ff470000ff000000fea60000ff000000ff230000ff240000ff570000ff57
0000ff920000ff920000ff920000ff920000ff2f0000fed70000ff340000
ff31045a005304ce004a0000ffac033100190411002d04d1009605240028
0000ffac0000ff2a028d00ab028d00a00444003c043d003c0444003c043d
003c0444003c043d003c0445003c0444003c043d003c04a70046028d00ab
0327002202300014017a002e0000ff760658001505ea00a505cc00a505ba
004605be004605cc00a505ac009104c800a505ca00a4067400a405ba0046
054500a5043900a5076500a50622009b0590009b04ed003c05a6008a05be
0046059a009b060900a505bb009105aaffec0599008705cc00a505980087
0657003c05e8009b061d00a505cc00a5059600460547005c056d00a5056b
0069042000a506180050057d00380642006406190046023100b601c7006c
015bff79019affa1021f001f01daffb4041c004206a900820468008704a3
004804a90087046d00870467004803ef0087046800870557008704a30048
0468008701c2008706ad008704570048046d008704680087042f0046046d
00870478008e0468008201c2ffa3046dffc403a600060468008702c60010
06a900820423005f04830087046800820468008206a60082046800870471
00420327008706a600820467fff80470004605f3003c05b40087023900b9
029800220802006c0802006c05d0004608d5008208d5008208d0008208d5
00820b1500820473001c08000000000000000000ff4d05b5003a05b5003a
01f4ffba01f4ffba015e009302b3005f02b3005f08c9003e08c9003e06c5
ffba06c5ffba067f0014077600140327ffba041effba0242003a0193003a
03e9004a03e9004a0000ffce0400003705c7ffc0046bffa30aa30000088e
000005550014048500000540001204ab001806a30000064a004c04460013
0606001306060013044b001305f2003f065b008700>
<000000000000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c000000fe000001b6000001b6
00000240000002ce000002ce000002ce000002ce000005320000066c0000
08f6000008f6000008f6000008f6000008f6000008f6000008f6000008f6
000008f6000008f6000008f6000008f6000008f6000008f6000008f60000
08f6000008f6000008f6000008f6000008f6000008f6000008f6000008f6
000008f6000008f6000008f6000008f6000008f6000008f6000008f60000
08f6000008f6000008f6000008f6000008f6000008f6000008f6000008f6
000008f6000008f6000008f6000008f6000008f6000008f6000008f60000
09380000093800000d0000000f700000122a0000149c0000171e000018c4
00001b6e00001d7a00001faa00001faa00001faa00001faa000023820000
25b00000280600002a3c00002c5a00002d9e0000324c000034060000360c
0000360c00003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600003c4600003c4600003c4600003c4600003c4600003c4600003c46
00003c4600003c4600003c4600003c4600003c4600003c4600003c460000
3c4600010000108d02b5003c00ca000700020010004000860000051705ec
000500020000003a02be0000000300000000021a00000000000300000001
000a021a0000000300000002000e029c00000003000000030044027e0000
000300000004000a021a0000000300000005001802c20000000300000006
000e02da00000003000000070064021a0000000300000008003002f60000
000300000009008a0506000000030000000d0d1805900001000000000000
010d12a80001000000000001000513b50001000000000002000713f50001
000000000003002213e60001000000000004000513b50001000000000005
000c14080001000000000006000714140001000000000007003113b50001
000000000008001812af00010000000000090045141b000100000000000d
068c14600003000104030002000c1aec000300010405000200101afc0003
000104060002000c1b0c000300010407000200101b180003000104080002
00101b280003000104090000021e02e80003000104090001000a021a0003
000104090002000e029c00030001040900030044027e0003000104090004
000a021a0003000104090005001802c20003000104090006000e02da0003
00010409000700621b380003000104090008003002f60003000104090009
008a0506000300010409000d0d2a1b9a00030001040a0002000c1aec0003
0001040b0002001028c400030001040c0002000c1aec00030001040e0002
000c28d40003000104100002000e28e40003000104130002001228f20003
000104140002000c1aec000300010415000200101aec0003000104160002
000c1aec0003000104190002000e290400030001041b0002001028d40003
0001041d0002000c1aec00030001041f0002000c1aec0003000104240002
000e291200030001042a0002000e292000030001042d0002000e292e0003
0001080a0002000c1aec0003000108160002000c1aec000300010c0a0002
000c1aec000300010c0c0002000c1aec00a9002000320030003100350020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0020000d000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e0041007200690061006c002000200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e004d006f006e
006f0074007900700065003a0041007200690061006c0020005200650067
0075006c0061007200200028004d006900630072006f0073006f00660074
002900560065007200730069006f006e00200036002e0039003000410072
00690061006c004d005400a9002000320030003100350020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e0020000d
000a000d000a0048006500620072006500770020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200063006f0070007900720069006700680074002000a900200032
0030003000330020002600200032003000300037002c002000520061006c
00700068002000480061006e0063006f0063006b002000260020004a006f
0068006e00200048007500640073006f006e002e00200054006800690073
0020006c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020006900730020006f00700065006e00200073006f0075
00720063006500200073006f00660074007700610072006500200075006e
00640065007200200074006800650020004d004900540020004c00690063
0065006e00730065003b002000730065006500200065006d006200650064
0064006500640020006c006900630065006e007300650020006400650073
006300720069007000740069006f006e00200066006f0072002000640065
007400610069006c0073002e004d006f006e006f00740079007000650020
0054007900700065002000440072006100770069006e00670020004f0066
00660069006300650020002d00200052006f00620069006e0020004e0069
00630068006f006c00610073002c00200050006100740072006900630069
00610020005300610075006e006400650072007300200031003900380032
0059006f00750020006d0061007900200075007300650020007400680069
007300200066006f006e00740020006100730020007000650072006d0069
00740074006500640020006200790020007400680065002000450055004c
004100200066006f00720020007400680065002000700072006f00640075
0063007400200069006e0020007700680069006300680020007400680069
007300200066006f006e007400200069007300200069006e0063006c0075
00640065006400200074006f00200064006900730070006c006100790020
0061006e00640020007000720069006e007400200063006f006e00740065
006e0074002e002000200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e000d000d00540068006500200066006f006c006c006f0077
0069006e00670020006c006900630065006e00730065002c002000620061
0073006500640020006f006e00200074006800650020004d004900540020
006c006900630065006e00730065002000280068007400740070003a002f
002f0065006e002e00770069006b006900700065006400690061002e006f
00720067002f00770069006b0069002f004d00490054005f004c00690063
0065006e007300650029002c0020006100700070006c0069006500730020
0074006f00200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
0072006500770020201c004c00610079006f007500740020004c006f0067
00690063201d0020006100730020006a006f0069006e0074006c00790020
0064006500760065006c006f007000650064002000620079002000520061
006c00700068002000480061006e0063006f0063006b00200061006e0064
0020004a006f0068006e00200048007500640073006f006e002e0020000d
000d005000650072006d0069007300730069006f006e0020006900730020
0068006500720065006200790020006700720061006e007400650064002c
002000660072006500650020006f00660020006300680061007200670065
002c00200074006f00200061006e007900200070006500720073006f006e
0020006f0062007400610069006e0069006e00670020006100200063006f
007000790020006f006600200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
00480065006200720065007700200061006e00640020006100730073006f
00630069006100740065006400200064006f00630075006d0065006e0074
006100740069006f006e002000660069006c006500730020002800740068
00650020201c004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065201d0029002c00200074006f
0020006400650061006c00200069006e00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
007700610072006500200077006900740068006f00750074002000720065
0073007400720069006300740069006f006e002c00200069006e0063006c
007500640069006e006700200077006900740068006f007500740020006c
0069006d00690074006100740069006f006e002000740068006500200072
0069006700680074007300200074006f0020007500730065002c00200063
006f00700079002c0020006d006f0064006900660079002c0020006d0065
007200670065002c0020007000750062006c006900730068002c00200064
006900730074007200690062007500740065002c0020007300750062006c
006900630065006e00730065002c00200061006e0064002f006f00720020
00730065006c006c00200063006f00700069006500730020006f00660020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065002c00200061006e0064
00200074006f0020007000650072006d0069007400200070006500720073
006f006e007300200074006f002000770068006f006d0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f0066007400770061007200650020006900730020006600750072006e
0069007300680065006400200074006f00200064006f00200073006f002c
0020007300750062006a00650063007400200074006f0020007400680065
00200066006f006c006c006f00770069006e006700200063006f006e0064
006900740069006f006e0073003a000d000d005400680065002000610062
006f0076006500200063006f00700079007200690067006800740020006e
006f007400690063006500200061006e0064002000740068006900730020
007000650072006d0069007300730069006f006e0020006e006f00740069
006300650020007300680061006c006c00200062006500200069006e0063
006c007500640065006400200069006e00200061006c006c00200063006f
00700069006500730020006f00720020007300750062007300740061006e
007400690061006c00200070006f007200740069006f006e00730020006f
006600200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002e000d000d
00540048004500200053004f004600540057004100520045002000490053
002000500052004f00560049004400450044002000270041005300200049
00530027002c00200057004900540048004f005500540020005700410052
00520041004e005400590020004f004600200041004e00590020004b0049
004e0044002c002000450058005000520045005300530020004f00520020
0049004d0050004c004900450044002c00200049004e0043004c00550044
0049004e004700200042005500540020004e004f00540020004c0049004d
004900540045004400200054004f00200054004800450020005700410052
00520041004e00540049004500530020004f00460020004d004500520043
00480041004e0054004100420049004c004900540059002c002000460049
0054004e00450053005300200046004f0052002000410020005000410052
0054004900430055004c0041005200200050005500520050004f00530045
00200041004e00440020004e004f004e0049004e004600520049004e0047
0045004d0045004e0054002e00200049004e0020004e004f002000450056
0045004e00540020005300480041004c004c002000540048004500200041
005500540048004f005200530020004f005200200043004f005000590052
004900470048005400200048004f004c0044004500520053002000420045
0020004c004900410042004c004500200046004f005200200041004e0059
00200043004c00410049004d002c002000440041004d0041004700450053
0020004f00520020004f00540048004500520020004c0049004100420049
004c004900540059002c0020005700480045005400480045005200200049
004e00200041004e00200041004300540049004f004e0020004f00460020
0043004f004e00540052004100430054002c00200054004f005200540020
004f00520020004f00540048004500520057004900530045002c00200041
0052004900530049004e0047002000460052004f004d002c0020004f0055
00540020004f00460020004f005200200049004e00200043004f004e004e
0045004300540049004f004e002000570049005400480020005400480045
00200053004f0046005400570041005200450020004f0052002000540048
004500200055005300450020004f00520020004f00540048004500520020
004400450041004c0049004e0047005300200049004e0020005400480045
00200053004f004600540057004100520045002e000da920323031352054
6865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c2052
69676874732052657365727665642e200d0d486562726577204f70656e54
797065204c61796f7574206c6f67696320636f7079726967687420a92032
303033202620323030372c2052616c70682048616e636f636b2026204a6f
686e20487564736f6e2e2054686973206c61796f7574206c6f6769632066
6f72204269626c6963616c20486562726577206973206f70656e20736f75
72636520736f66747761726520756e64657220746865204d4954204c6963
656e73653b2073656520656d626564646564206c6963656e736520646573
6372697074696f6e20666f722064657461696c732e417269616c20697320
612074726164656d61726b206f6620546865204d6f6e6f7479706520436f
72706f726174696f6e2e4d6f6e6f747970653a417269616c20526567756c
617220284d6963726f736f66742956657273696f6e20362e393041726961
6c4d544d6f6e6f7479706520547970652044726177696e67204f66666963
65202d20526f62696e204e6963686f6c61732c2050617472696369612053
61756e646572732031393832596f75206d61792075736520746869732066
6f6e74206173207065726d6974746564206279207468652045554c412066
6f72207468652070726f6475637420696e20776869636820746869732066
6f6e7420697320696e636c7564656420746f20646973706c617920616e64
207072696e7420636f6e74656e742e2020596f75206d6179206f6e6c7920
28692920656d626564207468697320666f6e7420696e20636f6e74656e74
206173207065726d69747465642062792074686520656d62656464696e67
207265737472696374696f6e7320696e636c7564656420696e2074686973
20666f6e743b20616e6420286969292074656d706f726172696c7920646f
776e6c6f6164207468697320666f6e7420746f2061207072696e74657220
6f72206f74686572206f75747075742064657669636520746f2068656c70
207072696e7420636f6e74656e742e0d0d54686520666f6c6c6f77696e67
206c6963656e73652c206261736564206f6e20746865204d4954206c6963
656e73652028687474703a2f2f656e2e77696b6970656469612e6f72672f
77696b692f4d49545f4c6963656e7365292c206170706c69657320746f20
746865204f70656e54797065204c61796f7574206c6f67696320666f7220
4269626c6963616c2048656272657720d24c61796f7574204c6f676963d3
206173206a6f696e746c7920646576656c6f7065642062792052616c7068
2048616e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065
726d697373696f6e20697320686572656279206772616e7465642c206672
6565206f66206368617267652c20746f20616e7920706572736f6e206f62
7461696e696e67206120636f7079206f6620746865204f70656e54797065
204c61796f7574206c6f67696320666f72204269626c6963616c20486562
72657720616e64206173736f63696174656420646f63756d656e74617469
6f6e2066696c6573202874686520d24c61796f7574204c6f67696320536f
667477617265d3292c20746f206465616c20696e20746865204c61796f75
74204c6f67696320536f66747761726520776974686f7574207265737472
696374696f6e2c20696e636c7564696e6720776974686f7574206c696d69
746174696f6e207468652072696768747320746f207573652c20636f7079
2c206d6f646966792c206d657267652c207075626c6973682c2064697374
7269627574652c207375626c6963656e73652c20616e642f6f722073656c
6c20636f70696573206f6620746865204c61796f7574204c6f6769632053
6f6674776172652c20616e6420746f207065726d697420706572736f6e73
20746f2077686f6d20746865204c61796f7574204c6f67696320536f6674
77617265206973206675726e697368656420746f20646f20736f2c207375
626a65637420746f2074686520666f6c6c6f77696e6720636f6e64697469
6f6e733a0d0d5468652061626f766520636f70797269676874206e6f7469
636520616e642074686973207065726d697373696f6e206e6f7469636520
7368616c6c20626520696e636c7564656420696e20616c6c20636f706965
73206f72207375627374616e7469616c20706f7274696f6e73206f662074
6865204c61796f7574204c6f67696320536f6674776172652e0d0d544845
20534f4654574152452049532050524f564944454420274153204953272c
20574954484f55542057415252414e5459204f4620414e59204b494e442c
2045585052455353204f5220494d504c4945442c20494e434c5544494e47
20425554204e4f54204c494d4954454420544f205448452057415252414e
54494553204f46204d45524348414e544142494c4954592c204649544e45
535320464f52204120504152544943554c415220505552504f534520414e
44204e4f4e494e4652494e47454d454e542e20494e204e4f204556454e54
205348414c4c2054484520415554484f5253204f5220434f505952494748
5420484f4c44455253204245204c4941424c4520464f5220414e5920434c
41494d2c2044414d41474553204f52204f54484552204c494142494c4954
592c205748455448455220494e20414e20414354494f4e204f4620434f4e
54524143542c20544f5254204f52204f54484552574953452c2041524953
494e472046524f4d2c204f5554204f46204f5220494e20434f4e4e454354
494f4e20574954482054484520534f465457415245204f52205448452055
5345204f52204f54484552204445414c494e475320494e2054484520534f
4654574152452e0d004e006f0072006d0061006c006e0079006f00620079
010d0065006a006e00e9006e006f0072006d0061006c005300740061006e
0064006100720064039a03b103bd03bf03bd03b903ba03ac004100720069
0061006c00200069007300200061002000740072006100640065006d0061
0072006b0020006f006600200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
002e0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e002000200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e000d000a000d000a00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000a000d000a005000650072006d0069007300730069006f
006e00200069007300200068006500720065006200790020006700720061
006e007400650064002c002000660072006500650020006f006600200063
00680061007200670065002c00200074006f00200061006e007900200070
006500720073006f006e0020006f0062007400610069006e0069006e0067
0020006100200063006f007000790020006f006600200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c002000480065006200720065007700200061006e0064
0020006100730073006f00630069006100740065006400200064006f0063
0075006d0065006e0074006100740069006f006e002000660069006c0065
0073002000280074006800650020201c004c00610079006f007500740020
004c006f00670069006300200053006f006600740077006100720065201d
0029002c00200074006f0020006400650061006c00200069006e00200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f00660074007700610072006500200077006900740068006f
007500740020007200650073007400720069006300740069006f006e002c
00200069006e0063006c007500640069006e006700200077006900740068
006f007500740020006c0069006d00690074006100740069006f006e0020
007400680065002000720069006700680074007300200074006f00200075
00730065002c00200063006f00700079002c0020006d006f006400690066
0079002c0020006d0065007200670065002c0020007000750062006c0069
00730068002c00200064006900730074007200690062007500740065002c
0020007300750062006c006900630065006e00730065002c00200061006e
0064002f006f0072002000730065006c006c00200063006f007000690065
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002c00200061006e006400200074006f0020007000650072006d00690074
00200070006500720073006f006e007300200074006f002000770068006f
006d00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000690073
0020006600750072006e0069007300680065006400200074006f00200064
006f00200073006f002c0020007300750062006a00650063007400200074
006f002000740068006500200066006f006c006c006f00770069006e0067
00200063006f006e0064006900740069006f006e0073003a000d000a000d
000a005400680065002000610062006f0076006500200063006f00700079
007200690067006800740020006e006f007400690063006500200061006e
0064002000740068006900730020007000650072006d0069007300730069
006f006e0020006e006f00740069006300650020007300680061006c006c
00200062006500200069006e0063006c007500640065006400200069006e
00200061006c006c00200063006f00700069006500730020006f00720020
007300750062007300740061006e007400690061006c00200070006f0072
00740069006f006e00730020006f006600200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065002e000d000a000d000a00540048004500200053004f
004600540057004100520045002000490053002000500052004f00560049
00440045004400200027004100530020004900530027002c002000570049
00540048004f00550054002000570041005200520041004e005400590020
004f004600200041004e00590020004b0049004e0044002c002000450058
005000520045005300530020004f005200200049004d0050004c00490045
0044002c00200049004e0043004c005500440049004e0047002000420055
00540020004e004f00540020004c0049004d004900540045004400200054
004f0020005400480045002000570041005200520041004e005400490045
00530020004f00460020004d00450052004300480041004e005400410042
0049004c004900540059002c0020004600490054004e0045005300530020
0046004f00520020004100200050004100520054004900430055004c0041
005200200050005500520050004f0053004500200041004e00440020004e
004f004e0049004e004600520049004e00470045004d0045004e0054002e
00200049004e0020004e004f0020004500560045004e0054002000530048
0041004c004c002000540048004500200041005500540048004f00520053
0020004f005200200043004f005000590052004900470048005400200048
004f004c00440045005200530020004200450020004c004900410042004c
004500200046004f005200200041004e005900200043004c00410049004d
002c002000440041004d00410047004500530020004f00520020004f0054
0048004500520020004c0049004100420049004c004900540059002c0020
005700480045005400480045005200200049004e00200041004e00200041
004300540049004f004e0020004f004600200043004f004e005400520041
00430054002c00200054004f005200540020004f00520020004f00540048
004500520057004900530045002c002000410052004900530049004e0047
002000460052004f004d002c0020004f005500540020004f00460020004f
005200200049004e00200043004f004e004e0045004300540049004f004e
00200057004900540048002000540048004500200053004f004600540057
0041005200450020004f0052002000540048004500200055005300450020
004f00520020004f00540048004500520020004400450041004c0049004e
0047005300200049004e002000540048004500200053004f004600540057
004100520045002e000d000a004e006f0072006d00610061006c0069004e
006f0072006d00e1006c006e0065004e006f0072006d0061006c00650053
00740061006e00640061006100720064041e0431044b0447043d044b0439
004e0061007600610064006e006f0074006801b001a10300006e00670041
007200720075006e007400610000b15485410b032c032c032c0222001d00
1f032b032a003c001f032ab2061d1fb80328b326181fd0bc032900e00329
00020329b22b1d1fb90327031db23b1f40b80323b31215320f412d032000
01002f0320000100200320006f032000af032000bf03200004005f031e00
010010031e007f031e0080031e00af031e00bf031e00d0031e0006000003
1e0010031e0020031e006f031e009f031e00e0031e0006031d031cb2201f
1041270319007f03190002000f031700ef031700ff03170003001f031700
2f0317004f0317005f0317008f0317009f03170006000f0317005f031700
6f0317007f031700bf031700f00317000600400317b2923340b80317b28b
3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b80317b357
593240b80317b34d513240b80317b344493240b80317b23a3340b80317b3
31343240b80317b32e423240b80317b3272c3240b80317b312253280b803
17b30a0d32c04116031600d00316000200700316000102c4000f0101001f
00a0031500b0031500020306000f0101001f00400312b32426329fbf0304
0001030203010064001fffc00301b20d1132410a02ff02ef0012001f02ee
02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2000302
e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf02e000
cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f02dd00
3f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc00
01000002dc0001001002dc003f02dc000202dc02dc001002db000102db02
db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ff
c002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9
291fb90326031cb23b1f40bb0322003e00330322b225311fb80318b23c69
1fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4002002
d4005002d4006002d4007002d40006006002d6007002d6008002d6009002
d600a002d600b002d60006000002d6001002d6002002ca002002cc002002
d6003002d6004002d6005002d6000802d0b2202b1fb802cfb226421f4116
02ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017
001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6
001002c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02
bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02
bb00ca0800001f02b200e90800001f02a600a20800406a1f402643493240
2043493240263a3d3240203a3d329f209f26024026969932402096993240
268e923240208e92324026848c324020848c3240267a813240207a813240
266c763240206c76324026646a324020646a3240265a5f3240205a5f3240
264f543240204f5432b8029eb724271f374f6b0120410f02770030027700
40027700500277000402770277027700f90400001f029bb22a2a1fb8029a
402b292a1f80ba0180bc0180520180a201806501807e01808101803c0180
5e01802b01801c01801e0180400180bb0138000100800140b40180400180
bb013800010080013940180180ca0180ad01807301802601802501802401
8020013740b80221b2493340b80221b2453340b80221b341423240b80221
b33d3e320f410f0221003f0221007f0221000300bf022100cf022100ff02
21000300400221b320223240b80221b3191e3240b80222b32a3f3240b802
21b32e3a326f414a02c3007f02c3008f02c300df02c30004002f02c30060
02c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff
02c3000600df02220001008f02220001000f0222002f0222003f0222005f
0222007f022200ef0222000600bf022100ef02210002006f0221007f0221
00af02210003000f0221002f0221003f0221004f0221000402c302c30222
022202210221401d101c102b1048038f1c010f1e014f1eff1e0237001616
00000012110811b8010db6f70df8f70d00094109028e028f001d001f0290
028f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f01
3900260125001f013800730401001f0135001c0801001f0134001c02ab00
1f0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb8
0201b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb808
01b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126
b8019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f
5e73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e
1f3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f
291cb80101b21f231eb80401b41f35555537b80168402c07960758074f07
360732072c0721071f071d071b071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b5342014bb0c063004b6220b0f65323b8010a515ab005234201b0124b00
4b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb002
88b801005458b801ffb101018e851bb0124358b900010111858d1bb90001
0128858d5959001816763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b182b1d42b0964b5358b235aaaa1d4259b0324b5358
b235ffff1d42594bb09353205c58b901f201f04544b901f101f045445958
b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001f145
44b9002601f145445958b9081e0020455258b90020081e4459594bb8019a
53205c58b9002501f24544b9002401f245445958b909090025455258b900
2509094459594bb8040153205c58b173244544b1242445445958b9172000
73455258b9007317204459594bb8040153205c58b1ca254544b125254544
5958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c4544
b11e1c45445958b9011a001c455258b9001c011a4459594bb05653205c58
b11c1c4544b12f1c45445958b90189001c455258b9001c01894459594bb8
030153205c58b11c1c4544b11c1c45445958b90de0001c455258b9001c0d
e04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c4565234560
23456560234560b08b766818b080622020b163594565234520b003266062
636820b003266165b059236544b063234420b13b5c4565234520b0032660
62636820b003266165b05c236544b03b2344b1005c455458b15c406544b2
3b403b4523614459b347503437456523456023456560234560b089766818
b080622020b134504565234520b003266062636820b003266165b0502365
44b034234420b147374565234520b003266062636820b003266165b03723
6544b0472344b10037455458b137406544b24740474523614459004b5342
014b5058b108004259435c58b108004259b3020b0a124358601b21594216
10703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342002b74757375
00184569444569444569447373737374757374752b2b2b2b74752b2b2b2b
2b737373737373737373737373737373737373737373737373732b2b2b45
b0406144737400004bb02a534bb03f515a58b1070745b040604459004bb0
3a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a58b1
030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b900
8002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a58ba
009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373732b
2b2b2b2b002b2b2b2b2b2b00456944734569447345694473747545694473
4569444569444569447374456944456944732b2b2b2b2b732b002b732b74
752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b2b74
2b002b2b2b00184569442b5c58410e0336032f0041001f0330032f002d00
1f032d032f0032001f0332032f4012261f0302371f0908371f0b0a441f07
06441f2b2b2b2b2b2b2b2b592b0000>
[15431 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1644 21 <0001003c0000040705c0001e0227b0852b58b10602435458400911100d18
131306550db8fff4b4111106550db8ffee4009101006550d1e14051eb8ff
e84017131306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb40
0c020a1717201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b
2b3fed2b2b2bc43231301bb10202435458400911100d0c121202550db8ff
f440090f1102550d1e14051eb8ffe0400b121302551e140f1102551eb802
bbb2020a17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f101102
02201f1112392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b
40473b053b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a
138912bc12e51ae51bf01a0cbf0bb713021e0a10080606ca1c1a141c1c1a
081c1a030102081a1c030d1e10b802a4b34f110111b80118b50d1e140500
1eb802bbb301020c0a4110fff4000c000c01400056000afff2000b000b01
400056000afff8000d000d0140400d560a7317d30000014021233401bb02
81002000100138400c11b53f025f026f027f020402ba0224001f018fb18b
182b10f65df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de4111217
390111121739870e2e2b0e7d10c4011112393130b00243b040505840091b
101c101d101e1006befff00007ffe00008fff00009fff000383838380138
38383859005d015d7259591b400910100d1b07070d021eb80333b46c020c
140db8032fb26c140500183f2b3f2b1139113312392f3031592515212637
36363736363534262322060727363633321615140606070606070407fc37
021725a39aefa8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c0
7ec4e5666b939c8a13cfd9eaad58aabca4886131>PBAAAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>PBAAAA+ArialMT AddT42Char 
PBAAAA+ArialMT /CharStrings get begin
/two 21 def
end
PBAAAA+ArialMT /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/OPRHDU+ArialMT /PBAAAA+ArialMT findfont ct_VMDictPut
/OPRHDU+ArialMT*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
219.564 264.83 mo
(2)sh
214.077 306.146 mo
214.077 351.748 li
@
248.173 351.573 mo
270.562 329.182 li
247.619 306.24 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 1330 20 <000100df000002fb05c0000a010eb0852b58b30a0c0c0cb80140b456000c
0c0cb80140b4560a0e0b0bb80140b456000e0b0bb80140b4560a080d0db8
0140b45600080d0db8014040215603400d11346b047f028f02990804ac04
010900060502030905010c0201ca0a00b8ffc0400a212334300001200001
00b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d0d02
5500b8fff040190f0f065500100c0c065500100d0d0655001a0c05400d0f
3405b8ffc0400e212334300501200540050205190bba013c018500182b4e
10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f1739011139
3130015d005d2b012b2b2b2b2b2b1b400c0201090640050509010c090500
183f3f12392f1acd111239303159212311060607353636373302fbb441d3
5497e22f74047b3e7c1fae47ca5f>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/one 20 def
end
OPRHDU+ArialMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
219.564 346.541 mo
(1)sh
214.077 607.193 mo
214.077 652.796 li
@
248.173 652.622 mo
270.562 630.228 li
247.619 607.289 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 718 19 <00020055ffe7041105c00010001d01feb0852b58b10202435458400a1a1e
0405141e0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c
0f0f025500160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3f
ed31301bb10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f0655
09b8ffe6b40d0d065509b8ffee40190b0b0655091100100d0d065500100c
0c065500100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301b404e
04068702880b880fc90e0509070b180245134c154a19431b54135c155c19
521b6b076b0b63136c156b19601b79027706760b7a0f870698079610c918
da02d606d60bdb0f1a1a1e0405141e0d0d174110fff4000c000c01400056
0017fff2000b000b014000560017fff8000d000d01404011561773094021
2334300901000910090209410afff4000b000b014000560009ffe8000d00
0d0140b75609901f110c0c0cb80140b456110e0b0bb80140b45611080d0d
b80140b356117300b8ffc0400c2123342000400002000c0c0cb80140b456
00080b0bb80140b45600080d0db80140b65600901ec78b182b10f62b2b2b
5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed3fed3130015d71005db0
0243b0405058b4062019101cb8fff0b202200bbeffe00016ffe00012ffe0
000fffe0003838383838013838385959591bb10d14b8032fb46c0d0d041a
b8032fb26c040500183f2b3f2b3031591310123633321616121510020623
22272613101633323611102623220706556bd3a076b274426ad3a1d47991
b9a97c7ca9a97e7c4a5d02d30104013dac5fb3feffdafefefec3ad98b701
9dfe97eff00168016aee6986>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/zero 19 def
end
OPRHDU+ArialMT /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[48{/.notdef}rp /zero /one /two 205{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
219.564 647.589 mo
(0)sh
615.384 249.369 mo
615.384 294.972 li
@
649.48 294.795 mo
671.867 272.406 li
648.927 249.463 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
620.871 289.765 mo
(1)sh
%ADOBeginSubsetFont: HIBBAA+Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.355 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Arial-ItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32f3e87db1000000cc000000606376
7420474d2cba0000012c000005666670676dfa6c2ef00000069400000635
676c7966d10726d70000a27c000005ae68656164aa412a2900000ccc0000
0036686865610e470f6b00000d0400000024686d7478c21dc3f900000d28
000030006c6f636100428cd800003d28000030046d6178700f3c03e00000
6d2c000000206e616d659864ce4000006d4c00002e6270726570946238c5
00009bb0000006cb67646972000000000000000000000000000303880190
00050008059a0533001e011b059a0533005a03d1006602120805020b0604
020202090204e0000eff000078430000000100000000544d432000010020
fffc05d3fe570133073e01b2400001bfdff70000042605ba000000200004
05ba001905ba001905a6001a042600180000ffe70000ffe80000ffe7fe69
ffee05ba0019fe6fffe202e2000000b5000000b5000000000000000000bc
00bf008c00b300a600a600b10010010400640079008b008b00c100ea008a
00a2009101b40073007a00a400a200bb01bd0270005a00800017007000c3
00300103ffd000ac007d010d0006001200c900cd00560091ff8f0113000b
00190043007200b903c803d7ffee0146016e0002001b0044005200b603ee
00d80104023d05180573ff2d0005000900c600cd024cffe7001100150037
0049004e005c00a600a700b500c500db01280543ffdf0021004000530070
0079008e00a300ca018f0265027502a403c80555ff9affd7ffee00050008
002600460069007000730077009a00c100ef010a011301c101e50318049c
fef2fef9ffa4000000270034004100450075008000c400cb00d900e500f8
01550166022b0254037004050467ff16ffb40002001d0032004a004a004d
00550060007c007f008c009d00b102a3038cfec4fef7000100030003002d
00370037003a0056005a00a400cd00da0111011901250127014801530169
01a001fb02070239028102a402f7030503280328033603a303b503dd03df
03f10448047804e6060bff28ff4bff68ff78ff9fffbfffe10012001f0028
004c005a005c005e00610070007700810083008800b1009c009c009d009f
00a500b600b800b900ba00d300df00e100f200f7010e0132013b013c0166
016c017801ae01b501b701cf01d2025d026102a202cd0323035a03a303a4
040004440450047304d2fe00fe38fe8cfeb1feceff0effb2ffc7ffecfffd
0005001f002100250026002d00580065008100850091009900a500ab00af
00b000b000ba00db00dc00e900f80109010901100114011701240129012d
012f013601500151015a0167017401790182018e01900199019c01b001b3
01b701be01c501da01e801f001f201fb02000200020b020f021f0222022c
022d022e024e02670287029002ac02b502bc02bc02d002d402d802db02e5
02f102f9031103140314032203260348034a035c036f03780379037e03ab
03b503cb03e004040405040f0428042c048404a504af04cf04eb04f9050b
058e0593059805e505e506000610063d06500668069506b806d907030751
0766077e077f078207b60800082308ac00b200bf00b100af000000000000
000000000000025c00a100d301be00de01a6031402ab015002a70196010e
0318006b039b01d1054b0089023c02b0014d021603f301760176001503a9
01f400f400b6020402d8012b04a701a000bc01bd028c026b0278040f0157
04a904fd017404d2040302e400a602ee00000000061404a7000002760000
016d013e00000267006d009e021400cb02a40085007100c2009e06090290
00b9008f00260248003501490091009902ef00eb008e0011013f006a0079
00fd01a3057402a1017a03e8020c005601fd02df013b0574006606100081
01b3024e03cb01e400cd02bc0132014b01680239016200fd00e601a201e6
0255004d028300a3046705d401dd012b014e05680070000004e003490366
021302bb0000000000000000000000000000000000af00b4000300cd004c
03c8005c0192007200cd022b0049026f009d03bd01e900b4017c04670368
0099027802040183028102ac00b30348040b004200b403b400be01a803d6
012b00af0478016e0193ff45fd5d00f506a604ae03b10536041cffcafedc
01a501d0ffba02f10037ffca0355fe67019c04190055007c00e50072006d
000b00ab012b009c00db01a60008012b00250056008e00a5001500100109
00cb00460017004c005e01f200b80083001101360128004e0222006b0241
072006140000072700aaff370037006e002901da04a8007500ba04710483
04f6000040425554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e
01b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b011
2bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b011
2bb0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b011
2bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b0
40618c482d2c01182f2d2c20b0032545b019234445b01a23444565234520
b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b319402019
45208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323
430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f43234365
0b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b0032523
49b04060b0206320b000525823b002253823b002256538008a63381b2121
21212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f18
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b008
26b00826b00826b008260f10161345683ab001162d2cb4000100000015b0
0826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2c
b0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b010
60482046b0106048590a21211b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b8fff060482046b8ff
f06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b
53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b21
21592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b212159
2d2c462346608a8a462320468a608a61b8ff8062232010238ab902a502a5
8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b12601885158b94000020063b804
00885458b202400243604259b94000040063b80800885458b20280024360
4259b12801885158b94000080063b81000885458ba000201000002436042
595959595959592d2cb0024354584b53234b515a58381b2121591b212121
21592d000000000100000006e6664ab0a49c5f0f3cf50819080000000000
a372c2bf00000000d19de3fffbddfd670adf07fb00020009000100010000
000000010000073efe4e00430aaafbddfa520adf00210007000000000000
0000000000000c00060001000000000002390000023900000239007302d7
01150473005f04730069071d00c7055600a10187010402aa00ad02aaff93
031d00ec04ac00b80239003102aa005f023900760239ff98047300910473
012f04730078047300700473005d0473008e047300ab047300f804730099
0473008a023900750239003104ac00b804ac00b804ac00b804730104081f
006f0556ffd70556005905c700ba05c7005b0556005c04e3005d063900c7
05c7005602390075040000440556005b0473005206aa005a05c700640639
00bb05560058063900bd05c700600556009004e300ff05c700c6055600fe
078d01000556ffbf055600ef04e300320239000d023900ae0239ff8803c1
00900473ff7e02aa012a0473005a04730044040000730473006c0473006a
0239005d047300350473004401c7003d01c7ff080400004601c7003606aa
004304730044047300640473ffeb0473006902aa00440400004e02390073
04730080040000a205c7009f0400fffd040000000400002802ac006b0214
00bc02acff5404ac00a40556ffd70556ffd705c700ba0556005c05c70064
063900bb05c700c60473005a0473005a0473005a0473005a0473005a0473
005a040000730473006a0473006a0473006a0473006a0239007d0239007d
0239007d0239007d04730044047300640473006404730064047300640473
006404730080047300800473008004730080047300ba033301110473009a
047300400473003e02cd006d044c008e04e3004a05e5005305e500530800
011802aa015a02aa00ed0464007c0800ffad063900ae05b4009a0464007c
0464007c0464007c0473004b049c000c03f4003805b4007a069600f10464
00000231000002f600a702ec008f062500bb071d005704e3009904e300ac
02aa007604ac00b8046400540473002e0464007c04e5001a047300a10473
0053080001260556ffd70556ffd7063900bb080000a4078d00810473fffc
0800000002aa00d802aa00d601c7010801c701000464008003f400780400
0000055600ef0156fde80473005102aa006102aa00210400006f0400006f
0473000b023900b901c7fff102aaffd8080000880556ffd70556005c0556
ffd70556005c0556005c02390075023900750239007502390075063900bb
063900bb063900bb05c700c605c700c605c700c60239007d02aa00cd02aa
00c002aa00c902aa00db02aa018e02aa014802aa004d02aa00b002aa0040
02aa01080473001801c70026055600900400004e04e30032040000280214
00bc05c7005b04730064055600ef04000000055600580473ffeb04ac00b8
04ac010502aa011702aa009802aa00a906ac007b06ac00ab06ac00a90473
ffe8063900c70473003502390075055600900400004e05c700ba04000073
05c700ba040000730473006c046b00b502aa01360556ffd70473005a0556
ffd70473005a05c7005b0500007005c7005b0556005c0473006a0556005c
0473006a0473005201c700360473005202400038047300520333003605c7
00640473004405c7006404730044063900bb0473006405c7006002aa0044
05c7006002aa0044055600900400004e04e300ff0239001b04e300ff02d5
006d05c700c60473008005c700c60473008004e300320400002804e30032
0400002804900057063900bb06b200b404900066047200620384004504d3
006402fe00b00538006f046bff7e0400007302eb007708c000190800004f
040000990800004f040000990800004f040000980400009807d5016a05c0
00ee04ac00b804d5009d04ac007104d5022204d5010505abffe9050001c9
05ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe905ab
ffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe9
05abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905ab02d605ab006605abffea
05d5ffff04d500920800000007eb013007eb012007eb013007eb012004d5
00b204d5008004d5002a082b0198086b01b807550010060000f40600006f
0440003a0540003704c0003f04150040040000250600005505de0075038d
003b04eb00650180010402d50115071500b80296001904d5009202d60083
02d6008304d500b202d600700556ffd70473005a05c700ba0400007305c7
00ba040000730556005c0473006a0556005c0473006a0556005c0473006a
063900c704730035063900c704730035063900c70473003505c700560473
004405c70056047300440239007501c7003d0239007501c7003d02390075
01c7003d0239ffdc01c7ff960400004401c7ff080556005b040000460400
00460473005201c7ffa405c700640473004405c9006204730049063900bb
04730064063900bb0473006405c7006002aaffae055600900400004e04e3
00ec0239001805c700c60473008005c700c60473008005c700c604730080
05c700c604730080078d010005c7009f055600ef0400000001c700360556
ffd70473005a0800ffad071d0057063900ae04e3009902390128078d0100
05c7009f078d010005c7009f078d010005c7009f055600ef0400000001c7
013302aa00990473004004cd005a06ac007b06ac009406ac009306ac0063
02aa002602aaffe002aa017b02aa00610556ffd4064f006306c50068031c
0062065a005706ec00600633001b01c7ffee0556ffd705560059055effec
0556005c04e3003205c70056023900750556005b0556ffec06aa005a05c7
006405300008063900bb05cc00570556005804cc002d04e300ff055600ef
0556ffbf06a500fd0616000702390075055600ef04900066038400450471
004501c7003d046600960492ffe90400009e03b500640471004504570082
01c7003d0400003c03f0ffcd0462ffe8040000a203930073047300640495
ffe403e4006f04660096045eff6d05d2009c063b006401c7003d04660096
0473006404660096063b00640556005c06be00e7045a005705a900bb0556
00900239007502390075040000440887ffea07dc005706c100e504b70057
051d00e705ca00570556ffd70535005705560059045a005705a2ff7f0556
005c0756ffb704e9006305b9005705b9005704b70057057cffeb06aa005a
05c70056063900bb05cc00570556005805c700ba04e300ff051d00e7065c
00a40556ffbf05d10057056300db075d005707620057067100e707170057
05350057058d005a082e00570574ffca0473005a04800076042d006403f2
004e046c00640473006a0581ffc503b8001f047300800473008003c7003f
0483ffd8057c003f0467003f047300640467003f0473ffeb0400007306aa
00430400000006af005f0400fffd0493007d0424009706a4007906cf0079
04f8007905e3003f0435003f03ef00350604003f0446ffe80473006a0473
00450306003f03f700610400004e01c7003d01c7003d01c7ff080748ffd8
069f003f0473004503c7003f040000000473007d03f0005702b7003f0800
005108aa005b055c00ac0000ff670000ff940000ff930000ff930000ff94
0000ff940000ff940000ff930000ff93000000630000ff94000001200000
ff28031000f10000ffe302330082000003dd0000ffd60239006d0481001d
0456ffe60331ffcd041100a104d1005601f9004f030f00b304ca004f04b8
008b01f900bc041300a903b0000703b400b004ca004f04cf002301f9fff8
02d2fff00498006c043cffd30488009c045f003303b100af03d4fff30466
0003041300a9058e00a20524ffe103f2004f03f200bc03f200bc01e3009e
0356009e0686004f01f9009b041300a90413008f03b4ffe503b4ffe50448
ffe1058e00a2058e00a2058e00a2058e00a20481001d0481001d0481001d
0456ffe60331ffcd041100a104d10056024b002e034a003a04b8008b024b
004f041300a903b0000703b400b004cf002302d2fff00498006c0488009a
045f003303d4fff304660003041300a9058e00a20524ffe101f9004f0456
ffe603b00007045f0033049b00370000ffdc0000ff250000ffdc0000fe51
0000ffdc0000fe510000ff160000ff160000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ffdc0000ff160000ffdc0000ff20
0000ffdc047300a408000000067e00bb04d60064065900c6051200800000
fef40000fd410000fdb70000ff580000fdec0000fe3b0000ff2e0000ff38
0000fe090000fd760000feb30000fd0e0000fd660000ffec0000ffc40000
fe44041b005606ac007b06ac007b0000ff6a0000fdb80000feca0000fdc8
0000ff2d0000fdc70000fced0000fc0e0000fc0e0000fd140000fc910000
fc7c0000fc920000fc460000fc000000fc460000fbdd0000fef40000ff50
0000fe7e0000fc6a0000fc950000fdf70000fe330000fc990000fcf90000
fcef0000fc9f0000fc8b0000fbde0000fd2c0000fd4b0000fc780000fc68
01c7003d0556ffd70473005a0556ffd70473005a0556ffd70473005a0556
ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473005a
0556ffd70473005a0556ffd70473005a0556ffd70473005a0556ffd70473
005a0556ffd70473005a0556005c0473006a0556005c0473006a0556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a0556005c0473006a0239007501c7003d0239003801c7ffe8
063900bb04730064063900bb04730064063900bb04730064063900bb0473
0064063900bb04730064063900bb04730064063900bb04730064067e00bb
04d60064067e00bb04d60064067e00bb04d60064067e00bb04d60064067e
00bb04d6006405c700c60473008005c700c604730080065900c605120080
065900c605120080065900c605120080065900c605120080065900c60512
0080055600ef04000000055600ef04000000055600ef040000000556ffd7
0473005a0239007501c7003d063900bb0473006405c700c60473008005c7
00c60473008005c700c60473008005c700c60473008005c700c604730080
00000030000000300000003000000030045a003e0306003c0756ffb70581
ffc504b7005703c7003f04b7005703c7003f05c700560467003f047300ea
040000a2047300870400fff40556ffbf0400fffd056300c6042400810563
007504730044063900c104730076063900bb0473006401f900a20000ffb8
02bc000003f2008c0473004405d8008c0535005704730044053500570473
004405c700a005c700ba0400007305c7005b0646008c0535003b0473006c
047200000556004404e9006604e3ff2a063900c703f900890709004401c7
0036023900620556005b0400004601c7003603f0ffcd06c5007005c7ff30
04730044063900bb06f200bb0557006405d8008c0473ffeb055600580556
00820400005704cc002d02aa00c80239ffe404e300a00239007304e300ff
061600bf05c700c605bd00d10400000004e300320400002804e3ffba04e3
0033040000110400fffa04730078041500490381000a0400006b0473ffeb
021400bc034e00bc04ac0072023900730aaa005b09c7005b0873006c0873
0052063a0052038e003609c70064078e0064063a0044047300760556ffd7
0473005a0000fff90556ffd70473005a0800ffad071d0057063900c70473
0006063900c7047300350556005b04000046063900bb04730064063900bb
0473006404e3ffba0400ffae01c7ff080aaa005b09c7005b0873006c0639
00c7047300350846005604f1000405c70064047300440556ffd70473005a
0556ffd70473005a0556005c0473006a0556005c0473006a023900750239
0036023900750239007d063900bb04730064063900bb0473006405c70060
02aa004405c7006002aa004405c700c60473008005c700c6047300800556
00900400004e04e300ff02390061045cffd6037effb505c7005604730044
055a005604d6006404d6006404e30032040000280556ffd70473005a0556
005c0473006a063900bb0473006400000035063900bb04730064063900bb
04730064063900bb04730064055600ef04000000047300880473006c0473
0044047300440400003c040000100473006c0473006c0473007105a20076
0384004503b8001f04ed001f041200640239ff3804730035047300350467
0064040200a604ef007c0473007c047300440473004401c7001f01c7003e
02d9000001c7ffcf01c7fff001c700070482003006aa006d06aa006d06aa
00430473ff100473004404a9003f0473006406200064063b006404730064
02aaffb002aaffb002aaffb002aaffed02aa001502aa004402aa00750446
0044044600410400ffd70253ff380271ff380251005902c8ff330239002b
0239001c047300420481005b046600960400ffd305c7ffd30400ffdd041e
009504000028046100280400ffae0400ffcc040000ca040000c704000037
04000023063900bb0418004404120059046700640467003f0258ff1f0400
ffd703950044047300690400003d04000083076b006c073e006c07c7006c
055e007603b0007305ab00730602005d0522003604bf003603e200640438
00130277003a0277003a00faffa201c1003a01c1001e01c10027029d003a
041400d302c9004f0187010402d7011501c7010801c7010001c7013302aa
01c002aa01ad02d900de02d900d504ac00b804ac00b804ac00ad04ac00ad
02aa01d902aa015a02aa012a02aa012102aaff9502aa005e02aafffb0239
00700239015202aa00fb02aa00fb02aa00a602aa00a602aa00a602aa0010
02aa000202aa00a202eb00d600be00400299006302b1004002d900d50310
00960310009603100096031000960310009602aa006202aa006202aaffc7
02aa00c902aa00d604570096045700960457009604570096045700430457
0043045700430457004304570043031000430457002f0457002f0457002f
0457002f0457002f0310002f045700250457002504570025045700250457
00250310002f0457001a0457001a0457001a0457001a0457001a0310001a
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002f0457002f0457002f0457002f0457002f0310002f0457
002f0457002f0457002f0457002f0457002f0310002f0457002604570026
045700260457002604570026031000260457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
045700420457004204570042045700420310004204570026045700260457
002604570026045700260310002604570023045700230457002304570023
04570023031000230457002f0457002f0457002f0457002f0457002f0310
002f0457004b0457004b0457004b0457004b0457004b0310004b04570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457001a0457001a0457001a0457001a0457001a0310001a
0457002404570024045700240457002404570024031000240457002f0457
002f0457002f0457002f0457002f0310002f0457004e0457004e0457004e
0457004e0457004e0310004e045700960457009604570096045700960000
ff780000ff6a0000fea20000ffb30000003f0000ff9b000000150000ffac
0000ffd000000091000000250000ff140000ffb30000ffb3000000200000
001100000045000000df0000fedc0000fea70000fee20000fef00000ff7d
0000ffbb0000ff2c0000feec0000fee90000fee30000fe400000fe1b0000
ff210000fe460000fec60000fee70000fe9b0000fef50000ff630000fe21
0000fe500000fe690000fe260000fe640000fe640000fe190000fe400000
fd1b0000fe5d0000fe950000fea90000fd980000fe160000fe620000ff2c
0000fe210000fedb0000fe3a0000ffca000000540000fe6d000000100000
ffe70000ff6f0000000d0000ff160000fefb0000ff260000fd8d0000feea
0000fee70000ff6f0000ff6f0000ff6f0000fe980000fedf0000fd1f0000
ff310000ff2b0000ff530000ff000000ff010000ffc90000fef10000ff0e
0000ff1d0000ff130000fee10000fe210000ff400000ffce0000ff4c0000
fed002aa015a02aaffe902aa004f040a00430466003c05ba00ef070e007c
05ba00ef04730064063b00640482ffd3063900bb0473006405c700c80400
003704e3005d0306ffe904ff006a043c0056060d00b4049d00f506c5ffe4
06aaffe1056300dc047300b20563002b0419ffc8055600820556008204e0
007d04c5008805f700bb046e00640352003302de00450482ffd304a20064
0400007301c7ff08063900bb03870064038700110556005c05b900570473
006a047300800a6a00bb04c2006106140044063b004407390043058e0044
0558ffa50400ffbd070600420572004306a1001d057b00430831004306d9
004404e9004903b8fffd06a5011a05d200c5063900bb04730064061400fe
04b800a2061400fe04b800a208de00bb07590064069f005004cc001e0a42
00bb070200640000feca0a6a00bb04c2006105c700ba0400007304730039
0000ff5a0000ff5800000050000000320000fc2b0000fc4c05b900570473
0080053500570435003f055600580473ffeb0528004b0434004404e90063
03b8001f04b7005703c7003f05f100e7048a007907210056059b003f08b3
005706b7003f05c7008b0400005105c700ba0400006c04e300ff06aa0043
072e00e70493007d056300db0424009706cd00400514001f06cd00400514
001f023900750756ffb70581ffc50504004b0428002a057cffeb0483ffd8
05c7004b0467002a05c700560467003f056300db0424009706aa005a057c
003f02aa00db0556ffd70473005a0556ffd70473005a0800ffad071d0057
0556005c0473006a063900c1047300760756ffb70581ffc504e9006303b8
001f04e900630400ffae05b900570473008005b9005704730080063900bb
04730064063900bb04730064058d005a03ef0035051d00e704000000051d
00e704000000051d00e704000000056300db042400970717005705e3003f
055600490473006c079d004906ab006c077f0108061c00b804e9010803b8
00b807d8ffeb06c4ffd8081a005606a5003f063900c70467006405dc00ff
08ea00430000fe9d0000ffde0000001400000063000000030000feb10000
00450000ff9d0000ff410000ffe10000feb00000fffd000000fd0000ffb8
0000ff210000fff4000000060000fed00000fee60000feb20000fe660000
fee40000003b0000000e0000feb900000035000000200000ffac0000fea3
000000450000006e00000030000000300000000600000006000000940000
0074000000300556ffd70473005a05560059047300440556005904730044
055600590473004405c700ba0400007305c7005b0473006c05c7005b0473
006c05c7005b0473005f05c7005b0473006c05c7005b047300560556005c
0473006a0556005c0473006a0556005c0473006a0556005c0473006a0556
005c0473006a04e3005d0239005d063900c70473003505c7005604730044
05c700560473004405c700560473004405c7fffd0473fff305c700560473
00440239ff4501c7fef5023900750239007d0556005b040000460556005b
040000460556005b040000460473005201c7ffe80473005201c7ffe80473
005201c7ff220473005201c7feff06aa005a06aa004306aa005a06aa0043
06aa005a06aa004305c700640473004405c700640473004405c700640473
004405c7006404730044063900bb04730064063900bb04730064063900bb
04730064063900bb04730064055600580473ffeb055600580473ffeb05c7
006002aa004405c7006002aafff205c7006002aafff205c7006002aaff39
055600900400004e055600900400004e055600900400004e055600900400
004e055600900400004e04e300ff0239007304e300ff0239003804e300c9
0239ffa804e300ae0239ff7005c700c60473008005c700c60473007d05c7
00c60473008005c700c60473008005c700c604730080055600fe040000a2
055600fe040000a2078d010005c7009f078d010005c7009f0556ffbf0400
fffd0556ffbf0400fffd055600ef0400000004e300320400002804e30032
0400002804e3003204000028047300440239007305c7009f040000000473
005a01c70036049000660490006604900066049000660490006604900066
04900066049000660556ffd70556ffd7068200b8068200d2068200b80682
00d2068200e3068200e30384004503840045038400450384004503840045
03840045061e0082061e00ab07ae00a507ae00bf07ae00a507ae00bf0471
004504710045047100450471004504710045047100450471004504710045
068f0082068f00ab081f00a5081f00bf081f00a5081f00bf081f00d0081f
00d001c7003d01c7003d01c7003d01c7003d01c7003d01c7003d01c7003d
01c7003d03010082030100ab049100a5049100bf049100a5049100bf0491
00d0049100d0047300640473006404730064047300640473006404730064
069d0082069d00ab082d00a5082d00bf07c900a507c900bf046600960466
0096046600960466009604660096046600960466009604660096068200ab
07ae00bf081200bf07ae00e3063b0064063b0064063b0064063b0064063b
0064063b0064063b0064063b0064067a006b067a006b080a00a5080a00bf
07a600a507a600bf07a600dc07a600dc0490006604900066038400450384
0045047100450471004501c7003d01c7003d047300640473006404660096
04660096063b0064063b0064049000660490006604900066049000660490
00660490006604900066049000660556ffd70556ffd7068200b8068200d2
068200b8068200d2068200e3068200e30471ffeb0471ffeb0471ffeb0471
ffeb0471ffeb0471ffeb0471ffeb0471ffeb068f0082068f00ab081f00a5
081f00bf081f00a5081f00bf081f00d0081f00d0063b0064063b0064063b
0064063b0064063b0064063b0064063b0064063b0064067a006b067a006b
080a00a5080a00bf07a600a507a600bf07a600dc07a600dc049000660490
006604900066049000660490006604900066049000660556ffd70556ffd7
0556ffd70556ffd70556ffd702aa016702aa004f02aa016702aa00c002aa
00ed0471ffeb0471ffeb0471ffeb047100450471ffeb068200d10682007c
06f300d106f3007c05c7005602aa00b802aa00b802aa00e301c7003d01c7
003d01c7003d01c7003d01c7003d01c7003d0239007502390075036500d1
0365007c02aa00d202aa00d202aa00e30466009604660096046600960466
00960495ffe40495ffe40466009604660096055600ef055600ef068200a9
06e6007c061e00ab02aa006102aa006102aa012a063b0064063b0064063b
0064063b0064063b0064076500d1069d007c074200d1067a006b06160007
02aa015a02aa01900473006105c7008f05c700ba06aa004305c70043090a
0060078d002f0556005b04e300a30800ffd70400ffd304c100660000ff2b
0000ff610000ff320000ff4401c7001f01c7ff08042bffa1055600580506
006c025aff1f0508004402c8ff8d055500750555007502aa001e02aa001e
02aa005002aa005002aa003002aa00ac02aafffe02aaffce02aaff7b0239
00b702aa018602aa018602aa002602aa0026032effbe032effbc02aaffc8
0000003b0000004a0000ff910000fec20000fefb0000fefb0000fe410000
004a0000ff7b0000ff530000fea2055600580473ffeb03ffffd205bcff9e
071d00570401004004000073047100440471002903c5004403b8001f01c7
ffd6035000150400003c03950022057c003f04b0003f047300640400003c
047300300400fff704e3001c078d008103a8003c0473006e047300640448
00440446ffe804460044041d00cb04660096047300200595002304730020
040000a205c7009f0400002803b8001f03b8005704dbfff80306003f0400
ffd30467003f0448004405d200d40483ffd803ee005d05bd004803a1007a
03a1007a03d0007a039d007a039d007a03eb00a203cf007a0149007a02ac
007a0399007a0302007a046f007a03c9007a03cb007a03f900a2030f008a
0381007a03a7007a032c00de038d00a3052000ea02de006e02de009602d4
00ab04bd009f027e003a032c00ab031900ab031900ab0250007c02500060
0322008300ff00250286003a03ff003a0275003a032800ab02d7008d0328
00a7032800b302ef0014019000a202d4008f03bc00d00435007802dc00cc
0388006e0330002802f000da030c00a203810099030cfffb00ffffe20187
ffb002d4000c02dc00510330ffb702f0005e0309ffe903810012030cff73
05ad001d053d00a105fd005604dc000704e000b005f6004f053f00a90650
ffe104ac00670000ff9c0000ff970000ff970473fffc02aa00ec02d5006e
0400000008000000040000000800000002ab000002000000015500000473
000002390000019a000000ab00000000000005e5005305c700ba06aa0052
057cffea074d00800711006c070c00690556ffd705c7005f0400ff860473
003d04e3ffc1040000600400002604a500c6000001020000fee50000fe59
0000000b0000ff530495ff8f05c700a005c700ba05c700a0045a00570400
00570000feb9000000600000ff3f02d200240000ff93047300440473006c
0239ffd006aaffd00473ffb80473ff1c02aaffa002aaffa00400004e0239
ffc0040000280473ffef030b007a047400050618ffe201c7001f01c7001f
0473ffeb0466003f04810021047300440473006c0239ff83058200350400
004601c7ff5b06aa0043047300440473ffeb02aaff6f0400004e0318ff38
040000a20400fffd040000280473005a0473006c0473006c0473006a0384
004503b8ffb30514007601c7003d0400ffcb0253ff5604730080045cffe4
0309008002da00a702da0068032900a60250006001a5009701a5ffea0322
008302d600b400ff004b00ff006200ff006200ff004b01e1000400ff003e
00ffffce026d006403ff003e03ff005a0275ff6f0275003902d200520328
00b1032800a802c000370187ffe30190004802750038033700ac02750073
0275007102dc0047029f004c029f004c02f0004c02bc002b032900b70000
ff6d0000ff8e0000ff0a0000ff830239006f02de000f0319003103280030
030c000b03190023063900c70556ffd70556005805c700ba02aa00120490
006604900066049000660490006604900066049000660490006604900066
01c7003d01c7003d01c7003d01c7003d01c7003d01c7003d01c7003d01c7
003d04660096046600960466009604660096046600960466009604660096
0466009601c7003d01c7003d01c7003d01c7003d04660096046600960466
00960466009603a0007b0556001f05c700780556ffec0556005a0473ff86
0400004401c7ff08060a00bb0473006905c7000c02aa00330556009f0400
00000400003c040000730400003c01c70036045aff830306ff610556ffbf
0400fffd0556ffbf0400fffd04e9006603840045057cffd504abffd80000
ff5d0000ff9f0000ff980000ffc70000ff2a0000ff270000fee400000033
0000fe51078b002303eb000b0400003c0473002201c700310473ffee0556
005805c7002f0473ffb80239ff3705c70056047300440556005b04000046
04e30032040000280400006b04d000560383003f0538006f0000fffd0000
00250000ffcc0000ffa80000ffb00000fee201c7003d05c9005605c70064
05c900ad0000fec00000ff210000feb30000feba0000feb80000feb70000
febd0000fed90000fec50000febc0000fea3063900bd04730069078d0100
05c7009f056200560000ff84060a00bb04d000a0084c010006ba009d0239
009d038000cc018700d0018700fe04000099040000990239012a0239012c
023900d002aaff8804e300c4047300ad0473007903120057045000030446
00110473002304500036047300a404270093047300920479005904730091
0319008b0473007804730070047300750473008e047e00c0042f00e20473
0099047b008a05c50064060c00b705f800580956005705f800b30302ffec
0541005b063900bb0473006c01c7ffe403f80045020a006f047300690250
007f047300260473007a047300a10302ffec020a006f01c7003d0471ffb9
0489004e04c3007d04e7004f046f004e0408004e052f007a04f0004e01ea
004e0373002a0489004f03bc004f05c7004e04ec004e0531007b046d004e
0531007b04db004e046d0036041000ab04dd008204680086065900a2046f
ff96046c008e040effb90691ffaf06aa007b03bc003505310004046f004e
04e7003604c300330471ffb90471ffb90471ffb90471ffb90471ffb90471
ffb904c3007d046f004e046f004e046f004e046f004e01ea004e01ea004e
01ea004e01ea004e04ec004e0531007b0531007b0531007b0531007b0531
007b04dd008204dd008204dd008204dd0082046c008e0471ffb90471ffb9
0471ffb904c3007d04c3007d04c3007d04c3007d04e7004f04e70036046f
004e046f004e046f004e046f004e046f004e052f007a052f007a052f007a
052f007a04f0004e04f2004e01ea004e01ea004e01ea004e01eaffb501ea
004e0543004e0373002a0489004f03bc004f03bc004f03bc004f03bc004f
04ec004e04ec004e04ec004e04f5004e0531007b0531007b0531007b04db
004e04db004e04db004e046d0036046d0036046d0036046d0036046d0036
041000a0041000ab041000ab040e00ab04dd008204dd008204dd008204dd
008204dd008204dd0082065900a2065900a2065900a2065900a2046c008e
046c008e046c008e040effb9040effb9040effb90471ffb90691ffaf0531
00040471ffb90489004e03ae004f0471ffba046f004e040effb904f0004e
0531007b01ea004e0489004f045affb905c7004e04ec004e042fffe80531
007b04e6004f046d004e04250022041000ab046c008e0546004e046fff96
0543007d053100200471ffb9046f004e04f0004e01ea004e0531007b046c
008e0531002001ea004e046c008e046f004e05af00aa03ae004f04c7007d
046d003601ea004e01ea004e0373002a06f4ffe606b6004e05da00f90416
004f0463006a04e6004f0471ffb90486004d0489004e03ae004f0469ff90
046f004e0654ffd5041f004704e5004e04e5004e0416004f0488ffe605c7
004e04f0004e0531007b04e6004f046d004e04c3007d041000ab0463006a
050d006e046fff9604dc004e047d00970628004d061e004d056900a505e7
004d0455004d04c6004f06af004f04dbffc80323004f02aa002d02aa009d
02aa000902aa002402aa000902aa002102aa003602aa006a02aa002202aa
001a02aa00a102aa008e02aa00a805c5006405c5006405c5006405c50064
05c5006405c5006405c5006405c5006405c5006405c5006405c50064060c
00b7060c00b7060c00b7060c00b7060c00b7060c00b7060c00b7060c00b7
060c00b7060c00b7060c00b705f8005805f8005805f8005805f8005805f8
00b305f800b305f800b305f800b305f800b305f800b305f800b305f800b3
05f800b30302ffec0302ffec0302ffec0302ffec0302ffec0302ffec0302
ffec0302ffec0302ffec03da00280302ffec0302ffec0302ffec020a006f
020affc30257006f02a5006f020a001e0302ffec0302ffec0302ffec0302
ffec0302ffec0302ffec0302ffec0302ffec0541005b0473006c0473006c
0473006c0473006c0473006c0473006c0473006c0473006c0473006c01c7
ffe303f80045020a006f020affc30269006f02a5006f020a001e0250ffac
0250ff980300007f025000530473002604730026047300260473002604a0
004b02aa008002aa009302aa00d802aa00b404d0005603bf007a04e300a2
03aa00b405b9005704d0003f0556005b047300e3047300cc0556001207ba
ffeb0608ffd806a1005805bcffe9079bffcd0725ffe80556005b0400003c
088cffeb06c6ffd808cd005606a5003f05cc00570467003f056300560473
00440239003b0239005d0474005006210075032f003604e500bb047e0064
0591ffed047cff4506aa005a055600f0060a00570569006a02aaffaa0473
006403eb001d00faff1102dc00fc0556009004e300320239ffe60473004a
0000ff3f0331ffcd041100a104d100560524ffe1000000630000ffe20604
00ca05c7006105ba00c205a300a005c800cb05ce00580514006605c60061
0675006105ba006c054800690439006107550066061100b80597011004c9
006305a6007a05a500a005b50061060500c905bb00a305aa00bc058b00a0
05c70061059800e5066a00b605f800650618006105c700cb058200a90547
008c05680061056b008604200066061800a8057d0013063900bb064d007b
0231017401c7011001780030019a0041021f011701da0057041c015406b3
007c0478ffef04a3006904a10044047d008204a30069042000430473ffef
0593ffef04ba006d0473ffed01deffec06b7fff104810064047300810472
0044042f005a04740046046200710472008101d3ff100471008103dbffbc
0468004402d0ffa306b3007c042efff5049a00440473008a0471008106b2
007c0473ffee0469001e0321004206b2007c0494ff7c0474006405f30059
05c000810239007502980047080200800802008305d000a008e3008108e3
008108e3008108e300810aaa00630473001b0400004405c7ff210467ff0a
0a46ff7f0822006405d6ff660473ff60057cffeb0483ffd80682009305e5
ffd8043e005d05f3005d05fa005d044f005d061f00480676007600000000
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000074000000740000007400000074
000000740000007400000074000000740000007400000074000000740000
007400000074000000740000007400000184000001840000018400000184
000002ec000002ec000002ec000002ec000002ec000002ec000002ec0000
02ec00000454000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000005ae000005ae000005ae
000005ae000005ae000005ae000005ae000005ae000005ae000005ae0000
05ae000005ae000005ae000005ae000005ae000100000c0000f2003c006e
000500020010002f005600000290024d0004000200>
<0000005303ea0000000300000000021a00000000000300000001000a021a
0000000300000002000c02ac00000003000000030052027e000000030000
0004001802d00000000300000005001802e80000000300000006001c0300
00000003000000070064021a00000003000000080030032a000000030000
0009008a053a000000030000000d0d1805c40001000000000000010d12dc
0001000000000001000513e9000100000000000200061431000100000000
00030029141a0001000000000004000c14430001000000000005000c144f
0001000000000006000e145b0001000000000007003113e9000100000000
0008001812e3000100000000000900451469000100000000000d068c14ae
0003000104030002000e1b460003000104030004001a1b3a000300010405
0002000e1b600003000104050004001a1b540003000104060002000c1b7a
000300010406000400181b6e0003000104070002000c1b92000300010407
000400181b860003000104080002000c1bb2000300010408000400181ba6
0003000104090000021e031c0003000104090001000a021a000300010409
0002000c02ac00030001040900030052027e0003000104090004001802d0
0003000104090005001802e80003000104090006001c0300000300010409
000700621bbe00030001040900080030032a0003000104090009008a053a
000300010409000d0d2a1c2000030001040a0002000e1b4600030001040a
0004001a1b3a00030001040b000200141b9200030001040b000400201b86
00030001040c00020010295600030001040c0004001c294a00030001040e
00020008297200030001040e0004001429660003000104100002000e2986
0003000104100004001a297a0003000104130002000e29a0000300010413
0004001a29940003000104140002000c1b92000300010414000400181b86
0003000104150002000e29ba0003000104150004001a29ae000300010416
0002000e29d40003000104160004001a29c80003000104190002000c29ee
0003000104190004001829e200030001041b0002000e2a0600030001041b
0004001a29fa00030001041d0002000c1b9200030001041d000400181b86
00030001041f0002000c2a2000030001041f000400182a14000300010424
0002000e2a380003000104240004001a2a2c00030001042a0002000e2a52
00030001042a0004001a2a4600030001042d0002000c2a6c00030001042d
000400182a6000030001080a0002000e1b4600030001080a0004001a1b3a
0003000108160002000e29d40003000108160004001a29c8000300010c0a
0002000e1b46000300010c0a0004001a1b3a000300010c0c000200102956
000300010c0c0004001c294a00a900200032003000310035002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
000d000d0048006500620072006500770020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200063006f0070007900720069006700680074002000a9002000320030
003000330020002600200032003000300037002c002000520061006c0070
0068002000480061006e0063006f0063006b002000260020004a006f0068
006e00200048007500640073006f006e002e002000540068006900730020
006c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020006900730020006f00700065006e00200073006f00750072
0063006500200073006f00660074007700610072006500200075006e0064
0065007200200074006800650020004d004900540020004c006900630065
006e00730065003b002000730065006500200065006d0062006500640064
006500640020006c006900630065006e0073006500200064006500730063
00720069007000740069006f006e00200066006f00720020006400650074
00610069006c0073002e0041007200690061006c00200020006900730020
0061002000740072006100640065006d00610072006b0020006f00660020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e004d006f006e006f0074
007900700065003a0041007200690061006c00200052006500670075006c
006100720020004900740061006c0069006300200028004d006900630072
006f0073006f0066007400290041007200690061006c0020004900740061
006c0069006300560065007200730069006f006e00200036002e00390030
0041007200690061006c002d004900740061006c00690063004d005400a9
0020003200300031003500200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e0020000d000a000d000a004800650062
0072006500770020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200063006f00700079
00720069006700680074002000a900200032003000300033002000260020
0032003000300037002c002000520061006c00700068002000480061006e
0063006f0063006b002000260020004a006f0068006e0020004800750064
0073006f006e002e002000540068006900730020006c00610079006f0075
00740020006c006f00670069006300200066006f00720020004200690062
006c006900630061006c0020004800650062007200650077002000690073
0020006f00700065006e00200073006f007500720063006500200073006f
00660074007700610072006500200075006e006400650072002000740068
00650020004d004900540020004c006900630065006e00730065003b0020
00730065006500200065006d0062006500640064006500640020006c0069
00630065006e007300650020006400650073006300720069007000740069
006f006e00200066006f0072002000640065007400610069006c0073002e
004d006f006e006f00740079007000650020005400790070006500200044
0072006100770069006e00670020004f006600660069006300650020002d
00200052006f00620069006e0020004e006900630068006f006c00610073
002c0020005000610074007200690063006900610020005300610075006e
0064006500720073002000310039003800320059006f00750020006d0061
007900200075007300650020007400680069007300200066006f006e0074
0020006100730020007000650072006d0069007400740065006400200062
00790020007400680065002000450055004c004100200066006f00720020
007400680065002000700072006f006400750063007400200069006e0020
007700680069006300680020007400680069007300200066006f006e0074
00200069007300200069006e0063006c007500640065006400200074006f
00200064006900730070006c0061007900200061006e0064002000700072
0069006e007400200063006f006e00740065006e0074002e002000200059
006f00750020006d006100790020006f006e006c00790020002800690029
00200065006d0062006500640020007400680069007300200066006f006e
007400200069006e00200063006f006e00740065006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
0068006500200065006d00620065006400640069006e0067002000720065
0073007400720069006300740069006f006e007300200069006e0063006c
007500640065006400200069006e0020007400680069007300200066006f
006e0074003b00200061006e006400200028006900690029002000740065
006d0070006f0072006100720069006c007900200064006f0077006e006c
006f006100640020007400680069007300200066006f006e007400200074
006f002000610020007000720069006e0074006500720020006f00720020
006f00740068006500720020006f00750074007000750074002000640065
007600690063006500200074006f002000680065006c0070002000700072
0069006e007400200063006f006e00740065006e0074002e000d000d0054
0068006500200066006f006c006c006f00770069006e00670020006c0069
00630065006e00730065002c0020006200610073006500640020006f006e
00200074006800650020004d004900540020006c006900630065006e0073
0065002000280068007400740070003a002f002f0065006e002e00770069
006b006900700065006400690061002e006f00720067002f00770069006b
0069002f004d00490054005f004c006900630065006e007300650029002c
0020006100700070006c00690065007300200074006f0020007400680065
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200066006f00720020004200690062
006c006900630061006c00200048006500620072006500770020201c004c
00610079006f007500740020004c006f006700690063201d002000610073
0020006a006f0069006e0074006c007900200064006500760065006c006f
007000650064002000620079002000520061006c00700068002000480061
006e0063006f0063006b00200061006e00640020004a006f0068006e0020
0048007500640073006f006e002e0020000d000d005000650072006d0069
007300730069006f006e0020006900730020006800650072006500620079
0020006700720061006e007400650064002c002000660072006500650020
006f00660020006300680061007200670065002c00200074006f00200061
006e007900200070006500720073006f006e0020006f0062007400610069
006e0069006e00670020006100200063006f007000790020006f00660020
0074006800650020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
00200061006e00640020006100730073006f006300690061007400650064
00200064006f00630075006d0065006e0074006100740069006f006e0020
00660069006c00650073002000280074006800650020201c004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
006100720065201d0029002c00200074006f0020006400650061006c0020
0069006e00200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f00660074007700610072006500200077
006900740068006f00750074002000720065007300740072006900630074
0069006f006e002c00200069006e0063006c007500640069006e00670020
0077006900740068006f007500740020006c0069006d0069007400610074
0069006f006e002000740068006500200072006900670068007400730020
0074006f0020007500730065002c00200063006f00700079002c0020006d
006f0064006900660079002c0020006d0065007200670065002c00200070
00750062006c006900730068002c00200064006900730074007200690062
007500740065002c0020007300750062006c006900630065006e00730065
002c00200061006e0064002f006f0072002000730065006c006c00200063
006f00700069006500730020006f006600200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065002c00200061006e006400200074006f002000700065
0072006d0069007400200070006500720073006f006e007300200074006f
002000770068006f006d00200074006800650020004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
00650020006900730020006600750072006e006900730068006500640020
0074006f00200064006f00200073006f002c0020007300750062006a0065
0063007400200074006f002000740068006500200066006f006c006c006f
00770069006e006700200063006f006e0064006900740069006f006e0073
003a000d000d005400680065002000610062006f0076006500200063006f
00700079007200690067006800740020006e006f00740069006300650020
0061006e0064002000740068006900730020007000650072006d00690073
00730069006f006e0020006e006f00740069006300650020007300680061
006c006c00200062006500200069006e0063006c00750064006500640020
0069006e00200061006c006c00200063006f00700069006500730020006f
00720020007300750062007300740061006e007400690061006c00200070
006f007200740069006f006e00730020006f006600200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065002e000d000d00540048004500200053004f
004600540057004100520045002000490053002000500052004f00560049
00440045004400200027004100530020004900530027002c002000570049
00540048004f00550054002000570041005200520041004e005400590020
004f004600200041004e00590020004b0049004e0044002c002000450058
005000520045005300530020004f005200200049004d0050004c00490045
0044002c00200049004e0043004c005500440049004e0047002000420055
00540020004e004f00540020004c0049004d004900540045004400200054
004f0020005400480045002000570041005200520041004e005400490045
00530020004f00460020004d00450052004300480041004e005400410042
0049004c004900540059002c0020004600490054004e0045005300530020
0046004f00520020004100200050004100520054004900430055004c0041
005200200050005500520050004f0053004500200041004e00440020004e
004f004e0049004e004600520049004e00470045004d0045004e0054002e
00200049004e0020004e004f0020004500560045004e0054002000530048
0041004c004c002000540048004500200041005500540048004f00520053
0020004f005200200043004f005000590052004900470048005400200048
004f004c00440045005200530020004200450020004c004900410042004c
004500200046004f005200200041004e005900200043004c00410049004d
002c002000440041004d00410047004500530020004f00520020004f0054
0048004500520020004c0049004100420049004c004900540059002c0020
005700480045005400480045005200200049004e00200041004e00200041
004300540049004f004e0020004f004600200043004f004e005400520041
00430054002c00200054004f005200540020004f00520020004f00540048
004500520057004900530045002c002000410052004900530049004e0047
002000460052004f004d002c0020004f005500540020004f00460020004f
005200200049004e00200043004f004e004e0045004300540049004f004e
00200057004900540048002000540048004500200053004f004600540057
0041005200450020004f0052002000540048004500200055005300450020
004f00520020004f00540048004500520020004400450041004c0049004e
0047005300200049004e002000540048004500200053004f004600540057
004100520045002e000da9203230313520546865204d6f6e6f7479706520
436f72706f726174696f6e2e20416c6c2052696768747320526573657276
65642e200d0d486562726577204f70656e54797065204c61796f7574206c
6f67696320636f7079726967687420a92032303033202620323030372c20
52616c70682048616e636f636b2026204a6f686e20487564736f6e2e2054
686973206c61796f7574206c6f67696320666f72204269626c6963616c20
486562726577206973206f70656e20736f7572636520736f667477617265
20756e64657220746865204d4954204c6963656e73653b2073656520656d
626564646564206c6963656e7365206465736372697074696f6e20666f72
2064657461696c732e417269616c20697320612074726164656d61726b20
6f6620546865204d6f6e6f7479706520436f72706f726174696f6e2e4d6f
6e6f747970653a417269616c20526567756c6172204974616c696320284d
6963726f736f667429417269616c204974616c696356657273696f6e2036
2e3930417269616c2d4974616c69634d544d6f6e6f747970652054797065
2044726177696e67204f6666696365202d20526f62696e204e6963686f6c
61732c205061747269636961205361756e646572732031393832596f7520
6d617920757365207468697320666f6e74206173207065726d6974746564
206279207468652045554c4120666f72207468652070726f647563742069
6e207768696368207468697320666f6e7420697320696e636c7564656420
746f20646973706c617920616e64207072696e7420636f6e74656e742e20
20596f75206d6179206f6e6c792028692920656d62656420746869732066
6f6e7420696e20636f6e74656e74206173207065726d6974746564206279
2074686520656d62656464696e67207265737472696374696f6e7320696e
636c7564656420696e207468697320666f6e743b20616e64202869692920
74656d706f726172696c7920646f776e6c6f6164207468697320666f6e74
20746f2061207072696e746572206f72206f74686572206f757470757420
64657669636520746f2068656c70207072696e7420636f6e74656e742e0d
0d54686520666f6c6c6f77696e67206c6963656e73652c20626173656420
6f6e20746865204d4954206c6963656e73652028687474703a2f2f656e2e
77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e7365
292c206170706c69657320746f20746865204f70656e54797065204c6179
6f7574206c6f67696320666f72204269626c6963616c2048656272657720
d24c61796f7574204c6f676963d3206173206a6f696e746c792064657665
6c6f7065642062792052616c70682048616e636f636b20616e64204a6f68
6e20487564736f6e2e200d0d5065726d697373696f6e2069732068657265
6279206772616e7465642c2066726565206f66206368617267652c20746f
20616e7920706572736f6e206f627461696e696e67206120636f7079206f
6620746865204f70656e54797065204c61796f7574206c6f67696320666f
72204269626c6963616c2048656272657720616e64206173736f63696174
656420646f63756d656e746174696f6e2066696c6573202874686520d24c
61796f7574204c6f67696320536f667477617265d3292c20746f20646561
6c20696e20746865204c61796f7574204c6f67696320536f667477617265
20776974686f7574207265737472696374696f6e2c20696e636c7564696e
6720776974686f7574206c696d69746174696f6e20746865207269676874
7320746f207573652c20636f70792c206d6f646966792c206d657267652c
207075626c6973682c20646973747269627574652c207375626c6963656e
73652c20616e642f6f722073656c6c20636f70696573206f662074686520
4c61796f7574204c6f67696320536f6674776172652c20616e6420746f20
7065726d697420706572736f6e7320746f2077686f6d20746865204c6179
6f7574204c6f67696320536f667477617265206973206675726e69736865
6420746f20646f20736f2c207375626a65637420746f2074686520666f6c
6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f766520
636f70797269676874206e6f7469636520616e642074686973207065726d
697373696f6e206e6f74696365207368616c6c20626520696e636c756465
6420696e20616c6c20636f70696573206f72207375627374616e7469616c
20706f7274696f6e73206f6620746865204c61796f7574204c6f67696320
536f6674776172652e0d0d54484520534f4654574152452049532050524f
564944454420274153204953272c20574954484f55542057415252414e54
59204f4620414e59204b494e442c2045585052455353204f5220494d504c
4945442c20494e434c5544494e4720425554204e4f54204c494d49544544
20544f205448452057415252414e54494553204f46204d45524348414e54
4142494c4954592c204649544e45535320464f5220412050415254494355
4c415220505552504f534520414e44204e4f4e494e4652494e47454d454e
542e20494e204e4f204556454e54205348414c4c2054484520415554484f
5253204f5220434f5059524947485420484f4c44455253204245204c4941
424c4520464f5220414e5920434c41494d2c2044414d41474553204f5220
4f54484552204c494142494c4954592c205748455448455220494e20414e
20414354494f4e204f4620434f4e54524143542c20544f5254204f52204f
54484552574953452c2041524953494e472046524f4d2c204f5554204f46
204f5220494e20434f4e4e454354494f4e20574954482054484520534f46
5457415245204f522054484520555345204f52204f54484552204445414c
494e475320494e2054484520534f4654574152452e0d0041007200690061
006c002000430075007200730069007600610041007200690061006c0020
006b00750072007a00ed007600610041007200690061006c0020006b0075
00720073006900760041007200690061006c0020004b0075007200730069
0076006f0069007400750041007200690061006c002003a003bb03ac03b3
03b903b10041007200690061006c00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e002000200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002e000d000a000d000a00540068
006500200066006f006c006c006f00770069006e00670020006c00690063
0065006e00730065002c0020006200610073006500640020006f006e0020
0074006800650020004d004900540020006c006900630065006e00730065
002000280068007400740070003a002f002f0065006e002e00770069006b
006900700065006400690061002e006f00720067002f00770069006b0069
002f004d00490054005f004c006900630065006e007300650029002c0020
006100700070006c00690065007300200074006f00200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c00200048006500620072006500770020201c004c0061
0079006f007500740020004c006f006700690063201d0020006100730020
006a006f0069006e0074006c007900200064006500760065006c006f0070
00650064002000620079002000520061006c00700068002000480061006e
0063006f0063006b00200061006e00640020004a006f0068006e00200048
007500640073006f006e002e0020000d000a000d000a005000650072006d
0069007300730069006f006e002000690073002000680065007200650062
00790020006700720061006e007400650064002c00200066007200650065
0020006f00660020006300680061007200670065002c00200074006f0020
0061006e007900200070006500720073006f006e0020006f006200740061
0069006e0069006e00670020006100200063006f007000790020006f0066
00200074006800650020004f00700065006e00540079007000650020004c
00610079006f007500740020006c006f00670069006300200066006f0072
0020004200690062006c006900630061006c002000480065006200720065
007700200061006e00640020006100730073006f00630069006100740065
006400200064006f00630075006d0065006e0074006100740069006f006e
002000660069006c00650073002000280074006800650020201c004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065201d0029002c00200074006f0020006400650061006c
00200069006e00200074006800650020004c00610079006f007500740020
004c006f00670069006300200053006f0066007400770061007200650020
0077006900740068006f0075007400200072006500730074007200690063
00740069006f006e002c00200069006e0063006c007500640069006e0067
00200077006900740068006f007500740020006c0069006d006900740061
00740069006f006e00200074006800650020007200690067006800740073
00200074006f0020007500730065002c00200063006f00700079002c0020
006d006f0064006900660079002c0020006d0065007200670065002c0020
007000750062006c006900730068002c0020006400690073007400720069
0062007500740065002c0020007300750062006c006900630065006e0073
0065002c00200061006e0064002f006f0072002000730065006c006c0020
0063006f00700069006500730020006f006600200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
00740077006100720065002c00200061006e006400200074006f00200070
00650072006d0069007400200070006500720073006f006e007300200074
006f002000770068006f006d00200074006800650020004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
007200650020006900730020006600750072006e00690073006800650064
00200074006f00200064006f00200073006f002c0020007300750062006a
00650063007400200074006f002000740068006500200066006f006c006c
006f00770069006e006700200063006f006e0064006900740069006f006e
0073003a000d000a000d000a005400680065002000610062006f00760065
00200063006f00700079007200690067006800740020006e006f00740069
0063006500200061006e0064002000740068006900730020007000650072
006d0069007300730069006f006e0020006e006f00740069006300650020
007300680061006c006c00200062006500200069006e0063006c00750064
0065006400200069006e00200061006c006c00200063006f007000690065
00730020006f00720020007300750062007300740061006e007400690061
006c00200070006f007200740069006f006e00730020006f006600200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002e000d000a000d000a0054
0048004500200053004f0046005400570041005200450020004900530020
00500052004f005600490044004500440020002700410053002000490053
0027002c00200057004900540048004f0055005400200057004100520052
0041004e005400590020004f004600200041004e00590020004b0049004e
0044002c002000450058005000520045005300530020004f005200200049
004d0050004c004900450044002c00200049004e0043004c005500440049
004e004700200042005500540020004e004f00540020004c0049004d0049
00540045004400200054004f002000540048004500200057004100520052
0041004e00540049004500530020004f00460020004d0045005200430048
0041004e0054004100420049004c004900540059002c0020004600490054
004e00450053005300200046004f00520020004100200050004100520054
004900430055004c0041005200200050005500520050004f005300450020
0041004e00440020004e004f004e0049004e004600520049004e00470045
004d0045004e0054002e00200049004e0020004e004f0020004500560045
004e00540020005300480041004c004c0020005400480045002000410055
00540048004f005200530020004f005200200043004f0050005900520049
00470048005400200048004f004c00440045005200530020004200450020
004c004900410042004c004500200046004f005200200041004e00590020
0043004c00410049004d002c002000440041004d00410047004500530020
004f00520020004f00540048004500520020004c0049004100420049004c
004900540059002c0020005700480045005400480045005200200049004e
00200041004e00200041004300540049004f004e0020004f004600200043
004f004e00540052004100430054002c00200054004f005200540020004f
00520020004f00540048004500520057004900530045002c002000410052
004900530049004e0047002000460052004f004d002c0020004f00550054
0020004f00460020004f005200200049004e00200043004f004e004e0045
004300540049004f004e0020005700490054004800200054004800450020
0053004f0046005400570041005200450020004f00520020005400480045
00200055005300450020004f00520020004f005400480045005200200044
00450041004c0049004e0047005300200049004e00200054004800450020
0053004f004600540057004100520045002e000d000a0041007200690061
006c0020004900740061006c00690071007500650041007200690061006c
002000440151006c00740041007200690061006c00200043006f00720073
00690076006f0041007200690061006c0020004300750072007300690065
00660041007200690061006c0020004b0075007200730079007700610041
007200690061006c00200049007400e1006c00690063006f004100720069
0061006c0020041a044304400441043804320041007200690061006c0020
004b00750072007a00ed007600610041007200690061006c002001300074
0061006c0069006b0041007200690061006c00200050006f016100650076
006e006f0041007200690061006c0020006e00670068006900ea006e0067
0041007200690061006c002000450074007a0061006e00610000410c0054
02b202b202b201eb001d001f02b102b0003c001f02b0b3061d1f30bb02aa
0001004002a8b2393340b802a8b310153240b802a8b2073340b802a9b30c
12327f411102a600af02a600bf02a600ef02a60004003002a6004f02a600
5f02a60003004002a6b28f3340b802a6b25f3340b802a6b34e513280b802
a6b34c4d3240b802a6b340483240b802a6b30a0d3240b802a6b3093a3240
b802a6b330333280b802a4b345783240b802a4b3323a3280b802a4b32a31
3240b802a4b32425327f411002a4000100ef02a40001000f02a4002f02a4
003f02a4007f02a40004004002a4b3151d3280b802a4b309143240b802a3
b31a1b320fbf02a3007f02a300ef02a30003004002a3400a091432124f06
4f0702ef413701eb0001009f01eb0001007f01eb0001005f01eb0001003f
01eb0001002f01eb0001000f01eb0001007f01ea000100ef01ea000100bf
01ea000100af01ea0001002f01ea0001003f01ea0001004f01ea0001006f
01ea0001007f01ea000101ed01ed01ec01ec01eb01eb01ea01ea4012002c
01001f01102c01101f01402c01401f01b90109010bb2341f91b8010b4037
341f2e20431f3220431f3320471f2c20431f1f20431f7b2a481f2d2a481f
212a441f370100010100090102000800171700000012110840b801acb7fe
870dfd870d0009b8013fb22a4c1f4109013a00ba0401001f0136001f019a
001f0104b22a721fbe01010020019a001f0100002002abb21ffb2db80156
b21ffa1fb80801b21ff91fb8020140131ff81fe41ff71fbb1ff51f4a1fc9
2aab1fb92db8019ab21fb81fb80401b21fa02ab802ab400f1f8b1f521f7b
2ae41f781f6c1f6e20b80401b21f6c21b80401400b1f632aab1f5a2a5a1f
5820b802abb21f4e20b80156b21f471fb8019ab61f452aab1f442ab80101
b61f401f891f332db80401b21f3221b80401b61f311f721f2e1fb8019ab2
1f2c1fb80401b21f291fb80801b21f281fb80801b61f271f6c1f2221b804
0140451f550d090d093790dc0790a80790a607907e07904107903b079036
07903507903007902f07902b07902507901d071408120810080e080c080a
080808060804080208000814b8ffe0402b00000100140610000001000604
000001000410000001001002000001000200000001000002010802004a00
b013034b024b5342014bb0c063004b6220b0f65323b8010a515ab0052342
01b0124b004b544218b0382b4bb807ff52b0372b4bb007505b58b101018e
59b0382bb00288b801005458b80119b101018e851bb0124358b900010119
858d1bb9000101ff858d59590016763f183f123e113946443e113946443e
113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b
2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b4b5079b9001f0158b3071f3d07
2b2b4b5379b900900158b307903d072b2b181db0964b5358b0aa1d59b032
4b5358b0ff1d594bb09353205c58b901ae01ac4544b901ad01ac45445958
b9032c01ae455258b901ae032c4459594bb8019a53205c58b9003f01ae45
44b901ae01ae45445958b908d6003f455258b9003f08d64459594bb80401
53205c58b9002301ae4544b9002001ae45445958b916200023455258b900
2316204459594bb8040153205c58b9001e01ad4544b9002a01ad45445958
b917e0001e455258b9001e17e04459594bb8040153205c58b1ba234544b1
232345445958b9162000ba455258b900ba16204459594bb03c53205c58b1
1f1f4544b1211f45445958b90102001f455258b9001f01024459594bb046
53205c58b11f1f4544b12d1f45445958b9012e001f455258b9001f012e44
59594bb8030153205c58b11f1f4544b11f1f45445958b90d20001f455258
b9001f0d204459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b45695342014b5058b108
004259435c58b1080042591610703eb0124358b90d193ea51bba00d203eb
000b2b59b00a2342b00b2342003f3f182b103c012f060cb0062342b00723
42b0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b012
4358b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9
187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b2b2b2b2b
2b2b2b2b7474757575750018456944456944456944456944737373737373
7373757373737373737374004bb02a534bb03f515a58b1070745b0406044
59004bb030534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03c
515a58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc0
604459435c58b64f2c014f1f01372b7474592b732b2b2b7373742b2b2b2b
2b2b2b2b2b2b2b2b74732b2b2b2b74002b2b2b00184569442b0000>
[1455 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 388 75 <000100440000043b05ba0018011440774704012607011f0c1f0d02090125
084901460857038708ce110767077a087a11a911bb08bb1106040b040e02
140b140e020317180202181823000114000001090c0c230d10140d0d1013
1f0607022801000d28000a0909090c0c580d098f10011010092f0d3f0d7f
0dcf0d04100d4f0d5f0d6f0d040d0db8027d402d1a090202091818580009
1201010101093000012f003f004f005f000400005619090100100d100017
0d17563e182b2b2b2b103c103c012b7a4e10f001182f5d722b3c012f5d2b
7a4d10f101182f2b3c012f2b7a10f001182f5d712b3c012f5d2b7a10f101
182f2b7ac001182f003f2b3c003f2b3c003fed87052e2b0e7d10c487052e
182b7d10c4070e3c3c3130015d5d5d5d72005d7133013303363633321615
140703231336353426232206060703440132b57565ae5c84922083b5871d
484462b2652a5f05bafdcd62558b723896fd8d02838c24344267b3c7fe38
>HIBBAA+Arial-ItalicMT AddT42Char 
2 748 83 <0002ffebfe690448043e0011002100fa4022451f56045e0f5a156b0f053a
15351f45044d0f49150525042e0f2b1537043c0f0510b8fff040510e1134
1c200e113459187801791889019700f821061918260c3801480167106818
06082101121102031d170211112300011400000110100e1d1f0607022801
06171f0e0b1128000e09201a001a5f1a021ab80221402400090202091111
58000988010101010910000100004c090022280110001700220acb3e182b
2b103c2b2b3c2b10c0012b7af101182f5d2b3c012f5d2b7a10f101182f2b
7ac001182f2b7a10f05d01182fed003f2b3c003fed3f2b3c003ffd11392f
87052e2b7d10c400111239870ec4313001715d5d2b2b005d5d5d03013307
3636333216151402060623222703131417161633321235342623220e0215
0133a71f5d935298c86ea0a456bf6978b11119724b9cc0816045766542fe
6905bd94614bddcea6feefa64ec2fdbf0349772e4150015fb787934991d2
>HIBBAA+Arial-ItalicMT AddT42Char 
2 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>HIBBAA+Arial-ItalicMT AddT42Char 
HIBBAA+Arial-ItalicMT /CharStrings get begin
/h 75 def
/p 83 def
end
HIBBAA+Arial-ItalicMT /Encoding get
dup 104 /h put
dup 112 /p put
pop
end
%ADOEndSubsetFont
/OPRHDV+Arial-ItalicMT /HIBBAA+Arial-ItalicMT findfont ct_VMDictPut
/OPRHDV+Arial-ItalicMT*1 
[104{/.notdef}rp /h 7{/.notdef}rp /p 143{/.notdef}rp]
OPRHDV+Arial-ItalicMT nf
OPRHDV+Arial-ItalicMT*1 [36.0321 0 0 -36.0321 0 0 ]msf
672.246 298.913 mo
(p)sh
692.28 298.913 mo
(h)sh
615.384 312.338 mo
615.384 357.941 li
@
649.48 357.766 mo
671.867 335.374 li
648.927 312.433 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if

2 0 3 <> OPRHDU+ArialMT AddT42Char 
2 2360 68 <0002004affe8041c043e002800370322b0852b58402c090d092a190d1a2a
290d2a2a390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a16
9b1aa90d1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619
bb28c419cf28d215dd28084416011eb8fff440110c0c065512120c0c0655
050c0c0c065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904
482c5608592b6608692b760c870cc90cf90df92b1137340e0104102f2434
17322114185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e03
0ebbfffa000b000b0140b7560e0c0f0f02550eb8ffeab4101002550eb8ff
f44014101006550e0c0d0d06550e060f0f06550e260d0db80140b4560e18
0c0cb80140b5560e0e1c0317b802aab3182c0b0bb80140400e56182c0a0a
42551895141c1c0700b8fff440110c0c06550045270a321c030b29611061
004110fff6000b000b014000560000fff8000c000c014000560000fffc00
0d000d0140400b5600060d0d025500252124b8ffecb41010025524b8ffec
400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b0655
24b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b40
0e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e
025526bbfff4000d000d0140b356263139b8ffc0400d1e23343039c03902
a039013917b8fff4b71010065517080c0cb80140400956172518222f080d
0db80140b4562f0c0c0cb80140b4562f0e0b0bb801404011562f24bf06cf
06021f063f060206140b0bb80140b45606140d0db80140b45606080c0cb8
0140402e56060e0f0f0255060c0d0d025506180c0c0255060c0b0b025506
0c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b2b2b2b
2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b2b2b2b
2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2b2be41112392f2b2b2b2b2b
2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d
2b2b00711bb700032b2b0c0c0e29b8032db76c0e0e1c270a0332b8032db7
6c030b1817171c14b8032fb26c1c0700183f2b322f333f2b3f11392f2b39
113311123930315925060623222635343636373637363736353427262322
0607273e02333216161716151514161723260306070e0215141633323637
3635033c64b96aafbc477348356bda67013345887f791db0186ed08988aa
5010091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d
1a24250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d
2f48605b4f3d7700>OPRHDU+ArialMT AddT42Char 
2 3952 70 <00010050ffe803ed043e001a0261b0852b58bc0017fff0000c000c0140b4
560a080c0cb80140b45609080c0cb80140b4560f080c0cb80140b4561008
0c0cb80140b45611080c0cb901400056b1020243545840340e7f0f010f0b
01400050007000030004121c0b07181c040b010e1507080e0e0255070c0d
0d0255070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10
c45d3210c45d3231301b4047090c011f1c4313431753135317601360179b
029b039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509
b60ab50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa40263000
40005000600070009000a000e000f00009000f0f0b000004121c0b07181c
040b1c0f010f410afff4000c000c01400056000ffff2000b000b0140400f
560f240e080d0d06550e221b000100410afff4000c000c014000560000ff
ee000b000b0140400f5600240b2b1f010100010101400e2bb80140b45601
400d0db80140b45601400c0cb80140b45601360b0bb8014040205601400b
0b065501401010065501480c0c0655011a0d0d065501491c15080d0db801
40b456150c0c0cb80140b456150e0b0bb801404021561524cf07011f073f
0702070e0b0b0655070a1010065507120c0c0655070c0d0db80140b45607
0c0c0cb80140b65607311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f6
2b2b2b2b2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42b
ed2b2b72003fed3fed12392f11392f105de4105de43130005d71015d7159
012b2b2b2b2b2b1b400a010000120e0f0f120418b8032fb46c040b0b12b8
032fb26c0b0700183f2b3f2b11392f3311392f3330315901170606232200
1134123633321617072626232206151416333236033cb11defaedafef772
e989addc1faf197f5a88aaa4846a8e018517b7cf011d010aac010281afa1
1b6b6cc3d3d6c282>OPRHDU+ArialMT AddT42Char 
2 4650 71 <00020046ffe803df05ba0011001d0213b0852b58407c0a02040d250d340d
440d053514351c5702540a5214531c6702640565096314601cc01fd405d5
13dd19e513e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f
901f072e02240d2e163a02350d4b02450d4614491c570a560d670de506e7
16fa01f40e100115030e0b100f001b1c0b0711000a151c030b18410afff8
000d000d014000560018fff8000c000c0140b45618330100bbfff2000b00
0b0140b4560025110f4110fff8000d000d01400056000ffff4000c000c01
400056000ffff2000b000b01404024560f251010d0110110114011601180
11041f400b0b02551f400d0d025511121010025511b8fff440110f0f0255
11060e0e025511180d0d025511b8fff2400b0b0b0655110e1010065511b8
ffeeb40c0c065511b8fff8b40d0d065511bbfff8000c000c0140b6561174
12080d0db80140b456120c0c0cb80140b456120e0b0bb80140b656122407
100c0cb80140b45607100d0db80140403b56bf07cf07df07ff07041f073f
074f0703071e0b0b025507180c0c0255071e0d0d0255070c0b0b0655070c
0d0d0655071a0c0c065507191e3450182b4e10f42b2b2b2b2b2b5d712b2b
4ded2b2b2bfd2b2b2b2b2b2b2b2b2b2b2b5d713c10ed2b2b2b10fd2b3ce4
2b2b003fed3f3c3fed3f3c11391112393130005d01715d00711bb10315b8
032f400a6c030b010e0e000a0b1bb8032fb46c0b070f0000183f3f2b3f33
12393f2b3031592135062322262635341236333216171133110114163332
36353426232206033865c47fd5756ad48360962fb3fd20ac7576a5a87b78
a1869e8cfba39f01038a5141020efa460212cccac1c6daccc400>OPRHDU+ArialMT AddT42Char 
2 5276 72 <0002004bffe8041e043e0015001d0216b0852b5840171f001c150255035d
055d09550b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d
0d06551d1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c
51125c19521c61126d1a611c78067815f602f618100016010f0d17175016
6016701603161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b410
10025501b8ffc0400e101006551001010195131c040b174110fff0000c00
0c014000560017fff2000b000b014000560017fff8000d000d0140b35617
400db8ffdcb40d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8
ffc04009272a34b00d010d1a1fb8ffc0b32526341fb8ffc0b71e2334301f
011f16bbfffc000d000d0140b656163310080c0cb80140b456100e0b0bb8
0140b45610080d0db8014040135610240740242a341f073f074f0703070c
0c0cb80140b456070c0d0db80140402b5607200b0b025507180c0c025507
1c0d0d0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b
4e10f42b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b
2b4ded2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912
393130015d005d2b2b2b0171721b401d0000500070008000900005300070
0080009000c000d000060000041016b8032f400d6c100010301002130310
0a0413b8032fb46c040b0a1bb8032fb26c0a0700183f2b3f2b12395f5e5d
2f2b11332f5d713031590117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>OPRHDU+ArialMT AddT42Char 
2 5918 73 <000100130000028005d30017015eb0852b58401e1409010f192f19301940
1970199b0c9c0da90d081a0d280db019c0190419b8ffc0401f1a1f341d08
0d030c0f1c0a0115022b1413040306000a9f140114ff130e0b0bb80140b7
56134004170e0b0bb80140b45617080d0db80140b456170c0c0cb8014040
0b5617250400030292010100b8ffc0b331383400b8ffc0402b1c1f349000
0119400f0f025519400d0e025500141010025500280f0f025500220e0e02
55002c0d0d025500b8fff2400b0c0c025500140b0b065500b8ffeab41010
065500b8ffe6b40f0f065500b8fffab70c0c065500a31819bc01ba002100
f6010a00182b2bf62b2b2b2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced2b
2b2b10ed2bed5d003f3f3c3c3cfd3c3fed39113931304379401410110609
0706080602061009121b0011060f1b012b012b2a8181012b715d00721bb5
000a16130302b8032db46c03060a0fb80332b26c0a0100183f2b3f2b3332
3f303159331123353335343736363332170726232206151533152311b29f
9f131a83764c5c1b38325244cfcf039a8c716b344657129d0a4660628cfc
6600>OPRHDU+ArialMT AddT42Char 
2 7022 75 <00010087000003e805ba001401c9b0852b58b90016ffc0b315173403b8ff
e0400e0d0d0655250435034503ba0d0403b8ffe040151719341708110c11
14030501000f1c0507140b0a0c4110fff8000d000d01400056000cfff200
0b000b01400056000cfff4000c000c01404027560c250940333634ff0901
c0090116400b0b025516401010025509281010025509140e0e025509b8ff
ec40110d0d025509040c0c0255091a0b0b025509b8fff6400b0b0b065509
141010065509b8fff8400b0d0d0655090a0f0f065509b8fff6b60c0c0655
094e16b8ffc04017343634b016f016027016a016b016ff1604160214080d
0db80140b456140c0c0cb80140b456140e0b0bb80140b45614250100b8ff
c04010333634f0000100002000d000e0000400b8fffab41010025500b8ff
fa40170e0e025500040c0c025500080b0b025500040b0b065500b8fffa40
160f0f065500020c0c065500020d0d0655004e154750182b10f62b2b2b2b
2b2b2b2b5d712b3cfd2b2b2b3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b
5d712bed2b2b2b003f3c3fed3f1139113901123931304379400e060e0725
0e060c1b010d080f1b01002b012b2b81002b5d2b012b1bb60b0a000a0305
0fb80330b46c0507010000183f3f2b393f3f303159331133113633321616
15112311342623220606151187b47ec076ae4bb4756b508d3c05bafdf292
5da49cfd5f02a1877b538e7dfdbb>OPRHDU+ArialMT AddT42Char 
2 7546 76 <000200880000013c05ba00030007020ab0852b58b3020a0b0bb80140b456
030a0b0bb80140b456060a0b0bb80140b456070a0b0b4119014000560001
fffc000b000b014000560000fffc000b000b014000560005fffc000b000b
014000560004fffc000b000b0140b456020b0c0cb80140b456030b0c0cb8
0140b456060b0c0cb80140b456070b0c0c4119014000560001fffd000c00
0c014000560000fffd000c000c014000560005fffd000c000c0140005600
04fffd000c000c0140b45602040d0db80140b45603040d0db80140b45606
040d0db80140b45607040d0d4119014000560001fffc000d000d01400056
0000fffc000d000d014000560005fffc000d000d014000560004fffc000d
000d014040375609360b0b02554f099009a009b009c009df09f009070009
1f09700980099f09b009c009df09e009ff090a1f09010001070402030906
03bbffc0000d000d0140402a56037e0100060506040a0607250500049f04
a004b004c004e00406c004f0040200042004d004e0040404b8fff8b41010
025504b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b0655
04b8ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e
084750182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b0111
123939111239393130015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b1bb7040a05060040010000183f1acd3f3f3031591335
33150311331188b4b4b404ebcfcffb150426fbda>OPRHDU+ArialMT AddT42Char 
2 8106 80 <0001008700000626043e0023036fb0852b5841920013fff2000b000b0140
00560010fff2000b000b014000560012fff2000b000b014000560011fff2
000b000b01400056001dfffc000d000d01400056001cfffc000d000d0140
0056001bfffc000d000d01400056001afffc000d000d01400056001dfffc
000c000c01400056001cfffc000c000c01400056001bfffc000c000c0140
0056001afffc000c000c01400056000cfffe000c000c01400056000dfffe
000c000c01400056000efffe000c000c01400056000ffffe000c000c0140
00560013fff2000c000c014000560010fff2000c000c014000560012fff2
000c000c014000560011fff2000c000c014000560013fff8000d000d0140
00560010fff8000d000d014000560012fff8000d000d014000560011fff8
000d000d01400056000dfff4b40d0d065508b8fff4b40d0d065509b8ffd8
404d0b0d342504e404e409e117e52005d505f620021708202309181b2009
0303231e1c06151c0b0b06070106231a19100ad025019025a02502251717
1a0e2590110111041010025511180f0f025511b8ffec400b0e0e02551114
0c0c025511b8ffe840170b0b025511020b0b0655110c1010065511060f0f
065511b8fffab40c0c065511b8fff8b40d0d065511b8015db318080c0cb8
0140b456180e0b0bb80140b45618040d0db80140400d561825901b011b18
0f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee40110b0b0255
1b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f06551bb8
fffcb40c0c06551bb8015db6000233230e0b0bb80140b45623080d0db801
40b456230c0c0cb80140401456232501d000019000a000021f003f004f00
0300b8fffe401d0e0e025500100d0d025500100c0c0255000c0b0b025500
160b0b065500b8fffcb41010065500b8fff440140f0f0655000a0c0c0655
000e0d0d065500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b
2b5d71723c4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b
2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed
11173901111239123931304379400e0c141326140c111b01120d151b0100
2b012b2b81015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b1b400a100a1a0a000a01060b15b80330b66c0b07090306
1eb80330b26c060700183f2b32323f2b3f3f3f3f30315933113315363633
321617363332161511231134262623220615112311342623220606151187
a132a66a76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258
baafb6fd27029d6c5f3a95a4fd9702b27878509a91fdd900>OPRHDU+ArialMT AddT42Char 
2 9090 81 <00010087000003e6043e001601e6b0852b5840130503061302a810b810e3
03e713f003f6130604b8fff040220b0d347910019810d018e018ff180420
08140e1416121c05070106160d0a0d0e0c0e4110fff8000d000d01400056
000efff2000b000b01400056000efff4000c000c0140401c560e24184010
10025518400b0b02550b28101002550b140e0e02550bb8ffec40110d0d02
550b040c0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550b
b8fff9400b0d0d06550b0a0f0f06550bb8fff640120c0c06550b40333634
ff0b01ff0b010b4e18b8ffc0401a343634b018f018027018a018b018c018
04180302331516080d0db80140b456160e0b0bb80140b456160c0c0cb801
40b45616250100b8fff6b41111025500b8fffab41010025500b8fffa4017
0e0e025500040c0c0255000a0b0b025500040b0b065500b8fffa40110f0f
065500020c0c065500040d0d065500b8ffc04012333634f0000100002000
d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b2b2b3cf43c
105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c
3f3fed11390112393130437940160611090a080a070a0306102611060e1b
010f0a121b01002b012b2b2a81015d71002b5d711b40090d0a160a010603
0512b80330b26c050700183f2b323f3f3f30315933113315363332161617
1615112311342626232206151187a275dd60a150100ab42a6b4873a70426
97af45704d327dfd7302866e6d4192ccfdbc>OPRHDU+ArialMT AddT42Char 
2 9648 82 <00020044ffe80427043e000d001901ffb0852b58b615180d0d065513b8ff
e8b40d0d06550fb8ffe840650d0d065519180d0d065512070a190c470648
0856065908670669080834103a123a16351845104b124b1645185c055c09
52105d125d1652186d056d0964106d126d1664187701150906050d5b0354
05540a5b0c6c036505650a6c0c0a171c0407111c0b0b144110fff2000b00
0b014000560014fff4000c000c014000560014fff8000d000d0140401056
14241b400d0d02551b400b0b025507b8ffea40110f0f025507180d0d0255
07100b0b025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f
0f065507b8fff0b40c0c065507b8ffc0400e242534300701000710072007
0307bbfff4000d000d0140b6560731df1b011bb8ffc0400b1e2334301b01
1b0e080d0db80140b4560e0c0c0cb80140b4560e0e0b0bb801404041560e
24000c0e0f025500120d0d0255000c0c0c0255001c0b0b0255000e0b0b06
55000e0d0d0655000c1010065500160c0c065500402425341f003f000200
0c0d0db80140b456000c0c0cb80140b456000c0b0bb80140b65600311a34
37182b10f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d
2b2b2b2b2b2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c5840
09530553096205620904015d59002b2b2b2b1bb10b11b8032fb46c0b0b04
17b8032fb26c040700183f2b3f2b30315913103736333200151406062322
0013141633323635342623220644a489c5db01167beb8bdffeedb9b28786
b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>OPRHDU+ArialMT AddT42Char 
2 10246 83 <00020087fe690421043e0012001e01d5b0852b5840740c102d103d104b10
043f20b020021f20290c231d3215321d421d70209020083a173a1b4a174a
1b59085b0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee4
14e41ee020ff201623042b102b1535043a1046044a105a10e50beb1dfe10
0b110e03161c1c06070106161c0e0b000e194110fff2000b000b01400056
0019fff4000c000c014000560019fff8000d000d0140401c561924d00a01
100a400a600a800a0420400b0b025520400d0d02550ab8ffe6400b0f0f02
550a180d0d02550ab8fffab40c0c02550ab8ffeeb40b0b06550ab8fff4b4
0f0f06550ab8ffe8400f0c0c06550a74011333023312080d0db80140b456
120e0b0bb80140b456120c0c0cb8014040195612250000c001019001a001
b001f001041f013f014f010301b8fffc401d0e0e025501100d0d02550110
0c0c025501100b0b0255010c0b0b065501b8fff6b41010065501b8fffc40
160f0f0655010c0c0c065501120d0d065501191f473718012b4e10f42b2b
2b2b2b2b2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b2b2b2b2b2b2b2b5d
71ed2b2b2b003f3fed3f3fed113912393130005d015d717200711bb4000e
110e16b8032fb76c0e0b010603061cb8032db26c060700183f2b323f3f2b
393f30315913113315363633321616151402062322262711031416333236
35342623220687a43a926888d06a75df7b5a8f2e11a67678aba77473b1fe
6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbcad7>OPRHDU+ArialMT AddT42Char 
2 10812 84 <00020048fe6903e0043e0010001c01beb0852b58406c0b022b022a183b02
4b02790c063f153f194b19901ea01e053413341b3f1e4413441b5313531b
6313631b601e801ed406d512e606e90cea18102902220c2b153902350c49
02460c5a026902d90cdb18e316e919e61bfc020f01040d141a1c0b070e06
141c040b000e170e33004110fff2000b000b014000560000fff4000c000c
014000560000fff8000d000d014040245600251010d00f01100f400f600f
800f041e400b0c02551e400d0d02550f12101002550fb8fff440110f0f02
550f060e0e02550f160d0d02550fb8fffe400b0c0c02550f16101006550f
b8ffe8b40c0c06550fb8fff4400a0d0d06550f7411080d0db80140b45611
0c0c0cb80140b456110e0b0bb801404017561124bf07cf07df07ff07041f
073f074f0703070c0d0db80140b456070c0c0cb8014040285607240b0b02
55071a0c0c025507220d0d025507160c0c0655071a0d0d065507191d1e74
213450182b2b4ef42b2b2b2b2b2b2b5d714ded2b2b2bfd2b2b2b2b2b2b2b
2b2b2b5d713c10fd2b2b2bf43c003f3fed3f3fed113912393130005d015d
7100711bb4000e010414b8032fb76c040b0e060d0b1ab8032db26c0b0700
183f2b323f3f2b393f303159011106062322001134363633321735331101
1416333236353426232206032c2a9755bdfeef6fd37ec571a2fd21ac7873
a6af7675a3fe6902083b4e012e0107a0fe83a68efa4303adcdcdc3c7d4d6
c700>OPRHDU+ArialMT AddT42Char 
2 12876 87 <00010024fff2022a05990017016eb0852b584120000cfffe000c000c0140
0056000bfffe000c000c014000560008fffe000c000c014000560007fffe
000c000c014000560006fffe000c000c01400056000affc0b323263409b8
ffc0402423263480190100010c0d0a0103001610092b0f0a06161c030b0f
10220022010d12080d0db80140b456120e0b0bb80140b456120a0c0cb801
4040225612250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b1bb10316b80332b46c030b0100b8033240096c010a0d0d110e0a09b803
2db26c0a0600183f2b3332322f3f2b3f2b30315925170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>OPRHDU+ArialMT AddT42Char 
2 13318 88 <00010083ffe803e00426001801b7b0852b58b9001affc040091517340220
1316340fb8fff040191214342b1301240813160c0113160b06000a111c03
0b0033164110fff8000d000d014000560016fff2000b000b014000560016
fff4000c000c0140401c5616251817403336341a40101002551728101002
5517120e0e025517b8ffec400b0d0d025517040c0c025517b8fff4400b0b
0b065517141010065517b8fff8400b0d0d0655170c0f0f065517b8fff640
0d0c0c0655ff1701c01701174e1ab8ffc04016343634b01af01a02701aa0
1ab01aff1a041a0c080d0db80140b4560c0e0b0bb80140b4560c0c0c0cb8
0140b3560c2509b8ffc04010333634f0090100092009d009e0090409b8ff
f8b41010025509b8fff840110e0e025509040c0c0255090a0b0b065509b8
fff640160f0f065509020c0c065509020d0d0655094e194750182b10f62b
2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b2b2b2b2b2b2b2b
2b3cfd2b2b2be4003fed3f3f3c39390111123931304379401a04100e0d0f
0d0206070806080508030610040c1b000d08111b00002b012b2a2a81005d
012b2b2b1bb4000a010311b80330b66c030b16060a0600183f3f3f2b323f
30315921350623222626272635113311141716163332363635113311033f
7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35730292fdb38d3147
51538f880239fbda>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/space 3 def
/a 68 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/h 75 def
/i 76 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/q 84 def
/t 87 def
/u 88 def
end
OPRHDU+ArialMT /Encoding get
dup 32 /space put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 46{/.notdef}rp /a 
/.notdef /c /d /e /f /.notdef /h /i 
3{/.notdef}rp /m /n /o /p /q 2{/.notdef}rp /t 
/u 138{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
620.871 352.733 mo
(0)sh
OPRHDV+Arial-ItalicMT*1 [36.0321 0 0 -36.0321 0 0 ]msf
672.246 361.882 mo
(p)sh
692.28 361.882 mo
(h)sh
%ADOBeginSubsetFont: QJJAAA+Symbol Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+Symbol def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 104 /eta put
def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/eta <1C60D8A8C9B7C0544EDD7092FECC869D1B853C9DCD5A39F5D9D8A38C29
E61BA916A63ECE11F5C723E20ABC2403043736CF40AF3E9CD69DB5982E11FA2E
4150BE26A4C105C5AC6A768926688467B7755E627C52B396129D47F1E9496CC3
8A295993D85544D1386EAE522950515D00B014643A4FE30F1721401F8A7989C1
58645DF529F244936C5ED8FB30CB1FA3A9790F329023C98B8D5F7E52F501669B
D5DDD8FF366CFDE97EBC4A95D8F9275C527E67F81A8899> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OPRHDW+Symbol /QJJAAA+Symbol findfont ct_VMDictPut
/OPRHDW+Symbol*1 
[104{/.notdef}rp /eta 151{/.notdef}rp]
OPRHDW+Symbol nf
OPRHDW+Symbol*1 [58.5521 0 0 -58.5521 0 0 ]msf
364.369 305.856 mo
(h)sh
%ADOBeginSubsetFont: GFNBAA+CourierNewPS-BoldItalicMT Initial
ct_T42Dict begin
-0.102 -0.375 0.836 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+CourierNewPS-BoldItalicMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32f464bde3000000cc000000606376
7420b42e8d030000012c0000071e6670676d80f88ab60000084c00000814
676c796635839cda00008c080000012668656164c422de8c000010600000
0036686865610c9800a00000109800000024686d747811d2f5f5000010bc
000013e46c6f6361000b5a3a000024a0000027c06d61787010fc07880000
4c60000000206e616d653cf97ef500004c8000002ff17072657020b2c6d5
00007c7400000f9467646972000000000000000000000000000304cd02bc
00050008059a0533001e011d059a05330050036100660212050502070609
020205090404e0000eff400078430000000100000000544d432000210020
fffc0511fe54000006a90267400001bfdff70000038c04bc000000200008
04e700000492001b04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e
000004e70000fefdffff02d7000000c8000000c8000000000000000000cd
006900cd009300cd00c800c9015900cd0050009300b900ce009500c9000a
00cd006d006d00930001007b01ef00c100bc00f3009800da00cd000f0074
00d00045009a00890089014900d0011bfff1004600bb006b014600aa00c0
0015004200590083014900af01f30025002b0031001a0097043a04ebfff8
002700790083021f02bf002c0076009100fcfffe0079008300bc00fe0051
0426082c000a000f005b00cd011a049d0029006b00c600e304c9ffd6ffe2
0002000500c900cd00f80197002c007e009a010c016c016f0178017d01a8
01a8052f001700540060009800bc00cc00da010e017801ab01d3027e035f
0460fe830006002c006500db013a0140ffe5002800350068008800a600af
00ec01a4047c050000200028004c00b100be0110021d035f037f04c4ff78
000f0013001800530053005d0075012001ab01f90217027602bf02c30510
fde3feb8ff970041004800510051005600720077008400910112018103d0
046904ebff600023003e003e0043004f005c005d006c0070008d00ae00bb
00c900e400f2010c0142014c019201e1025d042e0457048304d0057fff16
ff3600010019003d006500760097009d00a800b400c600c800cd00fe00ff
012c012e012e01370138017d019b01bb01d20225022b023b027003340376
03b3047504b3ff00ffaa000200020054005400770080009000a100a200be
00d600f700fc01060117011c012501640166017601a301e201fd033903cc
03f5042e048204ad04d004fc052900190026003b004b0060007a007b0084
009e00a700b400ed00ef01000108010f01100112015e0166017501750189
0193019a01d90290033403aa04110416043a04b404c6ff7fffa3ffbc0027
0033004a00500053006f00960098009a009b009f00a700ae00ae00bd00c9
00ce00db00e200ec00f80120013f014201560160018001d201e3021d02b4
02bd0316032e0347036e039503ec03f30417044d04fa054a057cfdbefed7
fedaff40ff94ff95ffc70004000a003b003e005400540056006b006d0074
0076007d0093009c00ad00bd00ce00d100d400db00e500ea00fd01020112
012e01300142014601500152015e01670184018d0190019501ac01ae01ba
01bf01c801cd01d401f301f702010213024d024e02620282028a02a702ae
02b602d602de02ea0300034f03a903d103e903ef03fa041d0443045f0460
04ae050005270552056805eb08ccfd9afe2afe4ffe94fef2ff71ffdd000d
001e001f0023002600270040004c0056005800630066006c006e00740087
0095009600ac00c100d600ee00f100f200f500fd0108010a010c0116011d
011f01210127012a012f0134013b01410142014401480151015f01600165
01660170017101830185018d0191019b019c01a001a801a801c001d60204
0204020b0218021a021d022a023102360238023c023d02460248024c0250
025c025c025d026c0272028b028c029b029d02a602c302d302d402d502e9
02f002f702fc03020304030c031403150315033003310359037103810387
038f039003a003b103ba03c903cb03cb03cd03d403eb04210429044f0456
04720474049504c604ea0540054d05600565057c0591059f05c905f30610
064e068f00c900ca00c900cd0000000000000000000000000376038e013a
0381020502e902fb0099026a0007032e00dc04e1015803f701e600a10692
01a801f0035904660466035400cd00cd00cd00c800c900cd00c900cd00cd
00d000d000cd00c900cd00c900cd00c900d400cd00cd00cd00c800c900cd
00c900cd00cd00d000d000cd00c900cd00c900cd00c900d400a100a0017f
0075014f00a100760233004a02dd00a000e0014a0089006500600035004b
00b30093009700bc009800a60093009700bc009800a600c3011f009b005c
002c008700af029501f0011f026c00f201b6012d0107001502c802c80257
0124036200bb00b60177035a00a103b4014e01c501f8009a00dc0267042c
044401ff032d00ef0294008501a3013702e30046021e015c02e701de02f0
01cb041b012b003200af00af00c40000000005400401055b0267ffdf04e7
003602d700000288018f03f301cc031a00af00af00640344009602820147
022d00ea016f00c800b700ea010affb30425ffdcff720350ff4b00f00494
00f400e6000a00250083002c000f006b00050006002c0068004c00be0018
0023003e005c005d00ae01e1009d01bb00190100018904c6004a013f0004
0074007d01c800230096012100c300f2009a00dc01cb001b004102670012
014b0152000a0085034d00c903d3004300c600b7020200e5036afcf3fe56
0359fc97fe0b018a00c800c800ef0081008800c900a0013503b9fd53fe67
00b900c800f000c900c800c800420051028300b40073004300000064013f
00000069002500be00be0698069804150206042700780000404c59585756
5554535251504f4e403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a
292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e
01b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b011
2bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b011
2bb0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b011
2bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b0
40618c482d2c01182f2d2c20b0032545b019234445b01a23444565234520
b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b319402019
45208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323
430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f43234365
0b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b0032523
49b04060b0206320b000525823b002253823b002256538008a63381b2121
21212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b8030e23701020b8030e4520b0005058b00161593a2f18
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015b008
26b00826b00826b008260f10161345683ab001162d2cb4000100000015b0
0826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2c
b0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b010
60482046b0106048590a21211b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b8fff060482046b8ff
f06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b
53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b21
21592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b212159
2d2c462346608a8a462320468a608a61b8ff8062232010238ab903840384
8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb0
0b25b00325b00b25b00525b00e25b00f25b00e25b00d25b00925b00f25b0
0f25b01725b019251800103c08fc003c393d2f18e0f02d2cb00225b001b0
0425b004255058601b615920b00325b00325b005255558b0062b1b212159
2121212d2cb00c25b00925b00e25b00b25b01025b01025b00f25b00f25b0
544b5258b04f2bb04f2b52582359811b2121212121212121592121212121
2121212121212121212d2cb003260110493b2d2c23b003260010493b2d2c
2026232026232d2c234b5458202060b00160258a381b232159b8ffff602d
2cb00160252320b002602520582020608a60b0026023b0532ab8ffff6026
201b23b0026026592060b003602d2cb04e2b01b00625b0072546b00c25b0
0d25b00825b00c25b01325b00e25b00f25b00f25b01025182f5558d41b21
59b0102b3c0110f02f48b20f0a552b21205820b0542a592121b00b25b00a
25b00c25b00f25b00c25b00825f0b0102b3c01103c3cb0502b2d2cb04e2b
01b00625b0072546b00c25b00d25b00825b01225b00d25b01425b01525b0
1025b01125b01125b01225182f5558d41b21593c10b0102b3c0110f02f48
b20f0a552b2120580120b0542a592121b00b25b00a25b00c25b00b25b010
25b00825f0b0102b3c01103c3cb0502b2d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b12601885158b94000020063b80400885458b2024002436042
59b94000040063b80800885458b202800243604259b12801885158b94000
080063b81000885458ba000201000002436042595959595959592d2cb002
4354584b53234b515a58381b2121591b21212121592d000100000006e666
fff0ff225f0f3cf50809080000000000a354d52000000000d19de401ff2e
fcfc06b708080003000900010001000000000001000006a9fd99000004cd
ff2efe1606b700210007000000000000000000000000000304cd00670000
000004cd0000000001f401ec00cb00c90108011702c0027000c1016c00cc
0166012301e2008a010c00bd006e00a300d600a70142017c00ea00ee01e1
010e0062007a0069019500f9ffe5002e00a200790031007700a0004000bc
0085002f0057ffed002e009a002d00990031009300f600e400bb00c3002a
0102009701bb01c600ce014bff40022b0088ffff00c2008f009700a80097
00430094006800590095fff1004600aaffa800a1008000ab012500c600a9
00a5003fffe300b101bf0201012100edffe5ffe500a20031002e009a00e4
00880088008800880088008800c200970097009700970094009400940094
004600aa00aa00aa00aa00aa00c600c600c600c601660219012900800097
01b50111002d0072007200c803020213007affe8000a00d300530064008c
0114008300c200fa00be0060fff001300145008700110023009701860052
0089005a008d002100a200860073ffe5ffe5009a0053002700cb003b01af
017602b401f900cc009bffe3010200c700130164019d0003000100fc0252
016600a300ffffe50031ffe50031003100bc00bc00bc00bc009a009a009a
00e400e400e4009401fb01ec020a022c02d3028c016701ff01d402210056
0093009300ab009700b10201007900ae0102ffe3008dffa800cc012c015f
01300151006200620066007700a0009700bc009300ab00a200c200a200c2
008f00c20359ffe50088ffe500880079008f007900310097003100970057
00950057009500570095002e0046002e0046009a00aa0031008000310080
009300ab00f6012500f6012500e400c600e400c6009700b1009700b1006e
009a00cb00b100f800f200b8016500afff2e00d3018c00180002017d0002
017d0002017d017d0002007e0050005bffee01b000a8fff1021d021dfff1
021dfff1021dfff1fff1fff1fff1fff1017d021d017d017dfff1fff1fff1
021d017d017dfff1fff1fff1021d017d017dfff1fff1fff1fff1fff1fff1
fff1fff1fff1fff1fff1fff1fff1fff1fff1fff10267005afff1fff10002
0002000f0002000f000200ae007c0026fffafffa0002014100b800800002
006c009f010f005a0031ffb2003b02c001ec010800e6000201b601b600ae
01b5ffe5008800a200c200a200c200310097003100970031009700a00097
00a0009700a00097004000430040004300bc009400bc009400bc009400bc
009400850068002f0059004000570095002e004600380064009a00aa009a
00aa00310080009300ab00f600c200e400c600e400c600e400c600e400c6
00c300a50102ffe300a8ffe50088ffe80011000a0023027300c300a500c3
00a500c300a50102ffe302b401dc0080005a00620060006100b801980180
02a10191ffe60056004100ca00b600b800ae014dffe5002e000c00310097
004000bc002ffff0ffed002e0071009a0041002d005900f60102002a00e7
002600bc010200b100f20091021800ee009a00da01650091010a02180095
004f008300e0015800aa006100ef00ee004500f600ae021000ee00aa00ee
00ae003200b3004000a3009300bc00bc0085ffe1002300a800620082005b
ffe5002f002e004000000031000a0019002c002c0062fffbffed0040009a
0041002d00a200f6008200a6002a004100ed00090009005bfffa0044004f
fff30041008800bc0039004f001d00970022006300520052007c00410008
001c00aa0026ffa800c2009b005e00b3003f005500d100090009006efffe
003900440030003a00970043004f00c200ab0094009400680000003a0043
007c005e004d0040004f00cb0033007e01e6021a0222022202180219021a
0222022203180218027d01bb0125028a021304a8018301e30090007000e2
011700ae01ff01c4011200e601fc01180087014700cc00fa01d200dd00da
0098013800d601250138005f012d00a20084011901020102020e0146004d
01ff0118011800af00af009800a200a200a200a2009000900090007000e2
011700ae01b8019500e601d701180087014700fa00dd00da012e00cc0138
005f012d00a2008401ff0070008700d601170243018c0160012400c20000
009a00aa00e400c6027a0251025a028102a302d202ae02b802ae02ad024b
0221022602870254037e00f0004a001c02380256026c026c026502650237
024b024b01ec01ec01ec01b201b201b201b201b2028202b801ec01b201b2
01b201b201b201b201b201b201b201b2024902230285024bffe50088ffe5
0088ffe50088ffe50088ffe50088ffe50088ffe50088ffe50088ffe50088
ffe50088ffe50088ffe50088003100970031009700310097003100970031
009700310097003100970031009700bc009400bc0094009a00aa009a00aa
009a00aa009a00aa009a00aa009a00aa009a00aa009a00aa009a00aa009a
00aa009a00aa009a00aa00e400c600e400c600e400c600e400c600e400c6
00e400c600e400c60102ffe30102ffe30102ffe3ffe5008800bc0094009a
00aa00e400c600e400c600e400c600e400c600e400c6021b020702070207
01de006e004f000a00220062007c0044007c0040001c010200b0011400b0
002a003f00ed00d10040004300a30097009a00aa01fc023d018b01020099
00a200a3fff0002e001d0046002c00fe002c00b7002dffff0029002fffff
0044ffff008300a200c20079004a006c008f00c40058008cff8e00a000bf
002e00bc00bc002f00590095003c0070ff830046009a007a00690028ffa8
004700c100c4005901c500ec00d1012500f6008a00f500dcffb1009700ad
003c0074006f006f00b800b2009b00c5ffaf02010134002901f400160016
004e002f003700160012002000200097ffe50088024effe50088ffe80011
00a0003000a00097002f0059009900aa009900aa003c0015006800160016
004e00a00097002bffb8002e0046ffe50088ffe500880031009700310097
00bc009400bc0094009a00aa009a00aa003100800031008000e400c600e4
00c6009300ab00f60125001ffff200400043007000ec00ef009900b1ffe5
008800310097009a00aa022e009a00aa009a00aa009a00aa0102ffe300b5
007f0034ffff00a2003b009000910070007d00ab0063004a00ac00210097
009700d8009200cd00c1004400430094021800da0094009401cd00050069
0069fff3ffb00046003f00aa007900af00aa006900690068002b01470081
00c6004600490083003900390136005301170125007900a100f50013000d
0025009300b000280015003500aa00ce00770071009a003900a000bd001c
00ec0097004000a100aa00ce004b00410042006e00f3005a001100030008
00c500d001a7018f01bd01be01a10197019a01d6016e02c001ec015301f9
02b402eb02eb0235022e006200690033010a033a0302022b01fb012201aa
017101f402b40244024401e8020d01ff015a017001a901c801ee01cb018f
0219011c0206017601fb020a00c2022c02d30213028c01ff0221033a02d9
01db022c022c02b401f902b401f901aa0171018201fa0242017a019a0184
01a901820122004e007d00e901640198016701d401fb01140130011c011c
011d011d01200122ff40010001a3015affccffa3008a019a011f0178011a
028602dcff87022b030201ec01f90191022a0204ffd8019901a901cd01ce
01b3016001b6007d00c800c8001c01d401e901d601eb01ef01f501e701a7
017001be01f401dc018f03020171022a010e006401010051010100ab00a4
006a009200a800e600e100760084009a00ce00e701a50010000a00f500f3
ffd6005100b500ca0049004d00e000b700b9013e006900a300ab0068009a
00cf00c30031002c00970052005900ae00c800190011000cffeb000effef
000d000f0007fff3ffec0062004900e700bb009800a5011200ab011200ab
00500028008200a20058005501f5005900ae00b600cb00d9020a021b02e2
02b70075007f00360068002f003a002bffa6001d004000190065003b0064
00bf0083003c00210002000b00aa00a000a200c400f8009f0095004000f9
00d300920066007c004600bc000a0022003700450000003d0056002d003f
001a00f800dcffec001a022cffe50088ffe50088ffe800110031009700a3
0097000a00220019006300a60015002c0052002c0052009a00aa009a00aa
004f00440082ffe30082ffe30082ffe300ed00d1fffafffe0071008f005c
00890083004900c500af0003fffe00230012008f00c800ea0095013202aa
02dd031702b3012402fc023a012e037e01240297043b024601e702a602b8
01480190012400d3016402d302c20148030302bb02c800fd02e403180212
02120228021e02d902620213ffe50088002effff002effff002effff00a2
00c20079008f0079008f0079008f0079008f0079008f0031009700310097
003100970031009700310097007700a800a0009700400043004000430040
0043004000430040004300bc009400bc0094002f0059002f0059002f0059
00570095005700950057009500570095ffedfff1ffedfff1ffedfff1002e
0046002e0046002e0046002e0046009a00aa009a00aa009a00aa009a00aa
002dffa8002dffa800310080003100800031008000310080009300ab0093
00ab009300ab009300ab009300ab00f6012500f6012500f6012200f60125
00e400c600d000c600e400c600e400c600e400c600bb00a900bb00a900c3
00a500c300a5002a003f002a003f0102ffe3009700b1009700b1009700b1
0043012500a5ffe3008800a800b100b100b100b100b100b100b100b1ffe5
ffe5ffb2ffdfff9effb6ffb7ffb400f200f200f200f200f200f200500071
ffe40011ffbcffd40091009100910091009100910091009100670093fff1
001dffd2ffeaffe5ffe50218021802180218021802180218021800550081
ffd50001ffb6ffceffd3ffd300aa00aa00aa00aa00aa00aa00510042ff63
ff91ffa8ffc000ee00ee00ee00ee00ee00ee00ee00ee008f000fffe6ffe1
00ae00ae00ae00ae00ae00ae00ae00ae0046003aff58ff85ff94ff9dffca
ff8f00b100b100f200f2009100910218021800aa00aa00ee00ee00ae00ae
00b100b100b100b100b100b100b100b1ffe5ffe5ffb2ffdfff9effcfffb7
ffb40091009100910091009100910091009100670093fff1001dffd2ffea
ffe5ffe500ae00ae00ae00ae00ae00ae00ae00ae0046003aff58ff85ff94
ff9dffcaff8f00b100b100b100b100b100b100b1ffe5ffe5ffe5ffe5ffe5
02b7022a02b701ec02050091009100910091009100bd008d00a4009c0040
0278027802370218020a01a101a101d801f100bc00bc00bc008d02a502a9
023400ee00ee00ee00ee0061006100ee00ee0102010200f80097001901b5
01b5031e00ae00ae00ae00ae00ae0080007900620062002602d102e20089
00eb01f401f401f401f400940068008600c3004c0090009900a501a10181
01c501b1016401b9013601090120025902b102cc01c201cb011201150149
029702eb023d01bd01cf01b1010302eb010b00c2ff40008dffa500120021
0016000900c2003b003b003b006301250102007c001e0008005200aa0062
00aa00b60092001b00ee00ad00a8001d0058009b009b00e800a8fff900e9
00a900a500b1009f00a8003c004f00130026001d00a40041016a016b0197
019601af019601bf01e001a101eb01b001930189016c0195019201d501fd
019701940214020701f001d401ec01c50197019601e701e901e201d401ce
01d402260195017001a301eb01d301e601ed016001f401ef020e01c701dc
01a201cd01f8020f01f3019d01680109016d0150015f01800167017b0125
007200c50052002d00eb00c500d3002a008f00ef00f700f7002601af0130
009fffedffba005b00820086ffe5008f00c20057008c00ae00b000aa038e
01a201090299ffd1ffe900ab009f00a9006c004d0148031801d500fb0222
fffe008e00a800030047ffa400800081007400bd00b2ffc001a20092fffb
00db013dffa600a20044fffc008e00a8000d00590095fff00045ffbb0080
00acff5b00a8003d00b00088009600b900a900ab002900ae00d0007e0075
010a0028018d01f501a101f601ce01e2018b01d4022101eb02be01fc0206
020e029001df01a7017801d2015201ac01a601eb01eb01db019f021201cb
01f9021f021e019101e701f20198019d0217018d021c01ec021201f50162
015d015f011e01600076ffe6005300a000dc00b100b100b100b100b100b1
00b100b1020a020a020a020a021802180218021800ee00ee00ee00ee00ee
00ee00ee00ee01df01df01ff01ff00ee00ee00ee00ee00940094002e0093
fff00031008c0085006800b400a10031008000d3ffe3008c00ab008c0095
006e004f002a003f002a003f008c00ab0000003d02580258025802580190
0190016b0258010300640078008c005700950057002d00b5006200ff0040
0043002f0059009700b1009f0040001a00aa025802580258023002300168
0033002f009e01a301b7016d017e019b017b019e01d20192019e01fc0099
00a100c300a5003c01bc0096008c00c8008c0230014a0276029e017d017d
029e028a0244011c00e600f70071007500e600fb00ab00c2002f018100e1
00850019000a0013ffb90012001c002d0095000e000c00110011003f0025
002c004100a700a700f800120030010801000041ffceffed00b200a10052
007d00a9008a012901da0096009700c801d500e2011700ae00840318029a
00e3004900a90036010c009f009200280021006d005700740009009000f5
00cc00a00021005900a200d200b300e6002800f900160095000a00e30047
00ad004000d200b900cb0046009a005302b401f9024601ec028a01b3018b
006fffdf0037000900dc00690114ffebff77005cffdf0075ff5e00bd00fa
004300d60063009500c60067007e00a9004600a9008f00a9003700c600e4
0074ffdf0097008e0074000e00a0007d006e01e1013a008a009b00700073
007500720072006f00940085ff35ff73ffdfffdfffe60000ffea0003ffe6
000d000dffe60015001c0063007e004d0000000000000066000000660000
006600000066000000660000006600000066000000660000006600000066
000000660000006600000066000000660000006600000066000000660000
006600000066000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260000012600000126
000001260000012600000126000001260000012600000126000001260000
012600000126000001260000012600000126000001260001000009ef00f2
003c0094000600020010002f005a0000065c05d0000400010000005303ea
0000000300000000021a000000000003000000010016021a000000030000
0002001602b20000000300000003005802880000000300000004002e029a
0000000300000005001802e00000000300000006003202f8000000030000
0007006e021a0000000300000008003003380000000300000009001c0548
000000030000000d0d1805640001000000000000010d127c000100000000
0001000b13890001000000000002000b13d50001000000000003002c13c0
0001000000000004001713c90001000000000005000c13ec000100000000
0006001913f8000100000000000700371389000100000000000800181283
0001000000000009000e1411000100000000000d068c141f000300010403
0002001e1ac3000300010403000400361aab0003000104050002001a1af9
000300010405000400321ae1000300010406000200141b2b000300010406
0004002c1b13000300010407000200161b570003000104070004002e1b3f
0003000104080002001a1b85000300010408000400321b6d000300010409
0000021e032a00030001040900010016021a0003000104090002001602b2
0003000104090003005802880003000104090004002e029a000300010409
0005001802e00003000104090006003202f80003000104090007006e021a
0003000104090008003003380003000104090009001c0548000300010409
000d0d2a1b9f00030001040a0002001e28e100030001040a0004003628c9
00030001040b00020024291700030001040b0004003c28ff00030001040c
0002001a295300030001040c00040032293b00030001040e0002001a2985
00030001040e00040032296d0003000104100002002229b7000300010410
0004003a299f0003000104130002001629f10003000104130004002e29d9
0003000104140002001c2a1f000300010414000400342a07000300010415
000200242a530003000104150004003c2a3b0003000104160002001e2a8f
000300010416000400362a77000300010419000200222ac5000300010419
0004003a2aad00030001041b0002001a2aff00030001041b000400322ae7
00030001041d000200142b3100030001041d0004002c2b1900030001041f
000200182b5d00030001041f000400302b450003000104240002001c2b8d
000300010424000400342b7500030001042a000200182bc100030001042a
000400302ba900030001042d000200162bf100030001042d0004002e2bd9
00030001080a0002001e28e100030001080a0004003628c9000300010816
0002001e2a8f000300010816000400362a77000300010c0a0002001e28e1
000300010c0a0004003628c9000300010c0c0002001a2953000300010c0c
00040032293b00a90020003200300031003500200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0020000d000d0048
006500620072006500770020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200063006f
0070007900720069006700680074002000a9002000320030003000330020
002600200032003000300037002c002000520061006c0070006800200048
0061006e0063006f0063006b002000260020004a006f0068006e00200048
007500640073006f006e002e002000540068006900730020006c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
006900730020006f00700065006e00200073006f00750072006300650020
0073006f00660074007700610072006500200075006e0064006500720020
0074006800650020004d004900540020004c006900630065006e00730065
003b002000730065006500200065006d0062006500640064006500640020
006c006900630065006e0073006500200064006500730063007200690070
00740069006f006e00200066006f0072002000640065007400610069006c
0073002e0043006f007500720069006500720020004e0065007700200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e004d006f006e
006f0074007900700065003a0043006f007500720069006500720020004e
0065007700200042006f006c00640020004900740061006c006900630020
0028004d006900630072006f0073006f0066007400290056006500720073
0069006f006e00200036002e003900300043006f00750072006900650072
004e0065007700500053002d0042006f006c0064004900740061006c0069
0063004d005400a90020003200300031003500200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0020000d000a000d
000a0048006500620072006500770020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0063006f0070007900720069006700680074002000a90020003200300030
00330020002600200032003000300037002c002000520061006c00700068
002000480061006e0063006f0063006b002000260020004a006f0068006e
00200048007500640073006f006e002e002000540068006900730020006c
00610079006f007500740020006c006f00670069006300200066006f0072
0020004200690062006c006900630061006c002000480065006200720065
00770020006900730020006f00700065006e00200073006f007500720063
006500200073006f00660074007700610072006500200075006e00640065
007200200074006800650020004d004900540020004c006900630065006e
00730065003b002000730065006500200065006d00620065006400640065
00640020006c006900630065006e00730065002000640065007300630072
0069007000740069006f006e00200066006f007200200064006500740061
0069006c0073002e0048006f00770061007200640020004b006500740074
006c006500720059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
00450055004c004100200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c007500640065006400200074006f00200064006900730070006c
0061007900200061006e00640020007000720069006e007400200063006f
006e00740065006e0074002e002000200059006f00750020006d00610079
0020006f006e006c0079002000280069002900200065006d006200650064
0020007400680069007300200066006f006e007400200069006e00200063
006f006e00740065006e00740020006100730020007000650072006d0069
0074007400650064002000620079002000740068006500200065006d0062
0065006400640069006e0067002000720065007300740072006900630074
0069006f006e007300200069006e0063006c007500640065006400200069
006e0020007400680069007300200066006f006e0074003b00200061006e
006400200028006900690029002000740065006d0070006f007200610072
0069006c007900200064006f0077006e006c006f00610064002000740068
0069007300200066006f006e007400200074006f00200061002000700072
0069006e0074006500720020006f00720020006f00740068006500720020
006f00750074007000750074002000640065007600690063006500200074
006f002000680065006c00700020007000720069006e007400200063006f
006e00740065006e0074002e000d000d00540068006500200066006f006c
006c006f00770069006e00670020006c006900630065006e00730065002c
0020006200610073006500640020006f006e00200074006800650020004d
004900540020006c006900630065006e0073006500200028006800740074
0070003a002f002f0065006e002e00770069006b00690070006500640069
0061002e006f00720067002f00770069006b0069002f004d00490054005f
004c006900630065006e007300650029002c0020006100700070006c0069
0065007300200074006f00200074006800650020004f00700065006e0054
0079007000650020004c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020201c004c00610079006f007500740020
004c006f006700690063201d0020006100730020006a006f0069006e0074
006c007900200064006500760065006c006f007000650064002000620079
002000520061006c00700068002000480061006e0063006f0063006b0020
0061006e00640020004a006f0068006e00200048007500640073006f006e
002e0020000d000d005000650072006d0069007300730069006f006e0020
0069007300200068006500720065006200790020006700720061006e0074
00650064002c002000660072006500650020006f00660020006300680061
007200670065002c00200074006f00200061006e00790020007000650072
0073006f006e0020006f0062007400610069006e0069006e006700200061
00200063006f007000790020006f006600200074006800650020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c002000480065006200720065007700200061006e006400200061
00730073006f00630069006100740065006400200064006f00630075006d
0065006e0074006100740069006f006e002000660069006c006500730020
00280074006800650020201c004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065201d0029002c
00200074006f0020006400650061006c00200069006e0020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f00660074007700610072006500200077006900740068006f00750074
0020007200650073007400720069006300740069006f006e002c00200069
006e0063006c007500640069006e006700200077006900740068006f0075
00740020006c0069006d00690074006100740069006f006e002000740068
0065002000720069006700680074007300200074006f0020007500730065
002c00200063006f00700079002c0020006d006f0064006900660079002c
0020006d0065007200670065002c0020007000750062006c006900730068
002c00200064006900730074007200690062007500740065002c00200073
00750062006c006900630065006e00730065002c00200061006e0064002f
006f0072002000730065006c006c00200063006f00700069006500730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002c0020
0061006e006400200074006f0020007000650072006d0069007400200070
006500720073006f006e007300200074006f002000770068006f006d0020
0074006800650020004c00610079006f007500740020004c006f00670069
006300200053006f00660074007700610072006500200069007300200066
00750072006e0069007300680065006400200074006f00200064006f0020
0073006f002c0020007300750062006a00650063007400200074006f0020
00740068006500200066006f006c006c006f00770069006e006700200063
006f006e0064006900740069006f006e0073003a000d000d005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000d00540048004500200053004f004600540057004100520045
002000490053002000500052004f00560049004400450044002000270041
00530020004900530027002c00200057004900540048004f005500540020
00570041005200520041004e005400590020004f004600200041004e0059
0020004b0049004e0044002c002000450058005000520045005300530020
004f005200200049004d0050004c004900450044002c00200049004e0043
004c005500440049004e004700200042005500540020004e004f00540020
004c0049004d004900540045004400200054004f00200054004800450020
00570041005200520041004e00540049004500530020004f00460020004d
00450052004300480041004e0054004100420049004c004900540059002c
0020004600490054004e00450053005300200046004f0052002000410020
0050004100520054004900430055004c0041005200200050005500520050
004f0053004500200041004e00440020004e004f004e0049004e00460052
0049004e00470045004d0045004e0054002e00200049004e0020004e004f
0020004500560045004e00540020005300480041004c004c002000540048
004500200041005500540048004f005200530020004f005200200043004f
005000590052004900470048005400200048004f004c0044004500520053
0020004200450020004c004900410042004c004500200046004f00520020
0041004e005900200043004c00410049004d002c002000440041004d0041
0047004500530020004f00520020004f00540048004500520020004c0049
004100420049004c004900540059002c0020005700480045005400480045
005200200049004e00200041004e00200041004300540049004f004e0020
004f004600200043004f004e00540052004100430054002c00200054004f
005200540020004f00520020004f00540048004500520057004900530045
002c002000410052004900530049004e0047002000460052004f004d002c
0020004f005500540020004f00460020004f005200200049004e00200043
004f004e004e0045004300540049004f004e002000570049005400480020
00540048004500200053004f0046005400570041005200450020004f0052
002000540048004500200055005300450020004f00520020004f00540048
004500520020004400450041004c0049004e0047005300200049004e0020
00540048004500200053004f004600540057004100520045002e000da920
3230313520546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e200d0d486562726577
204f70656e54797065204c61796f7574206c6f67696320636f7079726967
687420a92032303033202620323030372c2052616c70682048616e636f63
6b2026204a6f686e20487564736f6e2e2054686973206c61796f7574206c
6f67696320666f72204269626c6963616c20486562726577206973206f70
656e20736f7572636520736f66747761726520756e64657220746865204d
4954204c6963656e73653b2073656520656d626564646564206c6963656e
7365206465736372697074696f6e20666f722064657461696c732e436f75
72696572204e657720697320612074726164656d61726b206f6620546865
204d6f6e6f7479706520436f72706f726174696f6e2e4d6f6e6f74797065
3a436f7572696572204e657720426f6c64204974616c696320284d696372
6f736f66742956657273696f6e20362e3930436f75726965724e65775053
2d426f6c644974616c69634d54486f77617264204b6574746c6572596f75
206d617920757365207468697320666f6e74206173207065726d69747465
64206279207468652045554c4120666f72207468652070726f6475637420
696e207768696368207468697320666f6e7420697320696e636c75646564
20746f20646973706c617920616e64207072696e7420636f6e74656e742e
2020596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
0d0d54686520666f6c6c6f77696e67206c6963656e73652c206261736564
206f6e20746865204d4954206c6963656e73652028687474703a2f2f656e
2e77696b6970656469612e6f72672f77696b692f4d49545f4c6963656e73
65292c206170706c69657320746f20746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20d24c61796f7574204c6f676963d3206173206a6f696e746c7920646576
656c6f7065642062792052616c70682048616e636f636b20616e64204a6f
686e20487564736f6e2e200d0d5065726d697373696f6e20697320686572
656279206772616e7465642c2066726565206f66206368617267652c2074
6f20616e7920706572736f6e206f627461696e696e67206120636f707920
6f6620746865204f70656e54797065204c61796f7574206c6f6769632066
6f72204269626c6963616c2048656272657720616e64206173736f636961
74656420646f63756d656e746174696f6e2066696c6573202874686520d2
4c61796f7574204c6f67696320536f667477617265d3292c20746f206465
616c20696e20746865204c61796f7574204c6f67696320536f6674776172
6520776974686f7574207265737472696374696f6e2c20696e636c756469
6e6720776974686f7574206c696d69746174696f6e207468652072696768
747320746f207573652c20636f70792c206d6f646966792c206d65726765
2c207075626c6973682c20646973747269627574652c207375626c696365
6e73652c20616e642f6f722073656c6c20636f70696573206f6620746865
204c61796f7574204c6f67696320536f6674776172652c20616e6420746f
207065726d697420706572736f6e7320746f2077686f6d20746865204c61
796f7574204c6f67696320536f667477617265206973206675726e697368
656420746f20646f20736f2c207375626a65637420746f2074686520666f
6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061626f7665
20636f70797269676874206e6f7469636520616e64207468697320706572
6d697373696f6e206e6f74696365207368616c6c20626520696e636c7564
656420696e20616c6c20636f70696573206f72207375627374616e746961
6c20706f7274696f6e73206f6620746865204c61796f7574204c6f676963
20536f6674776172652e0d0d54484520534f465457415245204953205052
4f564944454420274153204953272c20574954484f55542057415252414e
5459204f4620414e59204b494e442c2045585052455353204f5220494d50
4c4945442c20494e434c5544494e4720425554204e4f54204c494d495445
4420544f205448452057415252414e54494553204f46204d45524348414e
544142494c4954592c204649544e45535320464f52204120504152544943
554c415220505552504f534520414e44204e4f4e494e4652494e47454d45
4e542e20494e204e4f204556454e54205348414c4c205448452041555448
4f5253204f5220434f5059524947485420484f4c44455253204245204c49
41424c4520464f5220414e5920434c41494d2c2044414d41474553204f52
204f54484552204c494142494c4954592c205748455448455220494e2041
4e20414354494f4e204f4620434f4e54524143542c20544f5254204f5220
4f54484552574953452c2041524953494e472046524f4d2c204f5554204f
46204f5220494e20434f4e4e454354494f4e20574954482054484520534f
465457415245204f522054484520555345204f52204f5448455220444541
4c494e475320494e2054484520534f4654574152452e0d0043006f007500
720069006500720020004e006500770020004e0065006700720065007400
61002000630075007200730069007600610043006f007500720069006500
720020004e00650077002000740075010d006e00e90020006b0075007200
7a00ed007600610043006f007500720069006500720020004e0065007700
200066006500640020006b007500720073006900760043006f0075007200
69006500720020004e00650077002000460065007400740020004b007500
720073006900760043006f007500720069006500720020004e0065007700
20038803bd03c403bf03bd03b1002003a003bb03ac03b303b903b1005900
6f00750020006d0061007900200075007300650020007400680069007300
200066006f006e00740020006100730020007000650072006d0069007400
74006500640020006200790020007400680065002000450055004c004100
200066006f00720020007400680065002000700072006f00640075006300
7400200069006e0020007700680069006300680020007400680069007300
200066006f006e007400200069007300200069006e0063006c0075006400
65006400200074006f00200064006900730070006c006100790020006100
6e00640020007000720069006e007400200063006f006e00740065006e00
74002e002000200059006f00750020006d006100790020006f006e006c00
79002000280069002900200065006d006200650064002000740068006900
7300200066006f006e007400200069006e00200063006f006e0074006500
6e00740020006100730020007000650072006d0069007400740065006400
2000620079002000740068006500200065006d0062006500640064006900
6e00670020007200650073007400720069006300740069006f006e007300
200069006e0063006c007500640065006400200069006e00200074006800
69007300200066006f006e0074003b00200061006e006400200028006900
690029002000740065006d0070006f0072006100720069006c0079002000
64006f0077006e006c006f00610064002000740068006900730020006600
6f006e007400200074006f002000610020007000720069006e0074006500
720020006f00720020006f00740068006500720020006f00750074007000
750074002000640065007600690063006500200074006f00200068006500
6c00700020007000720069006e007400200063006f006e00740065006e00
74002e000d000a000d000a00540068006500200066006f006c006c006f00
770069006e00670020006c006900630065006e00730065002c0020006200
610073006500640020006f006e00200074006800650020004d0049005400
20006c006900630065006e00730065002000280068007400740070003a00
2f002f0065006e002e00770069006b006900700065006400690061002e00
6f00720067002f00770069006b0069002f004d00490054005f004c006900
630065006e007300650029002c0020006100700070006c00690065007300
200074006f00200074006800650020004f00700065006e00540079007000
650020004c00610079006f007500740020006c006f006700690063002000
66006f00720020004200690062006c006900630061006c00200048006500
620072006500770020201c004c00610079006f007500740020004c006f00
6700690063201d0020006100730020006a006f0069006e0074006c007900
200064006500760065006c006f0070006500640020006200790020005200
61006c00700068002000480061006e0063006f0063006b00200061006e00
640020004a006f0068006e00200048007500640073006f006e002e002000
0d000a000d000a005000650072006d0069007300730069006f006e002000
69007300200068006500720065006200790020006700720061006e007400
650064002c002000660072006500650020006f0066002000630068006100
7200670065002c00200074006f00200061006e0079002000700065007200
73006f006e0020006f0062007400610069006e0069006e00670020006100
200063006f007000790020006f006600200074006800650020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200066006f00720020004200690062006c0069006300
61006c002000480065006200720065007700200061006e00640020006100
730073006f00630069006100740065006400200064006f00630075006d00
65006e0074006100740069006f006e002000660069006c00650073002000
280074006800650020201c004c00610079006f007500740020004c006f00
670069006300200053006f006600740077006100720065201d0029002c00
200074006f0020006400650061006c00200069006e002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f00660074007700610072006500200077006900740068006f0075007400
20007200650073007400720069006300740069006f006e002c0020006900
6e0063006c007500640069006e006700200077006900740068006f007500
740020006c0069006d00690074006100740069006f006e00200074006800
65002000720069006700680074007300200074006f002000750073006500
2c00200063006f00700079002c0020006d006f0064006900660079002c00
20006d0065007200670065002c0020007000750062006c00690073006800
2c00200064006900730074007200690062007500740065002c0020007300
750062006c006900630065006e00730065002c00200061006e0064002f00
6f0072002000730065006c006c00200063006f0070006900650073002000
6f006600200074006800650020004c00610079006f007500740020004c00
6f00670069006300200053006f006600740077006100720065002c002000
61006e006400200074006f0020007000650072006d006900740020007000
6500720073006f006e007300200074006f002000770068006f006d002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f0066007400770061007200650020006900730020006600
750072006e0069007300680065006400200074006f00200064006f002000
73006f002c0020007300750062006a00650063007400200074006f002000
740068006500200066006f006c006c006f00770069006e00670020006300
6f006e0064006900740069006f006e0073003a000d000a000d000a005400
680065002000610062006f0076006500200063006f007000790072006900
67006800740020006e006f007400690063006500200061006e0064002000
740068006900730020007000650072006d0069007300730069006f006e00
20006e006f00740069006300650020007300680061006c006c0020006200
6500200069006e0063006c007500640065006400200069006e0020006100
6c006c00200063006f00700069006500730020006f007200200073007500
62007300740061006e007400690061006c00200070006f00720074006900
6f006e00730020006f006600200074006800650020004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065002e000d000a000d000a00540048004500200053004f0046005400
57004100520045002000490053002000500052004f005600490044004500
4400200027004100530020004900530027002c0020005700490054004800
4f00550054002000570041005200520041004e005400590020004f004600
200041004e00590020004b0049004e0044002c0020004500580050005200
45005300530020004f005200200049004d0050004c004900450044002c00
200049004e0043004c005500440049004e00470020004200550054002000
4e004f00540020004c0049004d004900540045004400200054004f002000
5400480045002000570041005200520041004e0054004900450053002000
4f00460020004d00450052004300480041004e0054004100420049004c00
4900540059002c0020004600490054004e00450053005300200046004f00
520020004100200050004100520054004900430055004c00410052002000
50005500520050004f0053004500200041004e00440020004e004f004e00
49004e004600520049004e00470045004d0045004e0054002e0020004900
4e0020004e004f0020004500560045004e00540020005300480041004c00
4c002000540048004500200041005500540048004f005200530020004f00
5200200043004f005000590052004900470048005400200048004f004c00
440045005200530020004200450020004c004900410042004c0045002000
46004f005200200041004e005900200043004c00410049004d002c002000
440041004d00410047004500530020004f00520020004f00540048004500
520020004c0049004100420049004c004900540059002c00200057004800
45005400480045005200200049004e00200041004e002000410043005400
49004f004e0020004f004600200043004f004e0054005200410043005400
2c00200054004f005200540020004f00520020004f005400480045005200
57004900530045002c002000410052004900530049004e00470020004600
52004f004d002c0020004f005500540020004f00460020004f0052002000
49004e00200043004f004e004e0045004300540049004f004e0020005700
4900540048002000540048004500200053004f0046005400570041005200
450020004f0052002000540048004500200055005300450020004f005200
20004f00540048004500520020004400450041004c0049004e0047005300
200049004e002000540048004500200053004f0046005400570041005200
45002e000d000a0043006f007500720069006500720020004e0065007700
20004e006500670072006900740061002000430075007200730069007600
610043006f007500720069006500720020004e006500770020004c006900
6800610076006f0069007400750020004b00750072007300690076006f00
690043006f007500720069006500720020004e0065007700200047007200
6100730020004900740061006c00690071007500650043006f0075007200
69006500720020004e006500770020004600e9006c006b00f6007600e900
72002000640151006c00740043006f007500720069006500720020004e00
650077002000470072006100730073006500740074006f00200043006f00
72007300690076006f0043006f007500720069006500720020004e006500
770020005600650074002000430075007200730069006500660043006f00
7500720069006500720020004e00650077002000480061006c0076006600
6500740020004b007500720073006900760043006f007500720069006500
720020004e0065007700200050006f00670072007500620069006f006e00
610020006b0075007200730079007700610043006f007500720069006500
720020004e006500770020004e00650067007200690074006f0020004900
7400e1006c00690063006f0043006f007500720069006500720020004e00
6500770020041f043e043b0443043604380440043d044b04390020041a04
4304400441043804320043006f007500720069006500720020004e006500
77002000540075010d006e00e10020006b00750072007a00ed0076006100
43006f007500720069006500720020004e00650077002000460065007400
20004b007500720073006900760043006f00750072006900650072002000
4e006500770020004b0061006c0131006e0020013000740061006c006900
6b0043006f007500720069006500720020004e006500770020004b007200
650070006b006f00200070006f016100650076006e006f0043006f007500
720069006500720020004e006500770020011100e20323006d0020006e00
670068006900ea006e00670043006f007500720069006500720020004e00
6500770020004c006f00640069002000650074007a0061006e0061000000
00>
<b15880b8038ab2093380b8038ab20c332f4122038a0001000f038a001f03
8a002f038a0060038a00c0038a0005001f038a002f038a004f038a008f03
8a00bf038a00ef038a00ff038a0007038302d70019001f03800381b21d1f
4041ab037a0050037a00020020037a0030037a0002037a02a00800001f00
2003790030037900400379005003790004037902a00800001f0020037800
30037800400378005003780004037902a00800001f037802a10800001f00
4003760001003003760001002003760001037602a00800001f0020036000
0100b0037000c0037000d0037000e0037000f00370000500000370001003
700080037000d0037000040090036d00d0036d0002005003700001001303
6f0020036f0030036f00d3036f00040070036f0080036f0090036f000300
20036f0030036f0040036f0050036f0060036f0005036f02a10800001f00
d3036a00010020036b0030036b00020020036a0030036a0040036a005003
6a0060036a00d4036a0006036b02a00800001f036a02a00800001f001003
6000d6036000020030036000500360006b036000030360031f0800001f00
20035c0030035c0002035c02a10800400b1f123f023f034f024f0304b9ff
e0031fb2335632b9ffe0031fb2262c32b9031f02a0b2541f204109031e00
30031e0040031e0003031e02a00800400b1f101f10221025102d04e0ba01
5e00f0015e400c02501f5025502b502d504250ba015e00500318b4075022
017041110318008003180090031800030020031800300318004003180060
03180004031802a1b22d1f90413a031600a0031600c00316000300200316
00600316008003160003031602ce0800001f002003150030031500400315
0090031500a0031500d003150006031502d20800001f0020031400300314
0040031400500314006003140090031400a0031400b0031400c0031400d0
0314000a031402d20800b21f37604145030700c0030700ff03070003003f
030600600306007003060090030600c003060005000f0306000f03080080
03060003005f03080001002f03090001008f030800bf03080002000f0308
002f0308003f03080003000f0306002f0306003f03070003030903090308
0308030703070306030600ff03020001000f03020001002f0301003f0301
004f0301b4037f2b018f41ff02c700af02c700bf02c70003007f02cb0001
007f02c7007f02c8007f02c9007f02ca0004007f02ad007f02ae0002007f
02a9007f02aa007f02ab007f02ac0004007f02a5007f02a6007f02a7007f
02a80004007f02a1007f02a2007f02a3007f02a40004007f029d007f029e
007f029f007f02a00004006f02cb0001006f02c7006f02c8006f02c9006f
02ca0004006f02ad006f02ae0002006f02a9006f02aa006f02ab006f02ac
0004006f02a5006f02a6006f02a7006f02a80004006f02a1006f02a2006f
02a3006f02a40004006f029d006f029e006f029f006f02a00004004f02cb
0001004f02c7004f02c8004f02c9004f02ca0004004f02ad004f02ae0002
004f02a9004f02aa004f02ab004f02ac0004004f02a5004f02a6004f02a7
004f02a80004004f02a1004f02a2004f02a3004f02a40004004f029d004f
029e004f029f004f02a00004003f02cb0001003f02c7003f02c8003f02c9
003f02ca0004003f02ad003f02ae0002003f02a9003f02aa003f02ab003f
02ac0004003f02a5003f02a6003f02a7003f02a80004003f02a1003f02a2
003f02a3003f02a40004003f029d003f029e003f029f003f02a00004002f
02cb0001002f02c7002f02c8002f02c9002f02ca0004002f02ad002f02ae
0002002f02a9002f02aa002f02ab002f02ac0004002f02a5002f02a6002f
02a7002f02a80004002f02a141ff002f02a2002f02a3002f02a40004002f
029d002f029e002f029f002f02a0000400df028c00df029000df029500df
0298000400df02ad00df02ae000200df02a900df02aa00df02ab00df02ac
000400df02a500df02a600df02a700df02a8000400df02a100df02a200df
02a300df02a4000400df029d00df029e00df029f00df02a00004007f013e
007f02c60002007f02c2007f02c3007f02c4007f02c50004007f029b007f
029c0002007f0297007f0298007f0299007f029a0004007f0293007f0294
007f0295007f02960004007f028f007f0290007f0291007f02920004007f
028b007f028c007f028d007f028e0004006f013e006f02c60002006f02c2
006f02c3006f02c4006f02c50004006f029b006f029c0002006f0297006f
0298006f0299006f029a0004006f0293006f0294006f0295006f02960004
006f028f006f0290006f0291006f02920004006f028b006f028c006f028d
006f028e0004004f013e004f02c60002004f02c2004f02c3004f02c4004f
02c50004004f029b004f029c0002004f0297004f0298004f0299004f029a
0004004f0293004f0294004f0295004f02960004004f028f004f0290004f
0291004f02920004004f028b004f028c004f028d004f028e0004003f013e
003f02c60002003f02c2003f02c3003f02c4003f02c50004003f029b003f
029c0002003f0297003f0298003f41b10299003f029a0004003f0293003f
0294003f0295003f02960004003f028f003f0290003f0291003f02920004
003f028b003f028c003f028d003f028e0004002f013e002f02c60002002f
02c2002f02c3002f02c4002f02c50004002f029b002f029c0002002f0297
002f0298002f0299002f029a0004002f0293002f0294002f0295002f0296
0004002f028f002f0290002f0291002f02920004002f028b002f028c002f
028d002f028e000402cb00a302ca008c02c9006602c8005602c7002702ae
019d02ad016702ac00fc02ab00e102aa007b02a9007a02a8006e02a70042
02a6003c02a5003902a4002d02a3002b02a2002502a1002302a00022029f
0021029e001f029d001d02c600a302c5008c02c4006602c3005602c20027
029c019d029b0167029a00fc029900e10298007b0297007a0296006e0295
00420294003c029300390292002d0291002b02900025028f0023028e0022
028d0021028c001f028b40371d3923271f2123271f2223271f3523271f38
23271f2d23271f1d23271f3701008f019f01020101000901020008001717
0000001211084041140269022600a4000d021e00a4000d01e300a4000d01
df00a4000d01a600a4000d018e00a4000d0168401da40de3a40db7a40d82
a40d7da40d6fa40d65a40d4aa40d47a40d37a40dbb01e40050000d013540
1a500d83500d4e500d4d500d48500d43500d36500d34500d2a500d412301
ef0116000d01990116000d01950116000d018f0116000d015d0116000d01
390116000d00fc0116000d00f60116000d00600116000d00390116000d00
210116000d001d0116b20d0009b801a1b2422e1f4109019d00420201001f
019c00420801001f019ab222bb1fb8016bb2424a1fb8016ab242721fb801
64b2224f1fb80161b2222e1fb80160b2222d1fb8015eb222291fb8013eb2
42471fb8011e402542351ff822411fe0229e1fac225a1fa5424a1fa3223d
1f8f42cd1f8c222b1f7c42341f7b1fb80401b61f74426c1f6e1fb8040140
171f67422d1f6622ab1f62422f1f56222a1f46229e1f3c42b80401400b1f
3842cd1f3522ab1f2d1fb80401b21f2b23b80401b71f55230923093790bb
020400070090012840300790510790330790290790280790260790240790
2007901e071408120810080e080c080a080808060804080208000814b8ff
e0402c000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a005fbd026900010061026900700269
b10237b013034b024b5342014bb0c063004b6220b0f65323b8010a515ab0
05234201b0124b004b54422b7318734bb019534bb053515a58b80269b080
444b20202020b0195258b80269b0c04459b0265258b80269b801004459b0
325258b80269b801404459b03a5258b80269b801804459b0475258b80269
b801c0445959b0372b4bb807ff52b0382b4bb008505b58b101018e59b038
2bb00288b801005458b801ffb101018e851bb0124358b90001011f858d1b
b9000101ff858d59590016763f183f123e113946443e113946443e113946
443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b2b2b2b2b2b2b2b4b5079410b001f02030007001f01f30007001f
01440007001f0118b3071f71072b2b2b2b2b4b5379410b00900203000700
9001f3000700900144000700900118b3079071072b2b2b2b2b181db0964b
5358b0ff1d59b0324b5358b0ff1d594bb8012553205c58b9004202694544
b90269026945445958b9072a0042455258b90042072a4459594bb8040153
205c58b9026b02694544b9026a026945445958b91920026b455258b9026b
19204459594bb8040153205c58b90022026b4544b9001f026b45445958b9
19200022455258b9002219204459594bb8040153205c58b90023026a4544
b90025026a45445958b919400023455258b9002319404459594bb8040153
205c58b17a234544b1232345445958b91920007a455258b9007a19204459
594bb8018153205c58b11f1f4544b1231f45445958b9099c001f455258b9
001f099c4459594bb8030153205c58b11f1f4544b11f1f45445958b91338
001f455258b9001f13384459594bb8030153205c58b11f1f4544b1251f45
445958b91338001f455258b9001f13384459592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b45695342014b5058b108004259435c58b1080042591610703eb01243
58b90d4f3e9a1bba00d503ea000b2b59b00a2342b00b2342003f3f182b10
3c012f5d060cb0062342b0072342b0124358b93b21187e1bba040001a800
0b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59
b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b01023
42b0112342002b2b2b2b2b2b2b2b45444544454445444544454445444544
454445444544454445444544454445444544454445444544454445444544
454445444544454445444544454445444544454445444544454445444544
454445444544454445444544454445447373737373737373737373737373
737373737373737373737373737373737373737373747474747474737373
737373737373737373737373737373737373737373737373737373737373
73737373747473001845694445694445694445694473737373737473732b
2b732b732b74732b7373737374742b732b2b2b0073435c58bb000f030600
0f030840156f006f016f026f036f046f056f066f076f106f116fbd030600
6f0307006f0308000f7359012b732b7374012b2b737374012b7373747573
747373012b737373012b2b73012b73012b7373002b2b7374752b2b2b00>
[295 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 102 19 <0002010cffe204d7052f001200260047400c070d0118250e052225050d15
b80295b34f120112bb018b0028001f0295400b3f084f0802500801081927
b801fbb189182b4e10f45d714ded10f471ed003fed3fed31300071010706
070623222635343737360033321615140736353426232207060707061514
16333237363704c8302b90a5d999ba0f302c0136d799badc0c644d5d4c71
24300c644d5d4c712402f9e1cca9c1d7e03946e1ce0168d7e13a44373088
7a4c72abe13730887a4c72ab>GFNBAA+CourierNewPS-BoldItalicMT AddT42Char 
2 0 0 <0002006700000467050000030007003e401c0607a90201000504a903000a
0605a90303021a090704a9010019086db9018800182b4e10f43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c31303311211125211121670400fc
2003c0fc400500fb002004c0>GFNBAA+CourierNewPS-BoldItalicMT AddT42Char 
GFNBAA+CourierNewPS-BoldItalicMT /CharStrings get begin
/zero 19 def
end
GFNBAA+CourierNewPS-BoldItalicMT /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/OPRHDX+CourierNewPS-BoldItalicMT /GFNBAA+CourierNewPS-BoldItalicMT findfont ct_VMDictPut
/OPRHDX+CourierNewPS-BoldItalicMT*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
OPRHDX+CourierNewPS-BoldItalicMT nf
OPRHDX+CourierNewPS-BoldItalicMT*1 [36.0321 0 0 -36.0321 0 0 ]msf
398.149 320.494 mo
(0)sh
OPRHDU+ArialMT*1 [40.5361 0 0 -40.5361 0 0 ]msf
23.2988 137.349 mo
(q)sh
45.8369 137.349 mo
(u)sh
68.3749 137.349 mo
(a)sh
90.913 137.349 mo
(n)sh
113.451 137.349 mo
(t)sh
124.72 137.349 mo
(u)sh
147.258 137.349 mo
(m)sh
181.024 137.349 mo
( )sh
192.293 137.349 mo
(d)sh
214.832 137.349 mo
(o)sh
237.37 137.349 mo
(t)sh
403.498 137.349 mo
(c)sh
423.766 137.349 mo
(o)sh
446.304 137.349 mo
(n)sh
468.842 137.349 mo
(f)sh
480.111 137.349 mo
(i)sh
489.11 137.349 mo
(n)sh
511.648 137.349 mo
(e)sh
534.186 137.349 mo
(d)sh
556.724 137.349 mo
( )sh
567.993 137.349 mo
(p)sh
590.531 137.349 mo
(h)sh
613.07 137.349 mo
(o)sh
635.608 137.349 mo
(n)sh
658.146 137.349 mo
(o)sh
680.684 137.349 mo
(n)sh
gsave
315.632 279.372 mo
460.386 279.372 li
460.386 242.19 li
315.632 242.19 li
cp
clp
2.2636 lw
316.558 278.721 mo
318.241 275.597 320.358 272.592 322.859 269.744 cv
325.361 266.895 328.249 264.204 331.475 261.705 cv
334.7 259.205 338.262 256.9 342.116 254.824 cv
345.97 252.748 350.113 250.903 354.497 249.324 cv
358.883 247.747 363.51 246.437 368.333 245.43 cv
373.154 244.424 378.171 243.721 383.333 243.36 cv
388.497 242.998 393.563 242.996 398.478 243.322 cv
403.394 243.647 408.157 244.302 412.72 245.254 cv
417.282 246.206 421.641 247.457 425.745 248.977 cv
429.852 250.496 433.699 252.283 437.24 254.309 cv
440.783 256.334 444.02 258.598 446.892 261.071 cv
449.767 263.543 452.279 266.225 454.382 269.083 cv
456.484 271.942 458.171 274.98 459.396 278.165 cv
@
grestore
463.479 282.323 mo
463.192 278.425 463.291 275.781 463.34 272.546 cv
452.681 276.642 li
453.544 277.461 456.727 280.908 459.124 283.997 cv
461.691 287.301 463.765 290.395 464.885 292.488 cv
464.317 290.183 463.785 286.496 463.479 282.323 cv
cp
f
gsave
319.47 344.11 mo
464.226 344.11 li
464.226 306.929 li
319.47 306.929 li
cp
clp
2.2636 lw
463.3 307.58 mo
461.615 310.703 459.498 313.708 456.997 316.557 cv
454.496 319.405 451.608 322.097 448.382 324.596 cv
445.157 327.095 441.595 329.4 437.742 331.476 cv
433.888 333.55 429.744 335.396 425.359 336.975 cv
420.973 338.553 416.348 339.863 411.526 340.871 cv
406.703 341.877 401.687 342.578 396.523 342.939 cv
391.359 343.302 386.295 343.303 381.38 342.979 cv
376.464 342.652 371.7 341.998 367.138 341.046 cv
362.574 340.094 358.215 338.842 354.111 337.323 cv
350.005 335.805 346.157 334.017 342.615 331.992 cv
339.074 329.965 335.839 327.702 332.965 325.23 cv
330.091 322.757 327.578 320.076 325.476 317.217 cv
323.373 314.358 321.685 311.32 320.461 308.135 cv
@
grestore
316.378 303.977 mo
316.666 307.875 316.565 310.519 316.518 313.754 cv
327.176 309.659 li
326.315 308.84 323.131 305.392 320.734 302.303 cv
318.168 298.999 316.092 295.906 314.972 293.812 cv
315.541 296.117 316.071 299.804 316.378 303.977 cv
cp
f
%ADOBeginSubsetFont: HIBBAA+Arial-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDV+Arial-ItalicMT gcheck setglobal} if
2 116 71 <0002006cffe804c905ba000f001f00a8b9001dffe0b310113412b8ffe040
5f0e11340903060e041d1903690cb80db60e07160e141d29072315470e57
0e061417012f01210a2c15560a660a053a01320a3c154b01420a4a150618
0f0f0c0b0b14090c001b1f09070f0e0a141f020b0dcc0e580ccc100f5f0f
6f0fa00f040fb80124b621102005262026b9012500182b4e10f44ded4e10
f65d4de4fde4003fed3f3c3fed3f1112392f87100e7dc43130005d5d0171
5d5d2b2b2506232226353412363332171333012301141616333237363534
2623220e0203109ba997c99fef78c66578b4fecea7fe302c6a4a7b648684
64416b69489ab2dfd4c20141a0bf023bfa4601bd6f805580aafa7e8e3a8b
d600>OPRHDV+Arial-ItalicMT AddT42Char 
2 1108 84 <00020069fe69046b043e0010002000ee400bba0c017b19891a861d031eb8
ffe0b30e113413b8ffe040110e11341a163b00390e4f005b006a000622b8
ffc0b32d333422b8ffc04049171c34061e161e570e03171810100d00140c
1b020e0f0f23100d1410100d1b1f09070e280d06141f020b10280f0e0e0e
090f0f581009700d010d0d0910001010103f104f105f100510b801634010
09112005261021280d10101710210a26b9012600182b2b103c2b2b3c2b10
c0014ef44dfd2b7af25d01182f2b7ac001182f5d2b7a10f101182f2b3c01
2f003f2b3c003fed3f2b3c003fed87052e2b7d10c4001112391239870e10
c4c43130015d2b2b712b2b5d005d25062322263534123633321617373301
230114163332361235342623220706070602f29b8e94cc9bf180619f3129
9cfeceb5fe98826152a76b86615f475d35287890e1cfc60140a06d6ec3fa
4303479d978801107f82943e50977400>OPRHDV+Arial-ItalicMT AddT42Char 
OPRHDV+Arial-ItalicMT /CharStrings get begin
/d 71 def
/q 84 def
end
OPRHDV+Arial-ItalicMT /Encoding get
dup 100 /d put
dup 113 /q put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDV+Arial-ItalicMT*1 
[100{/.notdef}rp /d 3{/.notdef}rp /h 7{/.notdef}rp /p /q 142{/.notdef}rp]
OPRHDV+Arial-ItalicMT nf
OPRHDV+Arial-ItalicMT*1 [36.0321 0 0 -36.0321 0 0 ]msf
265.246 675.604 mo
(q)sh
285.28 675.604 mo
(d)sh
257.246 369.489 mo
(q)sh
277.28 369.489 mo
(d)sh
257.246 281.96 mo
(q)sh
277.28 281.96 mo
(d)sh
4.504 lw
498.383 218.205 mo
600.184 218.205 li
@
548.9 164.374 mo
548.9 165.699 547.826 166.773 546.5 166.773 cv
545.174 166.773 544.1 165.699 544.1 164.374 cv
544.1 163.048 545.174 161.974 546.5 161.974 cv
547.826 161.974 548.9 163.048 548.9 164.374 cv
cp
f
1.2011 lw
548.9 164.374 mo
548.9 165.699 547.826 166.773 546.5 166.773 cv
545.174 166.773 544.1 165.699 544.1 164.374 cv
544.1 163.048 545.174 161.974 546.5 161.974 cv
547.826 161.974 548.9 163.048 548.9 164.374 cv
cp
@
4.504 lw
866.246 333.545 mo
1041.96 333.545 li
@
866.246 246.016 mo
1041.96 246.016 li
@
866.246 639.659 mo
1041.96 639.659 li
@
2.252 lw
1056.03 204.434 mo
1056.03 250.037 li
@
1130.13 249.86 mo
1152.52 227.47 li
1129.58 204.528 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 576 15 <000100aafede018300cd000a0064b0852b58b50a030007ab06b801504026
01033c0202010a013c000a020301033c000638073a4f005f006f007f00a0
000500a00ba198182b10f45df4e410ed3c103c003fed3c103c10ed10fded
0111123931301bb507060140000800183f1acd2fcd303159333533151406
0727363637b6cd505732393603cdcd718b264d19615b>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/comma 15 def
end
OPRHDU+ArialMT /Encoding get
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two 
46{/.notdef}rp /a /.notdef /c /d /e /f /.notdef 
/h /i 3{/.notdef}rp /m /n /o /p /q 
2{/.notdef}rp /t /u 138{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1061.52 244.83 mo
(2)sh
1089.07 244.83 mo
(,)sh
1102.84 244.83 mo
(0)sh
1056.03 314.146 mo
1056.03 359.748 li
@
1130.13 359.748 mo
1152.52 337.357 li
1129.58 314.415 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1061.52 354.541 mo
(1)sh
1089.07 354.541 mo
(,)sh
1102.84 354.541 mo
(0)sh
1056.03 607.193 mo
1056.03 652.796 li
@
1130.13 652.622 mo
1152.52 630.228 li
1129.58 607.289 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1061.52 647.589 mo
(0)sh
1089.07 647.589 mo
(,)sh
1102.84 647.589 mo
(0)sh
4.504 lw
1324.21 333.545 mo
1499.92 333.545 li
@
1324.21 230.016 mo
1499.92 230.016 li
@
1324.21 639.659 mo
1499.92 639.659 li
@
2.252 lw
1513.99 208.434 mo
1513.99 254.037 li
@
1548.09 253.86 mo
1570.48 231.47 li
1547.54 208.528 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 438 14 <0001007200ed043a04b6000b0059b0852b58401f006e0902f908036e0507
06096e0a040af905016e3f024f020202190c575a182b4e10f45d4df43ced
3c10e43c3c002ff43cfd3cf431301bb7000500050a070302b80333b16c03
00182f2b333232332f2f3031592511213521113311211521110201fe7101
8faa018ffe71ed0192a8018ffe71a8fe6e00>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/plus 14 def
end
OPRHDU+ArialMT /Encoding get
dup 43 /plus put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /comma 3{/.notdef}rp /zero /one 
/two 46{/.notdef}rp /a /.notdef /c /d /e /f 
/.notdef /h /i 3{/.notdef}rp /m /n /o /p 
/q 2{/.notdef}rp /t /u 138{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1519.48 248.83 mo
(+)sh
1513.99 314.146 mo
1513.99 359.748 li
@
1548.09 359.748 mo
1570.48 337.357 li
1547.54 314.415 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1519.48 354.541 mo
(1)sh
1513.99 607.193 mo
1513.99 652.796 li
@
1548.09 652.622 mo
1570.48 630.228 li
1547.54 607.289 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1519.48 647.589 mo
(0)sh
4.504 lw
866.246 276.016 mo
1041.96 276.016 li
@
2.252 lw
1056.03 254.434 mo
1056.03 300.037 li
@
1130.13 299.86 mo
1152.52 277.47 li
1129.58 254.528 li
@
OPRHDU+ArialMT*1 [49.5441 0 0 -49.5441 0 0 ]msf
1060.52 294.83 mo
(1)sh
1088.07 294.83 mo
(,)sh
1101.84 294.83 mo
(1)sh
4.504 lw
1324.21 288.016 mo
1499.92 288.016 li
@
2.252 lw
1513.99 262.434 mo
1513.99 308.037 li
@
1548.09 307.86 mo
1570.48 285.47 li
1547.54 262.528 li
@
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 2294 66 <0001ffe1fe69048afeeb00030029b0852b58400c013f00021a0500190443
41182b4e10e410e6002f4ded31301bb1000100182f33303159033521151f
04a9fe698282>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/underscore 66 def
end
OPRHDU+ArialMT /Encoding get
dup 95 /underscore put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /comma 3{/.notdef}rp /zero /one 
/two 44{/.notdef}rp /underscore /.notdef /a /.notdef /c /d 
/e /f /.notdef /h /i 3{/.notdef}rp /m /n 
/o /p /q 2{/.notdef}rp /t /u 138{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [60 0 0 -60 0 0 ]msf
1519.48 277.83 mo
(_)sh
gsave
1186.25 255.667 mo
1281.05 255.667 li
1281.05 232.747 li
1186.25 232.747 li
cp
clp
4 lw
[8 6 ] 0 dsh
1186.65 253.707 mo
1280.65 234.707 li
.597284 .512383 .507713 .201328 cmyk
@
grestore
gsave
1273.79 243.831 mo
1294.77 243.831 li
1294.77 227.942 li
1273.79 227.942 li
cp
clp
1284.88 231.762 mo
1281.44 231.438 1279.15 230.962 1276.34 230.444 cv
1278.33 240.333 li
1279.18 239.703 1282.65 237.436 1285.69 235.802 cv
1288.95 234.053 1291.95 232.7 1293.94 232.032 cv
1291.85 232.189 1288.56 232.108 1284.88 231.762 cv
cp
.597284 .512383 .507713 .201328 cmyk
f
4 lw
1284.88 231.762 mo
1281.44 231.438 1279.15 230.962 1276.34 230.444 cv
1278.33 240.333 li
1279.18 239.703 1282.65 237.436 1285.69 235.802 cv
1288.95 234.053 1291.95 232.7 1293.94 232.032 cv
1291.85 232.189 1288.56 232.108 1284.88 231.762 cv
cp
@
grestore
gsave
1186.25 284.405 mo
1281.05 284.405 li
1281.05 261.484 li
1186.25 261.484 li
cp
clp
4 lw
[8 6 ] 0 dsh
1186.65 263.444 mo
1280.65 282.444 li
.597284 .512383 .507713 .201328 cmyk
@
grestore
gsave
1273.79 289.209 mo
1294.77 289.209 li
1294.77 273.321 li
1273.79 273.321 li
cp
clp
1284.88 285.389 mo
1281.44 285.713 1279.15 286.189 1276.34 286.707 cv
1278.33 276.818 li
1279.18 277.449 1282.65 279.716 1285.69 281.349 cv
1288.95 283.098 1291.95 284.451 1293.94 285.119 cv
1291.85 284.962 1288.56 285.043 1284.88 285.389 cv
cp
.597284 .512383 .507713 .201328 cmyk
f
4 lw
1284.88 285.389 mo
1281.44 285.713 1279.15 286.189 1276.34 286.707 cv
1278.33 276.818 li
1279.18 277.449 1282.65 279.716 1285.69 281.349 cv
1288.95 283.098 1291.95 284.451 1293.94 285.119 cv
1291.85 284.962 1288.56 285.043 1284.88 285.389 cv
cp
@
grestore
gsave
750.199 261.032 mo
816.694 261.032 li
816.694 255.576 li
750.199 255.576 li
cp
clp
5.4563 lw
750.199 258.304 mo
816.694 258.304 li
.597284 .512383 .507713 .201328 cmyk
@
grestore
815.596 258.304 mo
812.747 255.456 811.386 249.815 811.275 245.907 cv
815.184 251.156 820.266 255.735 826.408 258.304 cv
820.266 260.763 815.407 265.62 811.275 270.703 cv
811.609 266.515 812.636 261.432 815.596 258.304 cv
cp
.597284 .512383 .507713 .201328 cmyk
f
751.298 258.304 mo
754.146 261.152 755.508 266.792 755.618 270.7 cv
751.71 265.452 746.628 260.872 740.485 258.304 cv
746.628 255.845 751.486 250.988 755.618 245.904 cv
755.284 250.093 754.258 255.176 751.298 258.304 cv
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: PBAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal OPRHDU+ArialMT gcheck setglobal} if
2 108 11 <0001007cfe51026005d30010004eb0852b58400a270f0100101207081010
b80133b3009f0e08b801334011079f0e5e0003100320030303ac119d8c18
2b10f65dfdf6ed10f6ed003f3c3f3c3130015d1bb3000f070100183f3f30
3159012602113437363733060706070615100101df95ce4d5abc8179273d
232b012bfe51bc01f8010eeedafdfbd0598a96bbbdfe1ffe2000>OPRHDU+ArialMT AddT42Char 
2 254 12 <0001007cfe51026005d300100076b0852b58400c2802281002090a100100
1209b80133b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8ff
f8b40f0f02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e02
0eac129d8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1b
b3010f090100183f3f3031591323001134272627262733161716151002fd
81012b2b223d277a81bc5a4dcffe5101e001e1bcb9968a5ad2fbfddaeefe
f2fe0800>OPRHDU+ArialMT AddT42Char 
2 3328 69 <00020086ffe8041f05ba0010001d0212b0852b58407b01050c0f24053505
4505053f1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c
1a5d085d0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e2
13ec17ec19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605
da1df504fa100c10150e040602001b1c0607010a151c0e0b184110fff800
0d000d014000560018fff4000c000c014000560018fff2000b000b014040
22561824d00b01100b400b600b800b041f400d0d02550b0c0f0f02550b18
0d0d02550bb8fff6b40c0c02550bb8fff0b40b0b06550bb8fff4b40f0f06
550bb8ffe0b40c0c06550bb8fff4400b0d0d06550b740111020d0db80140
b45611080c0cb80140b656113300120b0bb80140b45600040d0db8014040
135600040c0c025500040d0d06550033030c0c0cb80140b45603080d0db8
014040195603250202c001019001a001b001f001041f013f014f010301b8
fffeb41010025501b8fffc401d0e0e0255010c0d0d025501100c0c025501
120b0b0255010c0b0b065501b8fff8b41010065501b8fffc40160f0f0655
01180c0c065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b
2b2b5d71723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d
71ed2b2b2b003fed3f3fed3f11391112393130005d015d717200711bb401
0a100e15b8032fb56c0e0b04061bb8032fb46c0607020000183f3f2b393f
2b323f30315921231133113633321e021510002322270314171633323635
3426232206012da7b472b162af7140fef2bdbc6b0234559176aca57576ac
05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>OPRHDU+ArialMT AddT42Char 
2 6340 74 <00020042fe5103ea043e001e002a0229b0852b5840600b0b05142c0b2514
4c0b451406091d191d2c0b26142c23390b36144a0b46145607580b680bfa
0af5150e2e232c273e233e274c27902ca02c07362136293f2c460b462145
2954215429690763216329602c802cda27e821ee23ef271117160615b802
b1b4281c130701b802aa401020003000600070008000c000d0000700b802
7d4010051c1c0f0a45221c0c0a16153325330a4110fff2000b000b014000
56000afff2000c000c01400056000afff8000d000d01404024560a251818
d017011017401760178017042c400b0c02552c400d0d0255171210100255
17b8fff440110f0f025517060e0e025517160d0d025517b8ffea400b0b0b
065517121010065517b8ffeeb40c0c065517b8fffcb40d0d065517410aff
fa000c000c014000560017fffa000d000d0140400c5617740f012500221f
0e0b0bb80140b4561f080d0db80140b4561f0c0c0cb801404017561f24bf
0fcf0fdf0fff0f041f0f3f0f4f0f030f0c0c0cb80140b4560f100d0db801
40402e560f200b0b02550f1a0c0c02550f220d0d02550f1c0b0b06550f0c
0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b2b2b2b2b2b2b
2b5d714ded2b2b2bf4ed10fd2b2b2b2b2b2b2b2b2b2b2b2b5d713c10fd2b
2b2be4f63c003fede43fedfd5de43fede43f3c3130015d71005d711b400a
00000116030000131c05b8032fb56c1c0f0a0c22b8032fb76c0c0a160615
1328b8032fb26c130700183f2b323f3f2b393f2b12392f5f5e5d30315917
171617163332363736270623220235341236333217353311140606232226
13141633323635342623220666af0b3243747d88180e0176b0dbf06ed18d
bc7aa665dba0beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd
9801018c9880fc6af8cf78ab032ad1c0bfccc3c6c300>OPRHDU+ArialMT AddT42Char 
2 11354 85 <00010085000002c6043e00110107b0852b58403b2f130110040123043404
4304530466047404060911080908090d1311090d000308010b1c06070106
000a09289008010822201301130222110e0b0bb80140b45611080d0db801
40b456110c0c0cb80140b45611250100b8ffc04010333634f00001000020
00d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c02
5500060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c
065500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfd
2b2b2be4105df472e4003f3f3fed11393911393901111239390010c9870e
7dc43130005d72015d1bb7000a01060903060bb80336b26c060700183f2b
32323f3f30315933113315363633321707262322060706151185a23e693f
5b5e3e42423b5e141e0426a171483aa727473f6072fdd400>OPRHDU+ArialMT AddT42Char 
2 11678 86 <0001003fffe803b1043e0030041eb0852b58b3170e0b0bb80140b456180e
0b0bb80140b456190e0b0b4137014000560028fff4000c000c0140005600
27fff4000c000c014000560026fff4000c000c014000560025fff4000c00
0c014000560024fff4000c000c014000560023fff4000c000c0140005600
22fff4000c000c014000560021fff4000c000c014000560020fff4000c00
0c0140407c56042214223a094a094424562265227c098e098424a613ab2c
c2030d09171a1817304b2cd617051b025502021032010a185c085c095c0a
5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426b4270f27262427242936
245a0a590b64266428742374248024930a9c0c9228972c9530a40aa90ca3
27a428b326c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4
b40d0d065524b8fff4b40d0d065528b8fff4b40c0c065522b8fff4b40c0c
065523b8fff4b40c0c065524b8fff4b40c0c06551db8ffde40121e395a08
27250c0a041a202615040b2e1d1ab802aa4022192c0b0b02551f193f194f
195f19af19cf19060f191f196f19df19041f198f190219bd025500150000
02aa0001ffc040140b0b025510014001021001d00102000110010201b8ff
c0b314163401b8ffc040100e113401012e5c1d6c1d021d1c150704b8fff4
b40b0b025504b8ffe6b41010065504b8ffe640130f0f0655041c2e0b1f1a
011a24194013183432b8ffc040320f0f025519180f0f025519180d0d0255
19160c0c025519201010065519200f0f065519100c0c065519160d0d0655
19160c0c4109014000560019025b0007fff2000b000b0140b35607242ab8
ffc0b51c39d02a012ab8ffe6b40c0c02552ab8ffe8b40f0f02552ab8ffe8
b40c0c06552ab8ffeab40d0d06552abbfff4000c000c0140b3562a1a32b8
ffc04021272a346032c032023f3280320232100101012400180d0d025500
100d0d06550020b8fff4b40d0d025520b8fff4b41010065520b8fff4b70f
0f0655200e0b0bb8014040165620240f100b0b02550f160c0c02550f200d
0d02550fb8fffa40140f0f02550f0e0c0c06550f0c0d0d06550f060c0cb8
01404011560f22df00013f004f00020019313437182b4e10f45d714df42b
2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b712b4d
ed2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f2b2b5d
71722be410fd5d71722be41112391112390111121739313043794040272d
1e2305142c261110121013100306220d201b000928071b01052d071b011e
14201b00210e231b0022230d0c08290a1b012827090a062b041b001f101d
1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b2b2b2b
2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b1b400a00
01011d0b26261d2e04b8032fb76c2e0b191a1a151db8032fb26c15070018
3f2b322f333f2b1139113311392f33303159133716163332363534272627
2e023534363736363332161617072626232206151417161716171e021514
06062322263fb20f897b7c78352593c6994f41382a91537dbd5a11b00c73
697c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d231825324981
4e4779281f2b487b6718525c5237231c1d130a2433417c5c5a9f57ac>OPRHDU+ArialMT AddT42Char 
2 13836 90 <00010006000005b70426001205ecbc0000fff2000b000b0140b4560e0e0b
0bbe01400056000cfff4000c000d0140b456020c0c0db80140b45610040d
0db80140b45605040d0db80140b45606020d0d410d014000560003fffc00
0d000d014000560000ffea000d000d0140b45610060c0cb80140b4560606
0c0c410d014000560009fffa000c000c01400056000efffa000c000c0140
b4560f060c0c410d014000560012fffa000c000c014000560008fffa000c
000c0140b45607060c0cbe01400056000cfff2000b000b0140b456020e0b
0bb80140b45610060b0bb80140b45606040b0b410d014000560009fffc00
0b000b01400056000efff4000b000b0140b4560f0c0b0b410d0140005600
12fff4000b000b014000560008fff4000b000b0140b456070c0b0b410d01
400056000afff4000d000d014000560004fff4000d000d0140b45611220b
0b410d01400056000affe8000b000b014000560004ffe8000b000b0140b4
5611200d0db80140b45611220c0c410e01400056000affde000c000c0140
00560004ffde000c000c01400056b10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f53b00243b040505a58b40d
200c2002bcffe00001ffe0000effd0b400300f2012b8ffe0013838383838
383838594bb03453b00243b040505a58b90008ffd0b10730013838594bb0
21534bb033515ab00243b040505a58b90008ffe0b10720013838594bb012
534bb01e515ab00243b040505a58b9000effd0b60f200d200c2008b8ffd0
b2073012b8ffe0b2003802baffe00001ffe0013838383838383838383859
4bb012534bb017515ab00243b040505a58b90011ffe0b30a200420003838
385959313001435c58b9000effd4b61239002c123900b8ffd4b113392b2b
2b592b2b2b2b2b5d71722b2b2b002b2b2b715d015d59002b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
21013313173637133313173713330123032703014bfebbbaa93f0433a9b9
9f353db6affeb4bba929d70426fd9be411ca026efd98cbcd0266fbda027c
b5fccf00>OPRHDU+ArialMT AddT42Char 
OPRHDU+ArialMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/b 69 def
/g 74 def
/r 85 def
/s 86 def
/w 90 def
end
OPRHDU+ArialMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 98 /b put
dup 103 /g put
dup 114 /r put
dup 115 /s put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/OPRHDU+ArialMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus /comma 
3{/.notdef}rp /zero /one /two 44{/.notdef}rp /underscore /.notdef /a 
/b /c /d /e /f /g /h /i 
3{/.notdef}rp /m /n /o /p /q /r /s 
/t /u /.notdef /w 136{/.notdef}rp]
OPRHDU+ArialMT nf
OPRHDU+ArialMT*1 [36 0 0 -36 0 0 ]msf
228.281 36.707 mo
(\()sh
240.269 36.707 mo
(a)sh
260.285 36.707 mo
(\))sh
272.273 36.707 mo
( )sh
282.281 36.707 mo
(b)sh
302.297 36.707 mo
(a)sh
322.313 36.707 mo
(r)sh
334.3 36.707 mo
(e)sh
354.316 36.707 mo
( )sh
364.324 36.707 mo
(s)sh
382.324 36.707 mo
(t)sh
392.332 36.707 mo
(a)sh
412.348 36.707 mo
(t)sh
422.356 36.707 mo
(e)sh
442.372 36.707 mo
(s)sh
840.766 33.1206 mo
(\()sh
852.753 33.1206 mo
(b)sh
872.769 33.1206 mo
(\))sh
884.757 33.1206 mo
( )sh
894.765 33.1206 mo
(c)sh
912.765 33.1206 mo
(o)sh
932.781 33.1206 mo
(m)sh
962.769 33.1206 mo
(b)sh
982.785 33.1206 mo
(i)sh
990.777 33.1206 mo
(n)sh
1010.79 33.1206 mo
(e)sh
1030.81 33.1206 mo
(d)sh
1050.82 33.1206 mo
( )sh
1060.83 33.1206 mo
(s)sh
1078.83 33.1206 mo
(t)sh
1088.84 33.1206 mo
(a)sh
1108.86 33.1206 mo
(t)sh
1118.86 33.1206 mo
(e)sh
1138.88 33.1206 mo
(s)sh
1156.88 33.1206 mo
( )sh
873.769 76.1206 mo
(w)sh
899.761 76.1206 mo
(i)sh
907.753 76.1206 mo
(t)sh
917.761 76.1206 mo
(h)sh
937.777 76.1206 mo
(o)sh
957.793 76.1206 mo
(u)sh
977.809 76.1206 mo
(t)sh
987.817 76.1206 mo
( )sh
997.825 76.1206 mo
(d)sh
1017.84 76.1206 mo
(r)sh
1029.83 76.1206 mo
(e)sh
1049.84 76.1206 mo
(s)sh
1067.84 76.1206 mo
(s)sh
1085.84 76.1206 mo
(i)sh
1093.84 76.1206 mo
(n)sh
1113.85 76.1206 mo
(g)sh
1271.27 33.1206 mo
(\()sh
1283.26 33.1206 mo
(c)sh
1301.26 33.1206 mo
(\))sh
1313.24 33.1206 mo
( )sh
1323.25 33.1206 mo
(c)sh
1341.25 33.1206 mo
(o)sh
1361.27 33.1206 mo
(m)sh
1391.26 33.1206 mo
(b)sh
1411.27 33.1206 mo
(i)sh
1419.26 33.1206 mo
(n)sh
1439.28 33.1206 mo
(e)sh
1459.3 33.1206 mo
(d)sh
1479.31 33.1206 mo
( )sh
1489.32 33.1206 mo
(s)sh
1507.32 33.1206 mo
(t)sh
1517.33 33.1206 mo
(a)sh
1537.34 33.1206 mo
(t)sh
1547.35 33.1206 mo
(e)sh
1567.37 33.1206 mo
(s)sh
1585.37 33.1206 mo
( )sh
1328.28 76.1206 mo
(w)sh
1354.28 76.1206 mo
(i)sh
1362.27 76.1206 mo
(t)sh
1372.28 76.1206 mo
(h)sh
1392.29 76.1206 mo
( )sh
1402.3 76.1206 mo
(d)sh
1422.32 76.1206 mo
(r)sh
1434.3 76.1206 mo
(e)sh
1454.32 76.1206 mo
(s)sh
1472.32 76.1206 mo
(s)sh
1490.32 76.1206 mo
(i)sh
1498.31 76.1206 mo
(n)sh
1518.33 76.1206 mo
(g)sh
1848.54 -1.38965 mo
.69482 .6318 .621515 .583612 cmyk
f
1 lw
1848.54 -1.38965 mo
@
1713.04 104.604 mo
f
1713.04 104.604 mo
@
548.9 197 mo
548.9 198.326 547.826 199.4 546.5 199.4 cv
545.174 199.4 544.1 198.326 544.1 197 cv
544.1 195.674 545.174 194.6 546.5 194.6 cv
547.826 194.6 548.9 195.674 548.9 197 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1.2011 lw
548.9 197 mo
548.9 198.326 547.826 199.4 546.5 199.4 cv
545.174 199.4 544.1 198.326 544.1 197 cv
544.1 195.674 545.174 194.6 546.5 194.6 cv
547.826 194.6 548.9 195.674 548.9 197 cv
cp
@
548.9 180.687 mo
548.9 182.013 547.826 183.087 546.5 183.087 cv
545.174 183.087 544.1 182.013 544.1 180.687 cv
544.1 179.361 545.174 178.287 546.5 178.287 cv
547.826 178.287 548.9 179.361 548.9 180.687 cv
cp
f
548.9 180.687 mo
548.9 182.013 547.826 183.087 546.5 183.087 cv
545.174 183.087 544.1 182.013 544.1 180.687 cv
544.1 179.361 545.174 178.287 546.5 178.287 cv
547.826 178.287 548.9 179.361 548.9 180.687 cv
cp
@
951.4 187.687 mo
951.4 189.012 950.326 190.086 949 190.086 cv
947.674 190.086 946.6 189.012 946.6 187.687 cv
946.6 186.361 947.674 185.287 949 185.287 cv
950.326 185.287 951.4 186.361 951.4 187.687 cv
cp
f
951.4 187.687 mo
951.4 189.012 950.326 190.086 949 190.086 cv
947.674 190.086 946.6 189.012 946.6 187.687 cv
946.6 186.361 947.674 185.287 949 185.287 cv
950.326 185.287 951.4 186.361 951.4 187.687 cv
cp
@
951.4 220.313 mo
951.4 221.639 950.326 222.713 949 222.713 cv
947.674 222.713 946.6 221.639 946.6 220.313 cv
946.6 218.987 947.674 217.913 949 217.913 cv
950.326 217.913 951.4 218.987 951.4 220.313 cv
cp
f
951.4 220.313 mo
951.4 221.639 950.326 222.713 949 222.713 cv
947.674 222.713 946.6 221.639 946.6 220.313 cv
946.6 218.987 947.674 217.913 949 217.913 cv
950.326 217.913 951.4 218.987 951.4 220.313 cv
cp
@
951.4 204 mo
951.4 205.326 950.326 206.4 949 206.4 cv
947.674 206.4 946.6 205.326 946.6 204 cv
946.6 202.674 947.674 201.6 949 201.6 cv
950.326 201.6 951.4 202.674 951.4 204 cv
cp
f
951.4 204 mo
951.4 205.326 950.326 206.4 949 206.4 cv
947.674 206.4 946.6 205.326 946.6 204 cv
946.6 202.674 947.674 201.6 949 201.6 cv
950.326 201.6 951.4 202.674 951.4 204 cv
cp
@
1413 175.187 mo
1413 176.513 1411.93 177.587 1410.6 177.587 cv
1409.27 177.587 1408.2 176.513 1408.2 175.187 cv
1408.2 173.861 1409.27 172.787 1410.6 172.787 cv
1411.93 172.787 1413 173.861 1413 175.187 cv
cp
f
1413 175.187 mo
1413 176.513 1411.93 177.587 1410.6 177.587 cv
1409.27 177.587 1408.2 176.513 1408.2 175.187 cv
1408.2 173.861 1409.27 172.787 1410.6 172.787 cv
1411.93 172.787 1413 173.861 1413 175.187 cv
cp
@
1413 207.813 mo
1413 209.139 1411.93 210.213 1410.6 210.213 cv
1409.27 210.213 1408.2 209.139 1408.2 207.813 cv
1408.2 206.488 1409.27 205.414 1410.6 205.414 cv
1411.93 205.414 1413 206.488 1413 207.813 cv
cp
f
1413 207.813 mo
1413 209.139 1411.93 210.213 1410.6 210.213 cv
1409.27 210.213 1408.2 209.139 1408.2 207.813 cv
1408.2 206.488 1409.27 205.414 1410.6 205.414 cv
1411.93 205.414 1413 206.488 1413 207.813 cv
cp
@
1413 191.5 mo
1413 192.826 1411.93 193.9 1410.6 193.9 cv
1409.27 193.9 1408.2 192.826 1408.2 191.5 cv
1408.2 190.175 1409.27 189.101 1410.6 189.101 cv
1411.93 189.101 1413 190.175 1413 191.5 cv
cp
f
1413 191.5 mo
1413 192.826 1411.93 193.9 1410.6 193.9 cv
1409.27 193.9 1408.2 192.826 1408.2 191.5 cv
1408.2 190.175 1409.27 189.101 1410.6 189.101 cv
1411.93 189.101 1413 190.175 1413 191.5 cv
cp
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
/OPRHDU+ArialMT*1 uf
/OPRHDU+ArialMT uf
/PBAAAA+ArialMT uf
/OPRHDX+CourierNewPS-BoldItalicMT*1 uf
/OPRHDX+CourierNewPS-BoldItalicMT uf
/GFNBAA+CourierNewPS-BoldItalicMT uf
/OPRHDV+Arial-ItalicMT*1 uf
/OPRHDV+Arial-ItalicMT uf
/HIBBAA+Arial-ItalicMT uf
/OPRHDW+Symbol*1 uf
/OPRHDW+Symbol uf
/QJJAAA+Symbol uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
